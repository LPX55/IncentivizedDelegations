{
	"id": "fe518fc3aae95719550c73b4dd53d5c5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol": {
				"content": "// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\n// Uncomment this line to use console.log\n// import \"hardhat/console.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {Pausable} from \"@openzeppelin/contracts/security/Pausable.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport {IRedelegationReward} from \"./IRedelegationReward.sol\";\n\nimport \"./Staking.sol\";\nimport \"./Distribution.sol\";\n\nerror ZeroAmount();\nerror WaitToFinish();\nerror NotEnoughBalance();\nerror TooHighReward();\nerror FailedToWithdrawStaking();\n\n/**\n * Stakes tokens for a certain duration and gets rewards according to their\n * staked shares\n */\ncontract RedelegationReward is IRedelegationReward, Ownable, Pausable, ReentrancyGuard {\n    string[] private stakingMethods = [MSG_REDELEGATE];\n    mapping(address => bool) private approvedUsers;\n\n    /// @dev Approves the required transactions for delegation and withdrawal of staking rewards transactions.\n    /// @dev This creates a Cosmos Authorization Grants for the given methods.\n    /// @dev This emits an Approval event.\n    function approveRequiredMethods() public {\n        bool success = STAKING_CONTRACT.approve(\n            msg.sender,\n            type(uint256).max,\n            stakingMethods\n        );\n        require(success, \"Failed to approve delegate method\");\n        approvedUsers[msg.sender] = true; // Track the user as approved\n\n    }\n\n\n    using SafeERC20 for IERC20;\n\n    // Address to staking ERC20 token\n    IERC20 public stakingToken;\n    // Address to rewards ERC20 token\n    IERC20 public rewardsToken;\n    // Block timestamp of the end of reward session\n    uint256 public periodFinish;\n    // Reward rate\n    uint256 public rewardRate;\n    // Rewards duration in seconds\n    uint256 public rewardsDuration = 2 days;\n    // Last timestamp of funding in seconds\n    uint256 public lastUpdateTime;\n    // Accumulated rewards token\n    uint256 public rewardPerTokenStored;\n\n    // Mapping for accumulated rewards token as temporary store\n    mapping(address => uint256) public userRewardPerTokenPaid;\n    // Mapping for rewards amount, <user account, rewards amount>\n    mapping(address => uint256) public rewards;\n\n    // Total staked token amount\n    uint256 private totalSupply;\n    // Balances of staked token per user\n    mapping(address => uint256) private balances;\n\n    /* -------------------------------------------------------------------------- */\n    /*                                   Events                                   */\n    /* -------------------------------------------------------------------------- */\n\n    /**\n    * Emitted when user stakes staking token\n    */\n    event Redelegate(address indexed account, uint256 amount);\n    /**\n    * Emited when user unstakes his/her staked token\n    */\n    event CancelRedelegate(address indexed account, uint256 amount);\n    /**\n    * Emitted when user claim his/her rewards token\n    */\n    event Claimed(address indexed account, uint256 amount);\n    /**\n    * Emitted when owner funds rewards token and restart rewarding session\n    */\n    event Funded(uint256 amount);\n    /**\n    * Emitted when rewards duration has been updated\n    */\n    event RewardsDurationUpdated(uint256 duration);\n    /**\n    * Emitted when owner recovered tokens from this contract\n    */\n    event Recovered(address token, uint256 amount);\n\n    /* -------------------------------------------------------------------------- */\n    /*                                  Modifier                                  */\n    /* -------------------------------------------------------------------------- */\n\n    modifier updateReward(address account) {\n    rewardPerTokenStored = _rewardPerToken();\n    lastUpdateTime = _lastTimeRewardApplicable();\n    if (account != address(0)) {\n        rewards[account] = _earned(account);\n        userRewardPerTokenPaid[account] = rewardPerTokenStored;\n    }\n    _;\n    }\n\n  /* -------------------------------------------------------------------------- */\n  /*                             External Functions                             */\n  /* -------------------------------------------------------------------------- */\n\n  /**\n   * @dev Constructor\n   * @param rewardsToken_ Address to rewards ERC20 token\n   * @param duration Reward duration in seconds\n   */\n  constructor(address rewardsToken_, uint256 duration) {\n    rewardsToken = IERC20(rewardsToken_);\n    stakingToken = IERC20(address(0xBeFe898407483f0f2fF605971FBD8Cf8FbD8B160));\n    rewardsDuration = duration;\n  }\n\n  /**\n   * @notice Set rewards duration, only available to set after finish\n   * of previous rewards period.\n   * @dev Callable by owner\n   * @param duration New rewards duration\n   */\n  function setRewardsDuration(uint256 duration) external onlyOwner {\n    if (block.timestamp < periodFinish) {\n      revert WaitToFinish();\n    }\n    rewardsDuration = duration;\n    emit RewardsDurationUpdated(duration);\n  }\n\n\n    /// @dev Redelegate the staked tokens from one validator to another\n    /// @param _srcValidatorAddr The address of the source validator\n    /// @param _dstValidatorAddr The address of the destination validator\n    /// @param _amount The amount of tokens to redelegate\n    function redelegateTokens(\n        string memory _srcValidatorAddr,\n        string memory _dstValidatorAddr,\n        uint256 _amount\n    ) public whenNotPaused updateReward(msg.sender) returns (int64) {\n        if (_amount <= 0) {\n            revert ZeroAmount();\n        }\n        int64 completionTime = STAKING_CONTRACT.redelegate(msg.sender, _srcValidatorAddr, _dstValidatorAddr, _amount);\n        totalSupply = totalSupply + _amount;\n        balances[msg.sender] += _amount;\n        emit Redelegate(msg.sender, _amount);\n        return completionTime;\n    }\n    /// @dev Redelegate the staked tokens from multiple validators to others\n    /// @param _srcValidatorAddrs The addresses of the source validators\n    /// @param _dstValidatorAddrs The addresses of the destination validators\n    /// @param _amounts The amounts of tokens to redelegate\n    function redelegateTokensMultiple(\n        string[] memory _srcValidatorAddrs,\n        string[] memory _dstValidatorAddrs,\n        uint256[] memory _amounts\n    ) public whenNotPaused{\n        require(\n            _srcValidatorAddrs.length == _dstValidatorAddrs.length &&\n            _dstValidatorAddrs.length == _amounts.length,\n            \"Input arrays length mismatch\"\n        );\n        for (uint256 i = 0; i < _srcValidatorAddrs.length; i++) {\n            redelegateTokens(_srcValidatorAddrs[i], _dstValidatorAddrs[i], _amounts[i]);\n        }\n    }\n\n\n  /**\n   * @notice Claim rewards tokens, callable only when unpaused.\n   * @dev Callable only when unpaused\n   */\n  function claim() public nonReentrant whenNotPaused updateReward(msg.sender) {\n    uint256 reward = rewards[msg.sender];\n    if (reward > 0) {\n      rewards[msg.sender] = 0;\n      rewardsToken.safeTransfer(msg.sender, reward);\n      emit Claimed(msg.sender, reward);\n    }\n  }\n\n  /**\n   * @notice Fund rewards tokens and re-calculate rewards rate.\n   * Rewards rate will be calculated again from remaining distributable tokens\n   * and awarding rewards tokens.\n   * @dev Callable only when unpaused and by owner\n   * @param reward Funding rewards token amount\n   */\n  function fund(\n    uint256 reward\n  ) public onlyOwner whenNotPaused updateReward(address(0)) {\n    if (block.timestamp >= periodFinish) {\n      rewardRate = reward / rewardsDuration;\n    } else {\n      uint256 remaining = periodFinish - block.timestamp;\n      uint256 leftover = remaining * rewardRate;\n      rewardRate = (reward + leftover) / rewardsDuration;\n    }\n\n    // Ensure the provided reward amount is not more than the balance in the contract.\n    // This keeps the reward rate in the right range, preventing overflows due to\n    // very high values of rewardRate in the earned() and rewardsPerToken()\n    // Reward + leftover must be less than 2^256 / 10^18 to avoid overflow.\n    rewardsToken.safeTransferFrom(msg.sender, address(this), reward);\n    uint256 balance = rewardsToken.balanceOf(address(this));\n    if (rewardRate > balance / rewardsDuration) {\n      revert TooHighReward();\n    }\n\n    lastUpdateTime = block.timestamp;\n    periodFinish = block.timestamp + rewardsDuration;\n\n    emit Funded(reward);\n  }\n\n  /**\n   * @notice Transfer ERC20 tokens back from this contract to the owner\n   * except staking token.\n   * @dev Callable by owner\n   * @param tokenAddress Recovering token address\n   * @param tokenAmount Recovering token amount\n   */\n  function recoverERC20(\n    address tokenAddress,\n    uint256 tokenAmount\n  ) external onlyOwner {\n    if (tokenAddress == address(stakingToken)) {\n      revert FailedToWithdrawStaking();\n    }\n    IERC20(tokenAddress).safeTransfer(owner(), tokenAmount);\n    emit Recovered(tokenAddress, tokenAmount);\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*                             Internal Functions                             */\n  /* -------------------------------------------------------------------------- */\n\n  function _lastTimeRewardApplicable() internal view returns (uint256) {\n    return block.timestamp < periodFinish ? block.timestamp : periodFinish;\n  }\n\n  function _rewardPerToken() internal view returns (uint256) {\n    if (totalSupply == 0) {\n      return rewardPerTokenStored;\n    }\n    return\n      rewardPerTokenStored +\n      ((_lastTimeRewardApplicable() - lastUpdateTime) * rewardRate * 1e18) /\n      totalSupply;\n  }\n\n  function _earned(address account) internal view returns (uint256) {\n    return\n      (balances[account] *\n        (_rewardPerToken() - userRewardPerTokenPaid[account])) /\n      1e18 +\n      rewards[account];\n  }\n\n  /* -------------------------------------------------------------------------- */\n  /*                               View Functions                               */\n  /* -------------------------------------------------------------------------- */\n\n  /**\n   * @return Returns totalSupplyLocked\n   */\n  function totalSupplyLocked() external view returns (uint256) {\n    return totalSupply;\n  }\n  /**\n   * @param account User address\n   * @return Returns balance of staked amount per user.\n   */\n  function balanceOf(address account) external view returns (uint256) {\n    return balances[account];\n  }\n\n  /**\n   * @return Returns last time to calculate rewards.\n   * If now is less than the last time, returns now.\n   */\n  function lastTimeRewardApplicable() external view returns (uint256) {\n    return _lastTimeRewardApplicable();\n  }\n\n  /**\n   * @return Returns total amount of calculated rewards.\n   */\n  function rewardPerToken() external view returns (uint256) {\n    return _rewardPerToken();\n  }\n\n  /**\n   * @param account User address\n   * @return Returns earned rewards per user.\n   */\n  function earned(address account) external view returns (uint256) {\n    return _earned(account);\n  }\n\n  /**\n   * @return Returns total rewards amount for current duration.\n   */\n  function getRewardForDuration() external view returns (uint256) {\n    return rewardRate * rewardsDuration;\n  }\n\n    /// @dev Checks if a user has executed the approveRequiredMethods function.\n    /// @param _user The address of the user to check.\n    /// @return A boolean indicating if the user is approved.\n    function isUserApproved(address _user) public view returns (bool) {\n        return approvedUsers[_user];\n    }\n\n}"
			},
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/Distribution.sol": {
				"content": "// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17 .0;\n\nimport \"./GenericAuthorization.sol\" as genericAuth;\nimport \"./Types.sol\";\n\n/// @dev The DistributionI contract's address.\naddress constant DISTRIBUTION_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000801;\n\n/// @dev Define all the available distribution methods.\nstring constant MSG_SET_WITHDRAWER_ADDRESS = \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\";\nstring constant MSG_WITHDRAW_DELEGATOR_REWARD = \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\";\nstring constant MSG_WITHDRAW_VALIDATOR_COMMISSION = \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\";\n\n/// @dev The DistributionI contract's instance.\nDistributionI constant DISTRIBUTION_CONTRACT = DistributionI(DISTRIBUTION_PRECOMPILE_ADDRESS);\n\nstruct ValidatorSlashEvent {\n    uint64 validatorPeriod;\n    Dec fraction;\n}\n\nstruct ValidatorDistributionInfo {\n    string operatorAddress;\n    DecCoin[] selfBondRewards;\n    DecCoin[] commission;\n}\n\nstruct DelegationDelegatorReward {\n    string validatorAddress;\n    DecCoin[] reward;\n}\n\n/// @author Evmos Team\n/// @title Distribution Precompile Contract\n/// @dev The interface through which solidity contracts will interact with Distribution\n/// @custom:address 0x0000000000000000000000000000000000000801\ninterface DistributionI is genericAuth.GenericAuthorizationI {\n    /// TRANSACTIONS\n    /// @dev Change the address, that can withdraw the rewards of a delegator.\n    /// Note that this address cannot be a module account.\n    /// @param delegatorAddress The address of the delegator\n    /// @param withdrawerAddress The address that will be capable of withdrawing rewards for\n    /// the given delegator address\n    function setWithdrawAddress(\n        address delegatorAddress,\n        string memory withdrawerAddress\n    ) external returns (bool success);\n\n    /// @dev Withdraw the rewards of a delegator from a validator\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @return amount The amount of Coin withdrawn\n    function withdrawDelegatorRewards(\n        address delegatorAddress,\n        string memory validatorAddress\n    )\n    external\n    returns (\n        Coin[] calldata amount\n    );\n\n    /// @dev Withdraws the rewards commission of a validator.\n    /// @param validatorAddress The address of the validator\n    /// @return amount The amount of Coin withdrawn\n    function withdrawValidatorCommission(\n        string memory validatorAddress\n    )\n    external\n    returns (\n        Coin[] calldata amount\n    );\n\n    /// QUERIES\n    /// @dev Queries validator commission and self-delegation rewards for validator.\n    /// @param validatorAddress The address of the validator\n    /// @return distributionInfo The validator's distribution info\n    function validatorDistributionInfo(\n        string memory validatorAddress\n    )\n    external\n    view\n    returns (\n        ValidatorDistributionInfo[] calldata distributionInfo // FIXME: remove unnecessary slice\n    );\n\n    /// @dev Queries the outstanding rewards of a validator address.\n    /// @param validatorAddress The address of the validator\n    /// @return rewards The validator's outstanding rewards\n    function validatorOutstandingRewards(\n        string memory validatorAddress\n    )\n    external\n    view\n    returns (\n        DecCoin[] calldata rewards\n    );\n\n    /// @dev Queries the accumulated commission for a validator.\n    /// @param validatorAddress The address of the validator\n    /// @return commission The validator's commission\n    function validatorCommission(\n        string memory validatorAddress\n    )\n    external\n    view\n    returns (\n        DecCoin[] calldata commission\n    );\n\n    /// @dev Queries the slashing events for a validator in a given height interval\n    /// defined by the starting and ending height.\n    /// @param validatorAddress The address of the validator\n    /// @param startingHeight The starting height\n    /// @param endingHeight The ending height\n    /// @return slashes The validator's slash events\n    /// @return pageResponse The pagination response for the query\n    function validatorSlashes(\n        string memory validatorAddress,\n        uint64 startingHeight,\n        uint64 endingHeight\n    )\n    external\n    view\n    returns (\n        ValidatorSlashEvent[] calldata slashes,\n        PageResponse calldata pageResponse\n    );\n\n    /// @dev Queries the total rewards accrued by a delegation from a specific address to a given validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @return rewards The total rewards accrued by a delegation.\n    function delegationRewards(\n        address delegatorAddress,\n        string memory validatorAddress\n    )\n    external\n    view\n    returns (\n        DecCoin[] calldata rewards\n    );\n\n    /// @dev Queries the total rewards accrued by each validator, that a given\n    /// address has delegated to.\n    /// @param delegatorAddress The address of the delegator\n    /// @return rewards The total rewards accrued by each validator for a delegator.\n    /// @return total The total rewards accrued by a delegator.\n    function delegationTotalRewards(\n        address delegatorAddress\n    )\n    external\n    view\n    returns (\n        DelegationDelegatorReward[] calldata rewards,\n        DecCoin[] calldata total\n    );\n\n    /// @dev Queries all validators, that a given address has delegated to.\n    /// @param delegatorAddress The address of the delegator\n    /// @return validators The addresses of all validators, that were delegated to by the given address.\n    function delegatorValidators(\n        address delegatorAddress\n    ) external view returns (string[] calldata validators);\n\n    /// @dev Queries the address capable of withdrawing rewards for a given delegator.\n    /// @param delegatorAddress The address of the delegator\n    /// @return withdrawAddress The address capable of withdrawing rewards for the delegator.\n    function delegatorWithdrawAddress(\n        address delegatorAddress\n    ) external view returns (string memory withdrawAddress);\n\n    /// @dev SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set\n    /// @param caller the caller of the transaction\n    /// @param withdrawerAddress the newly set withdrawer address\n    event SetWithdrawerAddress(\n        address indexed caller,\n        string withdrawerAddress\n    );\n\n    /// @dev WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn\n    /// @param delegatorAddress the address of the delegator\n    /// @param validatorAddress the address of the validator\n    /// @param amount the amount being withdrawn from the delegation\n    event WithdrawDelegatorRewards(\n        address indexed delegatorAddress,\n        string indexed validatorAddress,\n        uint256 amount\n    );\n\n    /// @dev WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn\n    /// @param validatorAddress is the address of the validator\n    /// @param commission is the total commission earned by the validator\n    event WithdrawValidatorCommission(\n        string indexed validatorAddress,\n        uint256 commission\n    );\n}\n"
			},
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/Staking.sol": {
				"content": "// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\nimport \"./Authorization.sol\" as authorization;\nimport \"./Types.sol\";\n\n/// @dev The StakingI contract's address.\naddress constant STAKING_PRECOMPILE_ADDRESS = 0x0000000000000000000000000000000000000800;\n\n/// @dev The StakingI contract's instance.\nStakingI constant STAKING_CONTRACT = StakingI(STAKING_PRECOMPILE_ADDRESS);\n\n/// @dev Define all the available staking methods.\nstring constant MSG_DELEGATE = \"/cosmos.staking.v1beta1.MsgDelegate\";\nstring constant MSG_UNDELEGATE = \"/cosmos.staking.v1beta1.MsgUndelegate\";\nstring constant MSG_REDELEGATE = \"/cosmos.staking.v1beta1.MsgBeginRedelegate\";\nstring constant MSG_CANCEL_UNDELEGATION = \"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation\";\n\n/// @dev Defines the initial commission rates to be used for creating\n/// a validator.\nstruct CommissionRates {\n    uint256 rate;\n    uint256 maxRate;\n    uint256 maxChangeRate;\n}\n\n/// @dev Defines commission parameters for a given validator.\nstruct Commission {\n    CommissionRates commissionRates;\n    uint256 updateTime;\n}\n\n\n/// @dev Represents a validator in the staking module.\nstruct Validator {\n    string operatorAddress;\n    string consensusPubkey;\n    bool jailed;\n    BondStatus status;\n    uint256 tokens;\n    uint256 delegatorShares;\n    string description;\n    int64 unbondingHeight;\n    int64 unbondingTime;\n    uint256 commission;\n    uint256 minSelfDelegation;\n}\n\nstruct RedelegationResponse {\n    Redelegation redelegation;\n    RedelegationEntryResponse[] entries;\n}\n\nstruct Redelegation {\n    RedelegationEntry[] entries;\n}\n\nstruct RedelegationEntryResponse {\n    RedelegationEntry redelegationEntry;\n    uint256 balance;\n}\n\nstruct RedelegationEntry {\n    int64 creationHeight;\n    int64 completionTime;\n    uint256 initialBalance;\n    uint256 sharesDst;\n}\n\nstruct UnbondingDelegationEntry {\n    int64 creationHeight;\n    int64 completionTime;\n    uint256 initialBalance;\n    uint256 balance;\n}\n\nstruct PageRequest {\n    bytes key;\n    uint64 offset;\n    uint64 limit;\n    bool countTotal;\n    bool reverse;\n}\n\n/// @dev The status of the validator.\nenum BondStatus {\n    Unspecified,\n    Unbonded,\n    Unbonding,\n    Bonded\n}\n\n/// @author Evmos Team\n/// @title Staking Precompiled Contract\n/// @dev The interface through which solidity contracts will interact with staking.\n/// We follow this same interface including four-byte function selectors, in the precompile that\n/// wraps the pallet.\n/// @custom:address 0x0000000000000000000000000000000000000800\ninterface StakingI is authorization.AuthorizationI {\n    /// @dev Defines a method for performing a delegation of coins from a delegator to a validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of the Coin to be delegated to the validator\n    function delegate(\n        address delegatorAddress,\n        string memory validatorAddress,\n        uint256 amount\n    ) external returns (int64 completionTime);\n\n    /// @dev Defines a method for performing an undelegation from a delegate and a validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount to be undelegated from the validator\n    /// @return completionTime The time when the undelegation is completed\n    function undelegate(\n        address delegatorAddress,\n        string memory validatorAddress,\n        uint256 amount\n    ) external returns (int64 completionTime);\n\n    /// @dev Defines a method for performing a redelegation\n    /// of coins from a delegator and source validator to a destination validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorSrcAddress The validator from which the redelegation is initiated\n    /// @param validatorDstAddress The validator to which the redelegation is destined\n    /// @param amount The amount to be redelegated to the validator\n    /// @return completionTime The time when the redelegation is completed\n    function redelegate(\n        address delegatorAddress,\n        string memory validatorSrcAddress,\n        string memory validatorDstAddress,\n        uint256 amount\n    ) external returns (int64 completionTime);\n\n    /// @dev Allows delegators to cancel the unbondingDelegation entry\n    /// and to delegate back to a previous validator.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of the Coin\n    /// @param creationHeight The height at which the unbonding took place\n    /// @return completionTime The time when the cancellation of the unbonding delegation is completed\n    function cancelUnbondingDelegation(\n        address delegatorAddress,\n        string memory validatorAddress,\n        uint256 amount,\n        uint256 creationHeight\n    ) external returns (int64 completionTime);\n\n    /// @dev Queries the given amount of the bond denomination to a validator.\n    /// @param delegatorAddress The address of the delegator.\n    /// @param validatorAddress The address of the validator.\n    /// @return shares The amount of shares, that the delegator has received.\n    /// @return balance The amount in Coin, that the delegator has delegated to the given validator.\n    function delegation(\n        address delegatorAddress,\n        string memory validatorAddress\n    ) external view returns (uint256 shares, Coin calldata balance);\n\n    /// @dev Returns the delegation shares and coins, that are currently\n    /// unbonding for a given delegator and validator pair.\n    /// @param delegatorAddress The address of the delegator.\n    /// @param validatorAddress The address of the validator.\n    /// @return entries The delegations that are currently unbonding.\n    function unbondingDelegation(\n        address delegatorAddress,\n        string memory validatorAddress\n    ) external view returns (UnbondingDelegationEntry[] calldata entries);\n\n    /// @dev Queries validator info for a given validator address.\n    /// @param validatorAddress The address of the validator.\n    /// @return validators The validator info for the given validator address.\n    function validator(\n        string memory validatorAddress\n    )\n    external view returns (\n        Validator[] calldata validators\n    );\n\n    /// @dev Queries all validators that match the given status.\n    /// @param status Enables to query for validators matching a given status.\n    /// @param pageRequest Defines an optional pagination for the request.\n    function validators(\n        string memory status,\n        PageRequest calldata pageRequest\n    ) external view returns (\n        Validator[] calldata validators,\n        PageResponse calldata pageResponse\n    );\n\n    /// @dev Queries all redelegations from a source to a destination validator for a given delegator.\n    /// @param delegatorAddress The address of the delegator.\n    /// @param srcValidatorAddress Defines the validator address to redelegate from.\n    /// @param dstValidatorAddress Defines the validator address to redelegate to.\n    /// @return entries The active redelegations for the given delegator, source and destination validator combination.\n    function redelegation(\n        address delegatorAddress,\n        string memory srcValidatorAddress,\n        string memory dstValidatorAddress\n    ) external view returns (RedelegationEntry[] calldata entries);\n\n    /// @dev Queries all redelegations from a source to to a destination validator\n    /// for a given delegator in a specified pagination manner.\n    /// @param delegatorAddress The address of the delegator.\n    /// @param srcValidatorAddress Defines the validator address to redelegate from.\n    /// @param dstValidatorAddress Defines the validator address to redelegate to.\n    /// @param pageRequest Defines an optional pagination for the request.\n    /// @return response Holds the redelegations for the given delegator, source and destination validator combination.\n    function redelegations(\n        address delegatorAddress,\n        string memory srcValidatorAddress,\n        string memory dstValidatorAddress,\n        PageRequest calldata pageRequest\n    ) external view returns (RedelegationResponse calldata response);\n\n    /// @dev Delegate defines an Event emitted when a given amount of tokens are delegated from the\n    /// delegator address to the validator address.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of Coin being delegated\n    /// @param newShares The new delegation shares being held\n    event Delegate(\n        address indexed delegatorAddress,\n        string indexed validatorAddress,\n        uint256 amount,\n        uint256 newShares\n    );\n\n    /// @dev Unbond defines an Event emitted when a given amount of tokens are unbonded from the\n    /// validator address to the delegator address.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of Coin being unbonded\n    /// @param completionTime The time at which the unbonding is completed\n    event Unbond(\n        address indexed delegatorAddress,\n        string indexed validatorAddress,\n        uint256 amount,\n        uint256 completionTime\n    );\n\n    /// @dev Redelegate defines an Event emitted when a given amount of tokens are redelegated from\n    /// the source validator address to the destination validator address.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorSrcAddress The address of the validator from which the delegation is retracted\n    /// @param validatorDstAddress The address of the validator to which the delegation is directed\n    /// @param amount The amount of Coin being redelegated\n    /// @param completionTime The time at which the redelegation is completed\n    event Redelegate(\n        address indexed delegatorAddress,\n        string indexed validatorSrcAddress,\n        string indexed validatorDstAddress,\n        uint256 amount,\n        uint256 completionTime\n    );\n\n    /// @dev CancelUnbondingDelegation defines an Event emitted when a given amount of tokens\n    /// that are in the process of unbonding from the validator address are bonded again.\n    /// @param delegatorAddress The address of the delegator\n    /// @param validatorAddress The address of the validator\n    /// @param amount The amount of Coin that was in the unbonding process which is to be cancelled\n    /// @param creationHeight The block height at which the unbonding of a delegation was initiated\n    event CancelUnbondingDelegation(\n        address indexed delegatorAddress,\n        string indexed validatorAddress,\n        uint256 amount,\n        uint256 creationHeight\n    );\n}\n"
			},
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/IRedelegationReward.sol": {
				"content": "// SPDX-License-Identifier: LGPL-v3\r\npragma solidity >=0.8.17;\r\n\r\ninterface IRedelegationReward {\r\n  function balanceOf(address account) external view returns (uint256);\r\n\r\n  function totalSupplyLocked() external view returns (uint256);\r\n\r\n  function redelegateTokens(\r\n      string memory _srcValidatorAddr,\r\n      string memory _dstValidatorAddr,\r\n      uint256 _amount\r\n  ) external returns (int64);\r\n\r\n  function redelegateTokensMultiple(\r\n      string[] memory _srcValidatorAddrs,\r\n      string[] memory _dstValidatorAddrs,\r\n      uint256[] memory _amounts\r\n  ) external;\r\n  \r\n  function earned(address account) external view returns (uint256);\r\n\r\n  function getRewardForDuration() external view returns (uint256);\r\n\r\n  function lastTimeRewardApplicable() external view returns (uint256);\r\n\r\n  function rewardPerToken() external view returns (uint256);\r\n\r\n  function claim() external;\r\n\r\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n     * 0 before setting it to a non-zero value.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n     * Revert on invalid signature.\n     */\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/Types.sol": {
				"content": "// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\nstruct Dec {\n    uint256 value;\n    uint8 precision;\n}\n\n/// @dev Coin is a struct that represents a token with a denomination and an amount.\nstruct Coin {\n    string denom;\n    uint256 amount;\n}\n\n/// @dev DecCoin is a struct that represents a token with a denomination, an amount and a precision.\nstruct DecCoin {\n    string denom;\n    uint256 amount;\n    uint8 precision;\n}\n\n/// @dev PageResponse is a struct that represents a page response.\nstruct PageResponse {\n    bytes nextKey;\n    uint64 total;\n}\n"
			},
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/Authorization.sol": {
				"content": "// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\n/// @author Evmos Team\n/// @title Authorization Interface\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\ninterface AuthorizationI {\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param amount The amount of tokens to be spent.\n    /// @param methods The message type URLs of the methods to approve.\n    /// @return approved Boolean value to indicate if the approval was successful.\n    function approve(\n        address spender,\n        uint256 amount,\n        string[] calldata methods\n    ) external returns (bool approved);\n\n    /// @dev Increase the allowance of a given spender by a specific amount of tokens for IBC\n    /// transfer methods or staking.\n    /// @param spender The address which will spend the funds.\n    /// @param amount The amount of tokens to be spent.\n    /// @param methods The message type URLs of the methods to approve.\n    /// @return approved Boolean value to indicate if the approval was successful.\n    function increaseAllowance(\n        address spender,\n        uint256 amount,\n        string[] calldata methods\n    ) external returns (bool approved);\n\n    /// @dev Decreases the allowance of a given spender by a specific amount of tokens for IBC\n    /// transfer methods or staking.\n    /// @param spender The address which will spend the funds.\n    /// @param amount The amount of tokens to be spent.\n    /// @param methods The message type URLs of the methods to approve.\n    /// @return approved Boolean value to indicate if the approval was successful.\n    function decreaseAllowance(\n        address spender,\n        uint256 amount,\n        string[] calldata methods\n    ) external returns (bool approved);\n\n\n    /// @dev Returns the remaining number of tokens that spender will be allowed to spend\n    /// on behalf of the owner through IBC transfer methods or staking. This is zero by default.\n    /// @param owner The address of the account owning tokens.\n    /// @param spender The address of the account able to transfer the tokens.\n    /// @param method The message type URL of the methods for which the approval should be queried.\n    /// @return remaining The remaining number of tokens available to be spent.\n    function allowance(\n        address owner,\n        address spender,\n        string calldata method\n    ) external view returns (uint256 remaining);\n\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\n    /// the approval was set.\n    /// @param owner The owner of the tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods for which the approval is set.\n    /// @param value The amount of tokens approved to be spent.\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        string[] methods,\n        uint256 value\n    );\n\n    /// @dev This event is emitted when the allowance of a spender is changed by a call to the decrease or increase\n    /// allowance method. The values field specifies the new allowances and the methods field holds the\n    /// information for which methods the approval was set.\n    /// @param owner The owner of the tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods for which the approval is set.\n    /// @param values The amounts of tokens approved to be spent.\n    event AllowanceChange(\n        address indexed owner,\n        address indexed spender,\n        string[] methods,\n        uint256[] values\n    );\n}\n"
			},
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/GenericAuthorization.sol": {
				"content": "// SPDX-License-Identifier: LGPL-v3\npragma solidity >=0.8.17;\n\n/// @author Evmos Team\n/// @title Authorization Interface\n/// @dev The interface through which solidity contracts will interact with smart contract approvals.\ninterface GenericAuthorizationI {\n    /// @dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods to approve.\n    /// @return approved Boolean value to indicate if the approval was successful.\n    function approve(\n        address spender,\n        string[] calldata methods\n    ) external returns (bool approved);\n\n    /// @dev This event is emitted when the allowance of a spender is set by a call to the approve method.\n    /// The value field specifies the new allowance and the methods field holds the information for which methods\n    /// the approval was set.\n    /// @param owner The owner of the tokens.\n    /// @param spender The address which will spend the funds.\n    /// @param methods The message type URLs of the methods for which the approval is set.\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        string[] methods\n    );\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 231,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6912  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":701:6912  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b56816fa5a621d400ff6489900c7137e2b45c33c78aa53293a5c982718d5d74864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b56816fa5a621d400ff6489900c7137e2b45c33c78aa53293a5c982718d5d74864736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 PUSH9 0x16FA5A621D400FF648 SWAP10 STOP 0xC7 SGT PUSH31 0x2B45C33C78AA53293A5C982718D5D74864736F6C6343000812003300000000 ",
							"sourceMap": "701:6211:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b56816fa5a621d400ff6489900c7137e2b45c33c78aa53293a5c982718d5d74864736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 PUSH9 0x16FA5A621D400FF648 SWAP10 STOP 0xC7 SGT PUSH31 0x2B45C33C78AA53293A5C982718D5D74864736F6C6343000812003300000000 ",
							"sourceMap": "701:6211:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 701,
									"end": 6912,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b56816fa5a621d400ff6489900c7137e2b45c33c78aa53293a5c982718d5d74864736f6c63430008120033",
									".code": [
										{
											"begin": 701,
											"end": 6912,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 701,
											"end": 6912,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/Authorization.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/Distribution.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/GenericAuthorization.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/IRedelegationReward.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/Staking.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/Types.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204ececf723dd1af425b4cc69ff789b6daf6b1eeb4f7211c8aa18f8e20c32e1be664736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ececf723dd1af425b4cc69ff789b6daf6b1eeb4f7211c8aa18f8e20c32e1be664736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xCE 0xCF PUSH19 0x3DD1AF425B4CC69FF789B6DAF6B1EEB4F7211C DUP11 LOG1 DUP16 DUP15 KECCAK256 0xC3 0x2E SHL 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:9169:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204ececf723dd1af425b4cc69ff789b6daf6b1eeb4f7211c8aa18f8e20c32e1be664736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E 0xCE 0xCF PUSH19 0x3DD1AF425B4CC69FF789B6DAF6B1EEB4F7211C DUP11 LOG1 DUP16 DUP15 KECCAK256 0xC3 0x2E SHL 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:9169:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204ececf723dd1af425b4cc69ff789b6daf6b1eeb4f7211c8aa18f8e20c32e1be664736f6c63430008120033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/Authorization.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/Distribution.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/GenericAuthorization.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/IRedelegationReward.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/Staking.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/Types.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/Authorization.sol": {
				"AuthorizationI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "AllowanceChange",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "method",
									"type": "string"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "remaining",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Evmos Team",
						"details": "The interface through which solidity contracts will interact with smart contract approvals.",
						"events": {
							"AllowanceChange(address,address,string[],uint256[])": {
								"details": "This event is emitted when the allowance of a spender is changed by a call to the decrease or increase allowance method. The values field specifies the new allowances and the methods field holds the information for which methods the approval was set.",
								"params": {
									"methods": "The message type URLs of the methods for which the approval is set.",
									"owner": "The owner of the tokens.",
									"spender": "The address which will spend the funds.",
									"values": "The amounts of tokens approved to be spent."
								}
							},
							"Approval(address,address,string[],uint256)": {
								"details": "This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.",
								"params": {
									"methods": "The message type URLs of the methods for which the approval is set.",
									"owner": "The owner of the tokens.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens approved to be spent."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address,string)": {
								"details": "Returns the remaining number of tokens that spender will be allowed to spend on behalf of the owner through IBC transfer methods or staking. This is zero by default.",
								"params": {
									"method": "The message type URL of the methods for which the approval should be queried.",
									"owner": "The address of the account owning tokens.",
									"spender": "The address of the account able to transfer the tokens."
								},
								"returns": {
									"remaining": "The remaining number of tokens available to be spent."
								}
							},
							"approve(address,uint256,string[])": {
								"details": "Approves a list of Cosmos or IBC transactions with a specific amount of tokens.",
								"params": {
									"amount": "The amount of tokens to be spent.",
									"methods": "The message type URLs of the methods to approve.",
									"spender": "The address which will spend the funds."
								},
								"returns": {
									"approved": "Boolean value to indicate if the approval was successful."
								}
							},
							"decreaseAllowance(address,uint256,string[])": {
								"details": "Decreases the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.",
								"params": {
									"amount": "The amount of tokens to be spent.",
									"methods": "The message type URLs of the methods to approve.",
									"spender": "The address which will spend the funds."
								},
								"returns": {
									"approved": "Boolean value to indicate if the approval was successful."
								}
							},
							"increaseAllowance(address,uint256,string[])": {
								"details": "Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.",
								"params": {
									"amount": "The amount of tokens to be spent.",
									"methods": "The message type URLs of the methods to approve.",
									"spender": "The address which will spend the funds."
								},
								"returns": {
									"approved": "Boolean value to indicate if the approval was successful."
								}
							}
						},
						"title": "Authorization Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address,string)": "fc08930c",
							"approve(address,uint256,string[])": "b6039895",
							"decreaseAllowance(address,uint256,string[])": "f007d286",
							"increaseAllowance(address,uint256,string[])": "a386a63c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"AllowanceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Evmos Team\",\"details\":\"The interface through which solidity contracts will interact with smart contract approvals.\",\"events\":{\"AllowanceChange(address,address,string[],uint256[])\":{\"details\":\"This event is emitted when the allowance of a spender is changed by a call to the decrease or increase allowance method. The values field specifies the new allowances and the methods field holds the information for which methods the approval was set.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\",\"values\":\"The amounts of tokens approved to be spent.\"}},\"Approval(address,address,string[],uint256)\":{\"details\":\"This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens approved to be spent.\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,string)\":{\"details\":\"Returns the remaining number of tokens that spender will be allowed to spend on behalf of the owner through IBC transfer methods or staking. This is zero by default.\",\"params\":{\"method\":\"The message type URL of the methods for which the approval should be queried.\",\"owner\":\"The address of the account owning tokens.\",\"spender\":\"The address of the account able to transfer the tokens.\"},\"returns\":{\"remaining\":\"The remaining number of tokens available to be spent.\"}},\"approve(address,uint256,string[])\":{\"details\":\"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"decreaseAllowance(address,uint256,string[])\":{\"details\":\"Decreases the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"increaseAllowance(address,uint256,string[])\":{\"details\":\"Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}}},\"title\":\"Authorization Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gist-e259420aec8d85ea2219e4154536ad35/contracts/Authorization.sol\":\"AuthorizationI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"gist-e259420aec8d85ea2219e4154536ad35/contracts/Authorization.sol\":{\"keccak256\":\"0xf77a5f9eb42b7f546d2beeb49e1c120f0491620fbf1402a687ac34a275c6cb05\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://166523692d8779b98a4963ab4a9f5a9aeb4ade68803051b88816de82496ffda7\",\"dweb:/ipfs/QmYCndS9oDJ3cF7A5admkYN2SyZzBg6129DBjvYKSd8Bnv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/Distribution.sol": {
				"DistributionI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "withdrawerAddress",
									"type": "string"
								}
							],
							"name": "SetWithdrawerAddress",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawDelegatorRewards",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "commission",
									"type": "uint256"
								}
							],
							"name": "WithdrawValidatorCommission",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								}
							],
							"name": "delegationRewards",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "denom",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "precision",
											"type": "uint8"
										}
									],
									"internalType": "struct DecCoin[]",
									"name": "rewards",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								}
							],
							"name": "delegationTotalRewards",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "validatorAddress",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "string",
													"name": "denom",
													"type": "string"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint8",
													"name": "precision",
													"type": "uint8"
												}
											],
											"internalType": "struct DecCoin[]",
											"name": "reward",
											"type": "tuple[]"
										}
									],
									"internalType": "struct DelegationDelegatorReward[]",
									"name": "rewards",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "string",
											"name": "denom",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "precision",
											"type": "uint8"
										}
									],
									"internalType": "struct DecCoin[]",
									"name": "total",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								}
							],
							"name": "delegatorValidators",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "validators",
									"type": "string[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								}
							],
							"name": "delegatorWithdrawAddress",
							"outputs": [
								{
									"internalType": "string",
									"name": "withdrawAddress",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "withdrawerAddress",
									"type": "string"
								}
							],
							"name": "setWithdrawAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								}
							],
							"name": "validatorCommission",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "denom",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "precision",
											"type": "uint8"
										}
									],
									"internalType": "struct DecCoin[]",
									"name": "commission",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								}
							],
							"name": "validatorDistributionInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "operatorAddress",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "string",
													"name": "denom",
													"type": "string"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint8",
													"name": "precision",
													"type": "uint8"
												}
											],
											"internalType": "struct DecCoin[]",
											"name": "selfBondRewards",
											"type": "tuple[]"
										},
										{
											"components": [
												{
													"internalType": "string",
													"name": "denom",
													"type": "string"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												},
												{
													"internalType": "uint8",
													"name": "precision",
													"type": "uint8"
												}
											],
											"internalType": "struct DecCoin[]",
											"name": "commission",
											"type": "tuple[]"
										}
									],
									"internalType": "struct ValidatorDistributionInfo[]",
									"name": "distributionInfo",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								}
							],
							"name": "validatorOutstandingRewards",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "denom",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "precision",
											"type": "uint8"
										}
									],
									"internalType": "struct DecCoin[]",
									"name": "rewards",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								},
								{
									"internalType": "uint64",
									"name": "startingHeight",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "endingHeight",
									"type": "uint64"
								}
							],
							"name": "validatorSlashes",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint64",
											"name": "validatorPeriod",
											"type": "uint64"
										},
										{
											"components": [
												{
													"internalType": "uint256",
													"name": "value",
													"type": "uint256"
												},
												{
													"internalType": "uint8",
													"name": "precision",
													"type": "uint8"
												}
											],
											"internalType": "struct Dec",
											"name": "fraction",
											"type": "tuple"
										}
									],
									"internalType": "struct ValidatorSlashEvent[]",
									"name": "slashes",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "nextKey",
											"type": "bytes"
										},
										{
											"internalType": "uint64",
											"name": "total",
											"type": "uint64"
										}
									],
									"internalType": "struct PageResponse",
									"name": "pageResponse",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								}
							],
							"name": "withdrawDelegatorRewards",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "denom",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct Coin[]",
									"name": "amount",
									"type": "tuple[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								}
							],
							"name": "withdrawValidatorCommission",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "denom",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct Coin[]",
									"name": "amount",
									"type": "tuple[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Evmos Team",
						"custom:address": "0x0000000000000000000000000000000000000801",
						"details": "The interface through which solidity contracts will interact with Distribution",
						"events": {
							"Approval(address,address,string[])": {
								"details": "This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.",
								"params": {
									"methods": "The message type URLs of the methods for which the approval is set.",
									"owner": "The owner of the tokens.",
									"spender": "The address which will spend the funds."
								}
							},
							"SetWithdrawerAddress(address,string)": {
								"details": "SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set",
								"params": {
									"caller": "the caller of the transaction",
									"withdrawerAddress": "the newly set withdrawer address"
								}
							},
							"WithdrawDelegatorRewards(address,string,uint256)": {
								"details": "WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn",
								"params": {
									"amount": "the amount being withdrawn from the delegation",
									"delegatorAddress": "the address of the delegator",
									"validatorAddress": "the address of the validator"
								}
							},
							"WithdrawValidatorCommission(string,uint256)": {
								"details": "WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn",
								"params": {
									"commission": "is the total commission earned by the validator",
									"validatorAddress": "is the address of the validator"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,string[])": {
								"details": "Approves a list of Cosmos or IBC transactions with a specific amount of tokens.",
								"params": {
									"methods": "The message type URLs of the methods to approve.",
									"spender": "The address which will spend the funds."
								},
								"returns": {
									"approved": "Boolean value to indicate if the approval was successful."
								}
							},
							"delegationRewards(address,string)": {
								"details": "Queries the total rewards accrued by a delegation from a specific address to a given validator.",
								"params": {
									"delegatorAddress": "The address of the delegator",
									"validatorAddress": "The address of the validator"
								},
								"returns": {
									"rewards": "The total rewards accrued by a delegation."
								}
							},
							"delegationTotalRewards(address)": {
								"details": "Queries the total rewards accrued by each validator, that a given address has delegated to.",
								"params": {
									"delegatorAddress": "The address of the delegator"
								},
								"returns": {
									"rewards": "The total rewards accrued by each validator for a delegator.",
									"total": "The total rewards accrued by a delegator."
								}
							},
							"delegatorValidators(address)": {
								"details": "Queries all validators, that a given address has delegated to.",
								"params": {
									"delegatorAddress": "The address of the delegator"
								},
								"returns": {
									"validators": "The addresses of all validators, that were delegated to by the given address."
								}
							},
							"delegatorWithdrawAddress(address)": {
								"details": "Queries the address capable of withdrawing rewards for a given delegator.",
								"params": {
									"delegatorAddress": "The address of the delegator"
								},
								"returns": {
									"withdrawAddress": "The address capable of withdrawing rewards for the delegator."
								}
							},
							"setWithdrawAddress(address,string)": {
								"details": "Change the address, that can withdraw the rewards of a delegator. Note that this address cannot be a module account.",
								"params": {
									"delegatorAddress": "The address of the delegator",
									"withdrawerAddress": "The address that will be capable of withdrawing rewards for the given delegator address"
								}
							},
							"validatorCommission(string)": {
								"details": "Queries the accumulated commission for a validator.",
								"params": {
									"validatorAddress": "The address of the validator"
								},
								"returns": {
									"commission": "The validator's commission"
								}
							},
							"validatorDistributionInfo(string)": {
								"details": "Queries validator commission and self-delegation rewards for validator.",
								"params": {
									"validatorAddress": "The address of the validator"
								},
								"returns": {
									"distributionInfo": "The validator's distribution info"
								}
							},
							"validatorOutstandingRewards(string)": {
								"details": "Queries the outstanding rewards of a validator address.",
								"params": {
									"validatorAddress": "The address of the validator"
								},
								"returns": {
									"rewards": "The validator's outstanding rewards"
								}
							},
							"validatorSlashes(string,uint64,uint64)": {
								"details": "Queries the slashing events for a validator in a given height interval defined by the starting and ending height.",
								"params": {
									"endingHeight": "The ending height",
									"startingHeight": "The starting height",
									"validatorAddress": "The address of the validator"
								},
								"returns": {
									"pageResponse": "The pagination response for the query",
									"slashes": "The validator's slash events"
								}
							},
							"withdrawDelegatorRewards(address,string)": {
								"details": "Withdraw the rewards of a delegator from a validator",
								"params": {
									"delegatorAddress": "The address of the delegator",
									"validatorAddress": "The address of the validator"
								},
								"returns": {
									"amount": "The amount of Coin withdrawn"
								}
							},
							"withdrawValidatorCommission(string)": {
								"details": "Withdraws the rewards commission of a validator.",
								"params": {
									"validatorAddress": "The address of the validator"
								},
								"returns": {
									"amount": "The amount of Coin withdrawn"
								}
							}
						},
						"title": "Distribution Precompile Contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,string[])": "7a9841ed",
							"delegationRewards(address,string)": "9ad563b4",
							"delegationTotalRewards(address)": "54be1a28",
							"delegatorValidators(address)": "a66cb605",
							"delegatorWithdrawAddress(address)": "5431f450",
							"setWithdrawAddress(address,string)": "5a9d9a96",
							"validatorCommission(string)": "3dd40f78",
							"validatorDistributionInfo(string)": "54212a89",
							"validatorOutstandingRewards(string)": "85b2d2da",
							"validatorSlashes(string,uint64,uint64)": "a75395a5",
							"withdrawDelegatorRewards(address,string)": "b46a8d61",
							"withdrawValidatorCommission(string)": "3ce4e3be"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"withdrawerAddress\",\"type\":\"string\"}],\"name\":\"SetWithdrawerAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawDelegatorRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"}],\"name\":\"WithdrawValidatorCommission\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"delegationRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"}],\"name\":\"delegationTotalRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"reward\",\"type\":\"tuple[]\"}],\"internalType\":\"struct DelegationDelegatorReward[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"total\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"}],\"name\":\"delegatorValidators\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"validators\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"}],\"name\":\"delegatorWithdrawAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"withdrawAddress\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"withdrawerAddress\",\"type\":\"string\"}],\"name\":\"setWithdrawAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"validatorCommission\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"commission\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"validatorDistributionInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"operatorAddress\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"selfBondRewards\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"commission\",\"type\":\"tuple[]\"}],\"internalType\":\"struct ValidatorDistributionInfo[]\",\"name\":\"distributionInfo\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"validatorOutstandingRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct DecCoin[]\",\"name\":\"rewards\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"startingHeight\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endingHeight\",\"type\":\"uint64\"}],\"name\":\"validatorSlashes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"validatorPeriod\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"precision\",\"type\":\"uint8\"}],\"internalType\":\"struct Dec\",\"name\":\"fraction\",\"type\":\"tuple\"}],\"internalType\":\"struct ValidatorSlashEvent[]\",\"name\":\"slashes\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"nextKey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"total\",\"type\":\"uint64\"}],\"internalType\":\"struct PageResponse\",\"name\":\"pageResponse\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"withdrawDelegatorRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Coin[]\",\"name\":\"amount\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"withdrawValidatorCommission\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Coin[]\",\"name\":\"amount\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Evmos Team\",\"custom:address\":\"0x0000000000000000000000000000000000000801\",\"details\":\"The interface through which solidity contracts will interact with Distribution\",\"events\":{\"Approval(address,address,string[])\":{\"details\":\"This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\"}},\"SetWithdrawerAddress(address,string)\":{\"details\":\"SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set\",\"params\":{\"caller\":\"the caller of the transaction\",\"withdrawerAddress\":\"the newly set withdrawer address\"}},\"WithdrawDelegatorRewards(address,string,uint256)\":{\"details\":\"WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn\",\"params\":{\"amount\":\"the amount being withdrawn from the delegation\",\"delegatorAddress\":\"the address of the delegator\",\"validatorAddress\":\"the address of the validator\"}},\"WithdrawValidatorCommission(string,uint256)\":{\"details\":\"WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn\",\"params\":{\"commission\":\"is the total commission earned by the validator\",\"validatorAddress\":\"is the address of the validator\"}}},\"kind\":\"dev\",\"methods\":{\"approve(address,string[])\":{\"details\":\"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\",\"params\":{\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"delegationRewards(address,string)\":{\"details\":\"Queries the total rewards accrued by a delegation from a specific address to a given validator.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"rewards\":\"The total rewards accrued by a delegation.\"}},\"delegationTotalRewards(address)\":{\"details\":\"Queries the total rewards accrued by each validator, that a given address has delegated to.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\"},\"returns\":{\"rewards\":\"The total rewards accrued by each validator for a delegator.\",\"total\":\"The total rewards accrued by a delegator.\"}},\"delegatorValidators(address)\":{\"details\":\"Queries all validators, that a given address has delegated to.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\"},\"returns\":{\"validators\":\"The addresses of all validators, that were delegated to by the given address.\"}},\"delegatorWithdrawAddress(address)\":{\"details\":\"Queries the address capable of withdrawing rewards for a given delegator.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\"},\"returns\":{\"withdrawAddress\":\"The address capable of withdrawing rewards for the delegator.\"}},\"setWithdrawAddress(address,string)\":{\"details\":\"Change the address, that can withdraw the rewards of a delegator. Note that this address cannot be a module account.\",\"params\":{\"delegatorAddress\":\"The address of the delegator\",\"withdrawerAddress\":\"The address that will be capable of withdrawing rewards for the given delegator address\"}},\"validatorCommission(string)\":{\"details\":\"Queries the accumulated commission for a validator.\",\"params\":{\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"commission\":\"The validator's commission\"}},\"validatorDistributionInfo(string)\":{\"details\":\"Queries validator commission and self-delegation rewards for validator.\",\"params\":{\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"distributionInfo\":\"The validator's distribution info\"}},\"validatorOutstandingRewards(string)\":{\"details\":\"Queries the outstanding rewards of a validator address.\",\"params\":{\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"rewards\":\"The validator's outstanding rewards\"}},\"validatorSlashes(string,uint64,uint64)\":{\"details\":\"Queries the slashing events for a validator in a given height interval defined by the starting and ending height.\",\"params\":{\"endingHeight\":\"The ending height\",\"startingHeight\":\"The starting height\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"pageResponse\":\"The pagination response for the query\",\"slashes\":\"The validator's slash events\"}},\"withdrawDelegatorRewards(address,string)\":{\"details\":\"Withdraw the rewards of a delegator from a validator\",\"params\":{\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"amount\":\"The amount of Coin withdrawn\"}},\"withdrawValidatorCommission(string)\":{\"details\":\"Withdraws the rewards commission of a validator.\",\"params\":{\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"amount\":\"The amount of Coin withdrawn\"}}},\"title\":\"Distribution Precompile Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setWithdrawAddress(address,string)\":{\"notice\":\"TRANSACTIONS\"},\"validatorDistributionInfo(string)\":{\"notice\":\"QUERIES\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gist-e259420aec8d85ea2219e4154536ad35/contracts/Distribution.sol\":\"DistributionI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"gist-e259420aec8d85ea2219e4154536ad35/contracts/Distribution.sol\":{\"keccak256\":\"0x5250e099fd5d9f9c620639684f83f73279cf15324bd22d368d0c89405812a5f8\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://bec29684c2cc51f3a1f349f7a10507173af0e251edc49be0504def823f4bf547\",\"dweb:/ipfs/QmfFzvuE9vF5qcYvq9k44kyssvTibQg6dziuG818D2hVXA\"]},\"gist-e259420aec8d85ea2219e4154536ad35/contracts/GenericAuthorization.sol\":{\"keccak256\":\"0x43cd09da97b0a409dd0228e57192e7efd38b3f96a6811791483197544d0c318e\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://a32a8a36ca1b14cf5996eb8155576a4d88a2bfc9e8ec96adc75f5518a8d4903a\",\"dweb:/ipfs/QmWjr1J3yi7wdqGmnVccoMYmic6HgaiNUCQBUsaC1GfPqc\"]},\"gist-e259420aec8d85ea2219e4154536ad35/contracts/Types.sol\":{\"keccak256\":\"0x2280bf7e63e011c5263d33ae3cf64673e27ee08226116a5ae289a05c026e5cc8\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://e5c63f09b85147d1343d16c828110369fea9535c1ad69d7855f1f6f04208eaa7\",\"dweb:/ipfs/QmQFbYkU3ao25UjSYDqUUP1sPEzFJqJnT2xAgfo5g2ghmA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"setWithdrawAddress(address,string)": {
								"notice": "TRANSACTIONS"
							},
							"validatorDistributionInfo(string)": {
								"notice": "QUERIES"
							}
						},
						"version": 1
					}
				}
			},
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/GenericAuthorization.sol": {
				"GenericAuthorizationI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Evmos Team",
						"details": "The interface through which solidity contracts will interact with smart contract approvals.",
						"events": {
							"Approval(address,address,string[])": {
								"details": "This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.",
								"params": {
									"methods": "The message type URLs of the methods for which the approval is set.",
									"owner": "The owner of the tokens.",
									"spender": "The address which will spend the funds."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,string[])": {
								"details": "Approves a list of Cosmos or IBC transactions with a specific amount of tokens.",
								"params": {
									"methods": "The message type URLs of the methods to approve.",
									"spender": "The address which will spend the funds."
								},
								"returns": {
									"approved": "Boolean value to indicate if the approval was successful."
								}
							}
						},
						"title": "Authorization Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,string[])": "7a9841ed"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Evmos Team\",\"details\":\"The interface through which solidity contracts will interact with smart contract approvals.\",\"events\":{\"Approval(address,address,string[])\":{\"details\":\"This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\"}}},\"kind\":\"dev\",\"methods\":{\"approve(address,string[])\":{\"details\":\"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\",\"params\":{\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}}},\"title\":\"Authorization Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gist-e259420aec8d85ea2219e4154536ad35/contracts/GenericAuthorization.sol\":\"GenericAuthorizationI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"gist-e259420aec8d85ea2219e4154536ad35/contracts/GenericAuthorization.sol\":{\"keccak256\":\"0x43cd09da97b0a409dd0228e57192e7efd38b3f96a6811791483197544d0c318e\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://a32a8a36ca1b14cf5996eb8155576a4d88a2bfc9e8ec96adc75f5518a8d4903a\",\"dweb:/ipfs/QmWjr1J3yi7wdqGmnVccoMYmic6HgaiNUCQBUsaC1GfPqc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/IRedelegationReward.sol": {
				"IRedelegationReward": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardForDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_srcValidatorAddr",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_dstValidatorAddr",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "redelegateTokens",
							"outputs": [
								{
									"internalType": "int64",
									"name": "",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string[]",
									"name": "_srcValidatorAddrs",
									"type": "string[]"
								},
								{
									"internalType": "string[]",
									"name": "_dstValidatorAddrs",
									"type": "string[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "redelegateTokensMultiple",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupplyLocked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address)": "70a08231",
							"claim()": "4e71d92d",
							"earned(address)": "008cc262",
							"getRewardForDuration()": "1c1f78eb",
							"lastTimeRewardApplicable()": "80faa57d",
							"redelegateTokens(string,string,uint256)": "880b0e43",
							"redelegateTokensMultiple(string[],string[],uint256[])": "6c11fe9b",
							"rewardPerToken()": "cd3daf9d",
							"totalSupplyLocked()": "58341922"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardForDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_srcValidatorAddr\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dstValidatorAddr\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"redelegateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_srcValidatorAddrs\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_dstValidatorAddrs\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"redelegateTokensMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupplyLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gist-e259420aec8d85ea2219e4154536ad35/contracts/IRedelegationReward.sol\":\"IRedelegationReward\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"gist-e259420aec8d85ea2219e4154536ad35/contracts/IRedelegationReward.sol\":{\"keccak256\":\"0x93f645b89674442a8cac93753dad5434877a93400d91c0595c8ba4eed171e953\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://57c6967357429e0c9722b11a6536f88c2c00731ff21e5d2441204fe40e927dd4\",\"dweb:/ipfs/QmZ67gX2YjFFP28cwD2FZFcWVxpgabQrYPQsUuXayyzdtg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol": {
				"RedelegationReward": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "rewardsToken_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "FailedToWithdrawStaking",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TooHighReward",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "WaitToFinish",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAmount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "CancelRedelegate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Funded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Recovered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Redelegate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "RewardsDurationUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "approveRequiredMethods",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "fund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardForDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "isUserApproved",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodFinish",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "recoverERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_srcValidatorAddr",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_dstValidatorAddr",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "redelegateTokens",
							"outputs": [
								{
									"internalType": "int64",
									"name": "",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string[]",
									"name": "_srcValidatorAddrs",
									"type": "string[]"
								},
								{
									"internalType": "string[]",
									"name": "_dstValidatorAddrs",
									"type": "string[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "redelegateTokensMultiple",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "setRewardsDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupplyLocked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"approveRequiredMethods()": {
								"details": "Approves the required transactions for delegation and withdrawal of staking rewards transactions.This creates a Cosmos Authorization Grants for the given methods.This emits an Approval event."
							},
							"balanceOf(address)": {
								"params": {
									"account": "User address"
								},
								"returns": {
									"_0": "Returns balance of staked amount per user."
								}
							},
							"claim()": {
								"details": "Callable only when unpaused"
							},
							"constructor": {
								"details": "Constructor",
								"params": {
									"duration": "Reward duration in seconds",
									"rewardsToken_": "Address to rewards ERC20 token"
								}
							},
							"earned(address)": {
								"params": {
									"account": "User address"
								},
								"returns": {
									"_0": "Returns earned rewards per user."
								}
							},
							"fund(uint256)": {
								"details": "Callable only when unpaused and by owner",
								"params": {
									"reward": "Funding rewards token amount"
								}
							},
							"getRewardForDuration()": {
								"returns": {
									"_0": "Returns total rewards amount for current duration."
								}
							},
							"isUserApproved(address)": {
								"details": "Checks if a user has executed the approveRequiredMethods function.",
								"params": {
									"_user": "The address of the user to check."
								},
								"returns": {
									"_0": "A boolean indicating if the user is approved."
								}
							},
							"lastTimeRewardApplicable()": {
								"returns": {
									"_0": "Returns last time to calculate rewards. If now is less than the last time, returns now."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"recoverERC20(address,uint256)": {
								"details": "Callable by owner",
								"params": {
									"tokenAddress": "Recovering token address",
									"tokenAmount": "Recovering token amount"
								}
							},
							"redelegateTokens(string,string,uint256)": {
								"details": "Redelegate the staked tokens from one validator to another",
								"params": {
									"_amount": "The amount of tokens to redelegate",
									"_dstValidatorAddr": "The address of the destination validator",
									"_srcValidatorAddr": "The address of the source validator"
								}
							},
							"redelegateTokensMultiple(string[],string[],uint256[])": {
								"details": "Redelegate the staked tokens from multiple validators to others",
								"params": {
									"_amounts": "The amounts of tokens to redelegate",
									"_dstValidatorAddrs": "The addresses of the destination validators",
									"_srcValidatorAddrs": "The addresses of the source validators"
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"rewardPerToken()": {
								"returns": {
									"_0": "Returns total amount of calculated rewards."
								}
							},
							"setRewardsDuration(uint256)": {
								"details": "Callable by owner",
								"params": {
									"duration": "New rewards duration"
								}
							},
							"totalSupplyLocked()": {
								"returns": {
									"_0": "Returns totalSupplyLocked"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":862:11700  contract RedelegationReward is IRedelegationReward, Ownable, Pausable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":955:1005  string[] private stakingMethods = [MSG_REDELEGATE] */\n  mload(0x40)\n  dup1\n  0x20\n  add\n  0x40\n  mstore\n  dup1\n    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":990:1004  MSG_REDELEGATE */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x2a\n  dup2\n  mstore\n  0x20\n  add\n  data_017e571b15ba8f3567be32b8c9b4c10b5aee7936471accdc36d1737426796a31\n  0x2a\n  swap2\n  codecopy\n    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":955:1005  string[] private stakingMethods = [MSG_REDELEGATE] */\n  dup2\n  mstore\n  pop\n  0x02\n  swap1\n  0x01\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":2006:2012  2 days */\n  0x02a300\n    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1973:2012  uint256 public rewardsDuration = 2 days */\n  0x08\n  sstore\n    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4534:4746  constructor(address rewardsToken_, uint256 duration) {... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_4\n  swap2\n  swap1\n  tag_5\n  jump\t// in\ntag_4:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_14)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  dup1\n  0x14\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4615:4628  rewardsToken_ */\n  dup2\n    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4593:4605  rewardsToken */\n  0x05\n  0x00\n    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4593:4629  rewardsToken = IERC20(rewardsToken_) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4665:4707  0xBeFe898407483f0f2fF605971FBD8Cf8FbD8B160 */\n  0xbefe898407483f0f2ff605971fbd8cf8fbd8b160\n    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4635:4647  stakingToken */\n  0x04\n  0x00\n    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4635:4709  stakingToken = IERC20(address(0xBeFe898407483f0f2fF605971FBD8Cf8FbD8B160)) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4733:4741  duration */\n  dup1\n    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4715:4730  rewardsDuration */\n  0x08\n    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4715:4741  rewardsDuration = duration */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4534:4746  constructor(address rewardsToken_, uint256 duration) {... */\n  pop\n  pop\n    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":862:11700  contract RedelegationReward is IRedelegationReward, Ownable, Pausable, ReentrancyGuard {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":862:11700  contract RedelegationReward is IRedelegationReward, Ownable, Pausable, ReentrancyGuard {... */\ntag_2:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_21\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_22:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_23\n  jumpi\n  dup3\n  mload\n  dup3\n  swap1\n  dup2\n  tag_24\n  swap2\n  swap1\n  tag_25\n  jump\t// in\ntag_24:\n  pop\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_22)\ntag_23:\ntag_21:\n  pop\n  swap1\n  pop\n  tag_26\n  swap2\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  pop\n  swap1\n  jump\t// out\ntag_27:\ntag_28:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_29\n  jumpi\n  0x00\n  dup2\n  dup2\n  tag_30\n  swap2\n  swap1\n  tag_31\n  jump\t// in\ntag_30:\n  pop\n  0x01\n  add\n  jump(tag_28)\ntag_29:\n  pop\n  swap1\n  jump\t// out\ntag_31:\n  pop\n  dup1\n  sload\n  tag_32\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  0x00\n  dup3\n  sstore\n  dup1\n  0x1f\n  lt\n  tag_35\n  jumpi\n  pop\n  jump(tag_34)\ntag_35:\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap1\n  tag_36\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\ntag_34:\n  pop\n  jump\t// out\ntag_37:\ntag_38:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_39\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_38)\ntag_39:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_41:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_43:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_44:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_74\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_43\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_45:\n    /* \"#utility.yul\":641:665   */\n  tag_76\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_44\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_77:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_46:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_79\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_45\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_47:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_48:\n    /* \"#utility.yul\":1001:1025   */\n  tag_82\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_47\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_83\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_83:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_49:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_85\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_48\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_5:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_87\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_88\n  tag_41\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1309:1428   */\ntag_87:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_89\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_46\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_90\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_49\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1718:1817   */\ntag_50:\n    /* \"#utility.yul\":1770:1776   */\n  0x00\n    /* \"#utility.yul\":1804:1809   */\n  dup2\n    /* \"#utility.yul\":1798:1810   */\n  mload\n    /* \"#utility.yul\":1788:1810   */\n  swap1\n  pop\n    /* \"#utility.yul\":1718:1817   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1823:2003   */\ntag_51:\n    /* \"#utility.yul\":1871:1948   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1868:1869   */\n  0x00\n    /* \"#utility.yul\":1861:1949   */\n  mstore\n    /* \"#utility.yul\":1968:1972   */\n  0x41\n    /* \"#utility.yul\":1965:1966   */\n  0x04\n    /* \"#utility.yul\":1958:1973   */\n  mstore\n    /* \"#utility.yul\":1992:1996   */\n  0x24\n    /* \"#utility.yul\":1989:1990   */\n  0x00\n    /* \"#utility.yul\":1982:1997   */\n  revert\n    /* \"#utility.yul\":2009:2189   */\ntag_52:\n    /* \"#utility.yul\":2057:2134   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2054:2055   */\n  0x00\n    /* \"#utility.yul\":2047:2135   */\n  mstore\n    /* \"#utility.yul\":2154:2158   */\n  0x22\n    /* \"#utility.yul\":2151:2152   */\n  0x04\n    /* \"#utility.yul\":2144:2159   */\n  mstore\n    /* \"#utility.yul\":2178:2182   */\n  0x24\n    /* \"#utility.yul\":2175:2176   */\n  0x00\n    /* \"#utility.yul\":2168:2183   */\n  revert\n    /* \"#utility.yul\":2195:2515   */\ntag_33:\n    /* \"#utility.yul\":2239:2245   */\n  0x00\n    /* \"#utility.yul\":2276:2277   */\n  0x02\n    /* \"#utility.yul\":2270:2274   */\n  dup3\n    /* \"#utility.yul\":2266:2278   */\n  div\n    /* \"#utility.yul\":2256:2278   */\n  swap1\n  pop\n    /* \"#utility.yul\":2323:2324   */\n  0x01\n    /* \"#utility.yul\":2317:2321   */\n  dup3\n    /* \"#utility.yul\":2313:2325   */\n  and\n    /* \"#utility.yul\":2344:2362   */\n  dup1\n    /* \"#utility.yul\":2334:2415   */\n  tag_95\n  jumpi\n    /* \"#utility.yul\":2400:2404   */\n  0x7f\n    /* \"#utility.yul\":2392:2398   */\n  dup3\n    /* \"#utility.yul\":2388:2405   */\n  and\n    /* \"#utility.yul\":2378:2405   */\n  swap2\n  pop\n    /* \"#utility.yul\":2334:2415   */\ntag_95:\n    /* \"#utility.yul\":2462:2464   */\n  0x20\n    /* \"#utility.yul\":2454:2460   */\n  dup3\n    /* \"#utility.yul\":2451:2465   */\n  lt\n    /* \"#utility.yul\":2431:2449   */\n  dup2\n    /* \"#utility.yul\":2428:2466   */\n  sub\n    /* \"#utility.yul\":2425:2509   */\n  tag_96\n  jumpi\n    /* \"#utility.yul\":2481:2499   */\n  tag_97\n  tag_52\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2425:2509   */\ntag_96:\n    /* \"#utility.yul\":2246:2515   */\n  pop\n    /* \"#utility.yul\":2195:2515   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2521:2662   */\ntag_53:\n    /* \"#utility.yul\":2570:2574   */\n  0x00\n    /* \"#utility.yul\":2593:2596   */\n  dup2\n    /* \"#utility.yul\":2585:2596   */\n  swap1\n  pop\n    /* \"#utility.yul\":2616:2619   */\n  dup2\n    /* \"#utility.yul\":2613:2614   */\n  0x00\n    /* \"#utility.yul\":2606:2620   */\n  mstore\n    /* \"#utility.yul\":2650:2654   */\n  0x20\n    /* \"#utility.yul\":2647:2648   */\n  0x00\n    /* \"#utility.yul\":2637:2655   */\n  keccak256\n    /* \"#utility.yul\":2629:2655   */\n  swap1\n  pop\n    /* \"#utility.yul\":2521:2662   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2668:2761   */\ntag_54:\n    /* \"#utility.yul\":2705:2711   */\n  0x00\n    /* \"#utility.yul\":2752:2754   */\n  0x20\n    /* \"#utility.yul\":2747:2749   */\n  0x1f\n    /* \"#utility.yul\":2740:2745   */\n  dup4\n    /* \"#utility.yul\":2736:2750   */\n  add\n    /* \"#utility.yul\":2732:2755   */\n  div\n    /* \"#utility.yul\":2722:2755   */\n  swap1\n  pop\n    /* \"#utility.yul\":2668:2761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2767:2874   */\ntag_55:\n    /* \"#utility.yul\":2811:2819   */\n  0x00\n    /* \"#utility.yul\":2861:2866   */\n  dup3\n    /* \"#utility.yul\":2855:2859   */\n  dup3\n    /* \"#utility.yul\":2851:2867   */\n  shl\n    /* \"#utility.yul\":2830:2867   */\n  swap1\n  pop\n    /* \"#utility.yul\":2767:2874   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2880:3273   */\ntag_56:\n    /* \"#utility.yul\":2949:2955   */\n  0x00\n    /* \"#utility.yul\":2999:3000   */\n  0x08\n    /* \"#utility.yul\":2987:2997   */\n  dup4\n    /* \"#utility.yul\":2983:3001   */\n  mul\n    /* \"#utility.yul\":3022:3119   */\n  tag_102\n    /* \"#utility.yul\":3052:3118   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3041:3050   */\n  dup3\n    /* \"#utility.yul\":3022:3119   */\n  tag_55\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":3140:3179   */\n  tag_103\n    /* \"#utility.yul\":3170:3178   */\n  dup7\n    /* \"#utility.yul\":3159:3168   */\n  dup4\n    /* \"#utility.yul\":3140:3179   */\n  tag_55\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":3128:3179   */\n  swap6\n  pop\n    /* \"#utility.yul\":3212:3216   */\n  dup1\n    /* \"#utility.yul\":3208:3217   */\n  not\n    /* \"#utility.yul\":3201:3206   */\n  dup5\n    /* \"#utility.yul\":3197:3218   */\n  and\n    /* \"#utility.yul\":3188:3218   */\n  swap4\n  pop\n    /* \"#utility.yul\":3261:3265   */\n  dup1\n    /* \"#utility.yul\":3251:3259   */\n  dup7\n    /* \"#utility.yul\":3247:3266   */\n  and\n    /* \"#utility.yul\":3240:3245   */\n  dup5\n    /* \"#utility.yul\":3237:3267   */\n  or\n    /* \"#utility.yul\":3227:3267   */\n  swap3\n  pop\n    /* \"#utility.yul\":2956:3273   */\n  pop\n  pop\n    /* \"#utility.yul\":2880:3273   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3279:3339   */\ntag_57:\n    /* \"#utility.yul\":3307:3310   */\n  0x00\n    /* \"#utility.yul\":3328:3333   */\n  dup2\n    /* \"#utility.yul\":3321:3333   */\n  swap1\n  pop\n    /* \"#utility.yul\":3279:3339   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3345:3487   */\ntag_58:\n    /* \"#utility.yul\":3395:3404   */\n  0x00\n    /* \"#utility.yul\":3428:3481   */\n  tag_106\n    /* \"#utility.yul\":3446:3480   */\n  tag_107\n    /* \"#utility.yul\":3455:3479   */\n  tag_108\n    /* \"#utility.yul\":3473:3478   */\n  dup5\n    /* \"#utility.yul\":3455:3479   */\n  tag_47\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3446:3480   */\n  tag_57\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3428:3481   */\n  tag_47\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":3415:3481   */\n  swap1\n  pop\n    /* \"#utility.yul\":3345:3487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3493:3568   */\ntag_59:\n    /* \"#utility.yul\":3536:3539   */\n  0x00\n    /* \"#utility.yul\":3557:3562   */\n  dup2\n    /* \"#utility.yul\":3550:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3493:3568   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3574:3843   */\ntag_60:\n    /* \"#utility.yul\":3684:3723   */\n  tag_111\n    /* \"#utility.yul\":3715:3722   */\n  dup4\n    /* \"#utility.yul\":3684:3723   */\n  tag_58\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3745:3836   */\n  tag_112\n    /* \"#utility.yul\":3794:3835   */\n  tag_113\n    /* \"#utility.yul\":3818:3834   */\n  dup3\n    /* \"#utility.yul\":3794:3835   */\n  tag_59\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3786:3792   */\n  dup5\n    /* \"#utility.yul\":3779:3783   */\n  dup5\n    /* \"#utility.yul\":3773:3784   */\n  sload\n    /* \"#utility.yul\":3745:3836   */\n  tag_56\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3739:3743   */\n  dup3\n    /* \"#utility.yul\":3732:3837   */\n  sstore\n    /* \"#utility.yul\":3650:3843   */\n  pop\n    /* \"#utility.yul\":3574:3843   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3849:3922   */\ntag_61:\n    /* \"#utility.yul\":3894:3897   */\n  0x00\n    /* \"#utility.yul\":3849:3922   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3928:4117   */\ntag_62:\n    /* \"#utility.yul\":4005:4037   */\n  tag_116\n  tag_61\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":4046:4111   */\n  tag_117\n    /* \"#utility.yul\":4104:4110   */\n  dup2\n    /* \"#utility.yul\":4096:4102   */\n  dup5\n    /* \"#utility.yul\":4090:4094   */\n  dup5\n    /* \"#utility.yul\":4046:4111   */\n  tag_60\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3981:4117   */\n  pop\n    /* \"#utility.yul\":3928:4117   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4123:4309   */\ntag_63:\n    /* \"#utility.yul\":4183:4303   */\ntag_119:\n    /* \"#utility.yul\":4200:4203   */\n  dup2\n    /* \"#utility.yul\":4193:4198   */\n  dup2\n    /* \"#utility.yul\":4190:4204   */\n  lt\n    /* \"#utility.yul\":4183:4303   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":4254:4293   */\n  tag_122\n    /* \"#utility.yul\":4291:4292   */\n  0x00\n    /* \"#utility.yul\":4284:4289   */\n  dup3\n    /* \"#utility.yul\":4254:4293   */\n  tag_62\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4227:4228   */\n  0x01\n    /* \"#utility.yul\":4220:4225   */\n  dup2\n    /* \"#utility.yul\":4216:4229   */\n  add\n    /* \"#utility.yul\":4207:4229   */\n  swap1\n  pop\n    /* \"#utility.yul\":4183:4303   */\n  jump(tag_119)\ntag_121:\n    /* \"#utility.yul\":4123:4309   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4315:4858   */\ntag_64:\n    /* \"#utility.yul\":4416:4418   */\n  0x1f\n    /* \"#utility.yul\":4411:4414   */\n  dup3\n    /* \"#utility.yul\":4408:4419   */\n  gt\n    /* \"#utility.yul\":4405:4851   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":4450:4488   */\n  tag_125\n    /* \"#utility.yul\":4482:4487   */\n  dup2\n    /* \"#utility.yul\":4450:4488   */\n  tag_53\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4534:4563   */\n  tag_126\n    /* \"#utility.yul\":4552:4562   */\n  dup5\n    /* \"#utility.yul\":4534:4563   */\n  tag_54\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4524:4532   */\n  dup2\n    /* \"#utility.yul\":4520:4564   */\n  add\n    /* \"#utility.yul\":4717:4719   */\n  0x20\n    /* \"#utility.yul\":4705:4715   */\n  dup6\n    /* \"#utility.yul\":4702:4720   */\n  lt\n    /* \"#utility.yul\":4699:4748   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":4738:4746   */\n  dup2\n    /* \"#utility.yul\":4723:4746   */\n  swap1\n  pop\n    /* \"#utility.yul\":4699:4748   */\ntag_127:\n    /* \"#utility.yul\":4761:4841   */\n  tag_128\n    /* \"#utility.yul\":4817:4839   */\n  tag_129\n    /* \"#utility.yul\":4835:4838   */\n  dup6\n    /* \"#utility.yul\":4817:4839   */\n  tag_54\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4807:4815   */\n  dup4\n    /* \"#utility.yul\":4803:4840   */\n  add\n    /* \"#utility.yul\":4790:4801   */\n  dup3\n    /* \"#utility.yul\":4761:4841   */\n  tag_63\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":4420:4851   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4851   */\ntag_124:\n    /* \"#utility.yul\":4315:4858   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4864:4981   */\ntag_65:\n    /* \"#utility.yul\":4918:4926   */\n  0x00\n    /* \"#utility.yul\":4968:4973   */\n  dup3\n    /* \"#utility.yul\":4962:4966   */\n  dup3\n    /* \"#utility.yul\":4958:4974   */\n  shr\n    /* \"#utility.yul\":4937:4974   */\n  swap1\n  pop\n    /* \"#utility.yul\":4864:4981   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4987:5156   */\ntag_66:\n    /* \"#utility.yul\":5031:5037   */\n  0x00\n    /* \"#utility.yul\":5064:5115   */\n  tag_132\n    /* \"#utility.yul\":5112:5113   */\n  0x00\n    /* \"#utility.yul\":5108:5114   */\n  not\n    /* \"#utility.yul\":5100:5105   */\n  dup5\n    /* \"#utility.yul\":5097:5098   */\n  0x08\n    /* \"#utility.yul\":5093:5106   */\n  mul\n    /* \"#utility.yul\":5064:5115   */\n  tag_65\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":5060:5116   */\n  not\n    /* \"#utility.yul\":5145:5149   */\n  dup1\n    /* \"#utility.yul\":5139:5143   */\n  dup4\n    /* \"#utility.yul\":5135:5150   */\n  and\n    /* \"#utility.yul\":5125:5150   */\n  swap2\n  pop\n    /* \"#utility.yul\":5038:5156   */\n  pop\n    /* \"#utility.yul\":4987:5156   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5161:5456   */\ntag_67:\n    /* \"#utility.yul\":5237:5241   */\n  0x00\n    /* \"#utility.yul\":5383:5412   */\n  tag_134\n    /* \"#utility.yul\":5408:5411   */\n  dup4\n    /* \"#utility.yul\":5402:5406   */\n  dup4\n    /* \"#utility.yul\":5383:5412   */\n  tag_66\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5375:5412   */\n  swap2\n  pop\n    /* \"#utility.yul\":5445:5448   */\n  dup3\n    /* \"#utility.yul\":5442:5443   */\n  0x02\n    /* \"#utility.yul\":5438:5449   */\n  mul\n    /* \"#utility.yul\":5432:5436   */\n  dup3\n    /* \"#utility.yul\":5429:5450   */\n  or\n    /* \"#utility.yul\":5421:5450   */\n  swap1\n  pop\n    /* \"#utility.yul\":5161:5456   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5461:6856   */\ntag_25:\n    /* \"#utility.yul\":5578:5615   */\n  tag_136\n    /* \"#utility.yul\":5611:5614   */\n  dup3\n    /* \"#utility.yul\":5578:5615   */\n  tag_50\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5680:5698   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5672:5678   */\n  dup2\n    /* \"#utility.yul\":5669:5699   */\n  gt\n    /* \"#utility.yul\":5666:5722   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":5702:5720   */\n  tag_138\n  tag_51\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":5666:5722   */\ntag_137:\n    /* \"#utility.yul\":5746:5784   */\n  tag_139\n    /* \"#utility.yul\":5778:5782   */\n  dup3\n    /* \"#utility.yul\":5772:5783   */\n  sload\n    /* \"#utility.yul\":5746:5784   */\n  tag_33\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5831:5898   */\n  tag_140\n    /* \"#utility.yul\":5891:5897   */\n  dup3\n    /* \"#utility.yul\":5883:5889   */\n  dup3\n    /* \"#utility.yul\":5877:5881   */\n  dup6\n    /* \"#utility.yul\":5831:5898   */\n  tag_64\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":5925:5926   */\n  0x00\n    /* \"#utility.yul\":5949:5953   */\n  0x20\n    /* \"#utility.yul\":5936:5953   */\n  swap1\n  pop\n    /* \"#utility.yul\":5981:5983   */\n  0x1f\n    /* \"#utility.yul\":5973:5979   */\n  dup4\n    /* \"#utility.yul\":5970:5984   */\n  gt\n    /* \"#utility.yul\":5998:5999   */\n  0x01\n    /* \"#utility.yul\":5993:6611   */\n  dup2\n  eq\n  tag_142\n  jumpi\n    /* \"#utility.yul\":6655:6656   */\n  0x00\n    /* \"#utility.yul\":6672:6678   */\n  dup5\n    /* \"#utility.yul\":6669:6746   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":6721:6730   */\n  dup3\n    /* \"#utility.yul\":6716:6719   */\n  dup8\n    /* \"#utility.yul\":6712:6731   */\n  add\n    /* \"#utility.yul\":6706:6732   */\n  mload\n    /* \"#utility.yul\":6697:6732   */\n  swap1\n  pop\n    /* \"#utility.yul\":6669:6746   */\ntag_143:\n    /* \"#utility.yul\":6772:6839   */\n  tag_144\n    /* \"#utility.yul\":6832:6838   */\n  dup6\n    /* \"#utility.yul\":6825:6830   */\n  dup3\n    /* \"#utility.yul\":6772:6839   */\n  tag_67\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":6766:6770   */\n  dup7\n    /* \"#utility.yul\":6759:6840   */\n  sstore\n    /* \"#utility.yul\":6628:6850   */\n  pop\n    /* \"#utility.yul\":5963:6850   */\n  jump(tag_141)\n    /* \"#utility.yul\":5993:6611   */\ntag_142:\n    /* \"#utility.yul\":6045:6049   */\n  0x1f\n    /* \"#utility.yul\":6041:6050   */\n  not\n    /* \"#utility.yul\":6033:6039   */\n  dup5\n    /* \"#utility.yul\":6029:6051   */\n  and\n    /* \"#utility.yul\":6079:6116   */\n  tag_145\n    /* \"#utility.yul\":6111:6115   */\n  dup7\n    /* \"#utility.yul\":6079:6116   */\n  tag_53\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6138:6139   */\n  0x00\n    /* \"#utility.yul\":6152:6360   */\ntag_146:\n    /* \"#utility.yul\":6166:6173   */\n  dup3\n    /* \"#utility.yul\":6163:6164   */\n  dup2\n    /* \"#utility.yul\":6160:6174   */\n  lt\n    /* \"#utility.yul\":6152:6360   */\n  iszero\n  tag_148\n  jumpi\n    /* \"#utility.yul\":6245:6254   */\n  dup5\n    /* \"#utility.yul\":6240:6243   */\n  dup10\n    /* \"#utility.yul\":6236:6255   */\n  add\n    /* \"#utility.yul\":6230:6256   */\n  mload\n    /* \"#utility.yul\":6222:6228   */\n  dup3\n    /* \"#utility.yul\":6215:6257   */\n  sstore\n    /* \"#utility.yul\":6296:6297   */\n  0x01\n    /* \"#utility.yul\":6288:6294   */\n  dup3\n    /* \"#utility.yul\":6284:6298   */\n  add\n    /* \"#utility.yul\":6274:6298   */\n  swap2\n  pop\n    /* \"#utility.yul\":6343:6345   */\n  0x20\n    /* \"#utility.yul\":6332:6341   */\n  dup6\n    /* \"#utility.yul\":6328:6346   */\n  add\n    /* \"#utility.yul\":6315:6346   */\n  swap5\n  pop\n    /* \"#utility.yul\":6189:6193   */\n  0x20\n    /* \"#utility.yul\":6186:6187   */\n  dup2\n    /* \"#utility.yul\":6182:6194   */\n  add\n    /* \"#utility.yul\":6177:6194   */\n  swap1\n  pop\n    /* \"#utility.yul\":6152:6360   */\n  jump(tag_146)\ntag_148:\n    /* \"#utility.yul\":6388:6394   */\n  dup7\n    /* \"#utility.yul\":6379:6386   */\n  dup4\n    /* \"#utility.yul\":6376:6395   */\n  lt\n    /* \"#utility.yul\":6373:6552   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":6446:6455   */\n  dup5\n    /* \"#utility.yul\":6441:6444   */\n  dup10\n    /* \"#utility.yul\":6437:6456   */\n  add\n    /* \"#utility.yul\":6431:6457   */\n  mload\n    /* \"#utility.yul\":6489:6537   */\n  tag_150\n    /* \"#utility.yul\":6531:6535   */\n  0x1f\n    /* \"#utility.yul\":6523:6529   */\n  dup10\n    /* \"#utility.yul\":6519:6536   */\n  and\n    /* \"#utility.yul\":6508:6517   */\n  dup3\n    /* \"#utility.yul\":6489:6537   */\n  tag_66\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6481:6487   */\n  dup4\n    /* \"#utility.yul\":6474:6538   */\n  sstore\n    /* \"#utility.yul\":6396:6552   */\n  pop\n    /* \"#utility.yul\":6373:6552   */\ntag_149:\n    /* \"#utility.yul\":6598:6599   */\n  0x01\n    /* \"#utility.yul\":6594:6595   */\n  0x02\n    /* \"#utility.yul\":6586:6592   */\n  dup9\n    /* \"#utility.yul\":6582:6596   */\n  mul\n    /* \"#utility.yul\":6578:6600   */\n  add\n    /* \"#utility.yul\":6572:6576   */\n  dup9\n    /* \"#utility.yul\":6565:6601   */\n  sstore\n    /* \"#utility.yul\":6000:6611   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5963:6850   */\ntag_141:\n  pop\n    /* \"#utility.yul\":5553:6856   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5461:6856   */\n  pop\n  pop\n  jump\t// out\n    /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":862:11700  contract RedelegationReward is IRedelegationReward, Ownable, Pausable, ReentrancyGuard {... */\ntag_18:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_017e571b15ba8f3567be32b8c9b4c10b5aee7936471accdc36d1737426796a31 2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c6567617465\n\nsub_0: assembly {\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":862:11700  contract RedelegationReward is IRedelegationReward, Ownable, Pausable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x80faa57d\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xca1d209d\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xd1af0c7d\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xebe2b12b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xca1d209d\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xcc1a378f\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xcd3daf9d\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x8b876347\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x8b876347\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc6e79b91\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x80faa57d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x880b0e43\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8980f11f\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x58341922\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x70a08231\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7b0a47ee\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x58341922\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6c11fe9b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1c1f78eb\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x386a9525\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x529d6ccf\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11095:11194  function earned(address account) external view returns (uint256) {... */\n    tag_3:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":2365:2407  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11274:11384  function getRewardForDuration() external view returns (uint256) {... */\n    tag_5:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1973:2012  uint256 public rewardsDuration = 2 days */\n    tag_6:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6964:7239  function claim() public nonReentrant whenNotPaused updateReward(msg.sender) {... */\n    tag_7:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11587:11697  function isUserApproved(address _user) public view returns (bool) {... */\n    tag_8:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10302:10392  function totalSupplyLocked() external view returns (uint256) {... */\n    tag_9:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_10:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6291:6845  function redelegateTokensMultiple(... */\n    tag_11:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10496:10599  function balanceOf(address account) external view returns (uint256) {... */\n    tag_12:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      stop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1701:1727  IERC20 public stakingToken */\n    tag_14:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1907:1932  uint256 public rewardRate */\n    tag_15:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10721:10834  function lastTimeRewardApplicable() external view returns (uint256) {... */\n    tag_16:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5437:5998  function redelegateTokens(... */\n    tag_17:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8801:9105  function recoverERC20(... */\n    tag_18:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      stop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":2236:2293  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_19:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_20:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1297:1623  function approveRequiredMethods() public {... */\n    tag_21:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      stop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":2062:2091  uint256 public lastUpdateTime */\n    tag_22:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7531:8560  function fund(... */\n    tag_23:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      tag_111\n      jump\t// in\n    tag_108:\n      stop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4935:5157  function setRewardsDuration(uint256 duration) external onlyOwner {... */\n    tag_24:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      stop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10907:11000  function rewardPerToken() external view returns (uint256) {... */\n    tag_25:\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1771:1797  IERC20 public rewardsToken */\n    tag_26:\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":2130:2165  uint256 public rewardPerTokenStored */\n    tag_27:\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1855:1882  uint256 public periodFinish */\n    tag_28:\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n      tag_127\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n    tag_127:\n      stop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11095:11194  function earned(address account) external view returns (uint256) {... */\n    tag_39:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11151:11158  uint256 */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11173:11189  _earned(account) */\n      tag_131\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11181:11188  account */\n      dup3\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11173:11180  _earned */\n      tag_132\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11173:11189  _earned(account) */\n      jump\t// in\n    tag_131:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11166:11189  return _earned(account) */\n      swap1\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11095:11194  function earned(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":2365:2407  mapping(address => uint256) public rewards */\n    tag_44:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11274:11384  function getRewardForDuration() external view returns (uint256) {... */\n    tag_47:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11329:11336  uint256 */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11364:11379  rewardsDuration */\n      sload(0x08)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11351:11361  rewardRate */\n      sload(0x07)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11351:11379  rewardRate * rewardsDuration */\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11344:11379  return rewardRate * rewardsDuration */\n      swap1\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11274:11384  function getRewardForDuration() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1973:2012  uint256 public rewardsDuration = 2 days */\n    tag_50:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6964:7239  function claim() public nonReentrant whenNotPaused updateReward(msg.sender) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_137\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_138\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_137:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_140\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_141\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_140:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7028:7038  msg.sender */\n      caller\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3912:3929  _rewardPerToken() */\n      tag_143\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3912:3927  _rewardPerToken */\n      tag_144\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3912:3929  _rewardPerToken() */\n      jump\t// in\n    tag_143:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3889:3909  rewardPerTokenStored */\n      0x0a\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3889:3929  rewardPerTokenStored = _rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3952:3979  _lastTimeRewardApplicable() */\n      tag_145\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3952:3977  _lastTimeRewardApplicable */\n      tag_146\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3952:3979  _lastTimeRewardApplicable() */\n      jump\t// in\n    tag_145:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3935:3949  lastUpdateTime */\n      0x09\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3935:3979  lastUpdateTime = _lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4008:4009  0 */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3989:4010  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3989:3996  account */\n      dup2\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3989:4010  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3985:4128  if (account != address(0)) {... */\n      tag_147\n      jumpi\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4041:4057  _earned(account) */\n      tag_148\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4049:4056  account */\n      dup2\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4041:4048  _earned */\n      tag_132\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4041:4057  _earned(account) */\n      jump\t// in\n    tag_148:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4022:4029  rewards */\n      0x0c\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4022:4038  rewards[account] */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4030:4037  account */\n      dup4\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4022:4038  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4022:4057  rewards[account] = _earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4101:4121  rewardPerTokenStored */\n      sload(0x0a)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4067:4089  userRewardPerTokenPaid */\n      0x0b\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4067:4098  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4090:4097  account */\n      dup4\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4067:4098  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4067:4121  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3985:4128  if (account != address(0)) {... */\n    tag_147:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7046:7060  uint256 reward */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7063:7070  rewards */\n      0x0c\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7063:7082  rewards[msg.sender] */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7071:7081  msg.sender */\n      caller\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7063:7082  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7046:7082  uint256 reward = rewards[msg.sender] */\n      swap1\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7101:7102  0 */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7092:7098  reward */\n      dup2\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7092:7102  reward > 0 */\n      gt\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7088:7235  if (reward > 0) {... */\n      iszero\n      tag_150\n      jumpi\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7134:7135  0 */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7112:7119  rewards */\n      0x0c\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7112:7131  rewards[msg.sender] */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7120:7130  msg.sender */\n      caller\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7112:7131  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7112:7135  rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7143:7188  rewardsToken.safeTransfer(msg.sender, reward) */\n      tag_151\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7169:7179  msg.sender */\n      caller\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7181:7187  reward */\n      dup3\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7143:7155  rewardsToken */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7143:7168  rewardsToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_152\n      swap1\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7143:7188  rewardsToken.safeTransfer(msg.sender, reward) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_151:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7209:7219  msg.sender */\n      caller\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7201:7228  Claimed(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7221:7227  reward */\n      dup3\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7201:7228  Claimed(msg.sender, reward) */\n      mload(0x40)\n      tag_153\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7088:7235  if (reward > 0) {... */\n    tag_150:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7040:7239  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1268:1269  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_154\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_155\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_154:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6964:7239  function claim() public nonReentrant whenNotPaused updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11587:11697  function isUserApproved(address _user) public view returns (bool) {... */\n    tag_56:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11647:11651  bool */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11670:11683  approvedUsers */\n      0x03\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11670:11690  approvedUsers[_user] */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11684:11689  _user */\n      dup4\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11670:11690  approvedUsers[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11663:11690  return approvedUsers[_user] */\n      swap1\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":11587:11697  function isUserApproved(address _user) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10302:10392  function totalSupplyLocked() external view returns (uint256) {... */\n    tag_60:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10354:10361  uint256 */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10376:10387  totalSupply */\n      sload(0x0d)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10369:10387  return totalSupply */\n      swap1\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10302:10392  function totalSupplyLocked() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      dup1\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6291:6845  function redelegateTokensMultiple(... */\n    tag_68:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_160\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_141\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_160:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6534:6552  _dstValidatorAddrs */\n      dup2\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6534:6559  _dstValidatorAddrs.length */\n      mload\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6505:6523  _srcValidatorAddrs */\n      dup4\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6505:6530  _srcValidatorAddrs.length */\n      mload\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6505:6559  _srcValidatorAddrs.length == _dstValidatorAddrs.length */\n      eq\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6505:6619  _srcValidatorAddrs.length == _dstValidatorAddrs.length &&... */\n      dup1\n      iszero\n      tag_162\n      jumpi\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6604:6612  _amounts */\n      dup1\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6604:6619  _amounts.length */\n      mload\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6575:6593  _dstValidatorAddrs */\n      dup3\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6575:6600  _dstValidatorAddrs.length */\n      mload\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6575:6619  _dstValidatorAddrs.length == _amounts.length */\n      eq\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6505:6619  _srcValidatorAddrs.length == _dstValidatorAddrs.length &&... */\n    tag_162:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6484:6673  require(... */\n      tag_163\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6688:6697  uint256 i */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6683:6839  for (uint256 i = 0; i < _srcValidatorAddrs.length; i++) {... */\n    tag_166:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6707:6725  _srcValidatorAddrs */\n      dup4\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6707:6732  _srcValidatorAddrs.length */\n      mload\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6703:6704  i */\n      dup2\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6703:6732  i < _srcValidatorAddrs.length */\n      lt\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6683:6839  for (uint256 i = 0; i < _srcValidatorAddrs.length; i++) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6753:6828  redelegateTokens(_srcValidatorAddrs[i], _dstValidatorAddrs[i], _amounts[i]) */\n      tag_169\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6770:6788  _srcValidatorAddrs */\n      dup5\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6789:6790  i */\n      dup3\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6770:6791  _srcValidatorAddrs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_170\n      jumpi\n      tag_171\n      tag_172\n      jump\t// in\n    tag_171:\n    tag_170:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6793:6811  _dstValidatorAddrs */\n      dup5\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6812:6813  i */\n      dup4\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6793:6814  _dstValidatorAddrs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_173\n      jumpi\n      tag_174\n      tag_172\n      jump\t// in\n    tag_174:\n    tag_173:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6816:6824  _amounts */\n      dup5\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6825:6826  i */\n      dup5\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6816:6827  _amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_175\n      jumpi\n      tag_176\n      tag_172\n      jump\t// in\n    tag_176:\n    tag_175:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6753:6769  redelegateTokens */\n      tag_88\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6753:6828  redelegateTokens(_srcValidatorAddrs[i], _dstValidatorAddrs[i], _amounts[i]) */\n      jump\t// in\n    tag_169:\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6734:6737  i++ */\n      dup1\n      dup1\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      swap2\n      pop\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6683:6839  for (uint256 i = 0; i < _srcValidatorAddrs.length; i++) {... */\n      jump(tag_166)\n    tag_167:\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":6291:6845  function redelegateTokensMultiple(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10496:10599  function balanceOf(address account) external view returns (uint256) {... */\n    tag_71:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10555:10562  uint256 */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10577:10585  balances */\n      0x0e\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10577:10594  balances[account] */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10586:10593  account */\n      dup4\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10577:10594  balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10570:10594  return balances[account] */\n      swap1\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10496:10599  function balanceOf(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1701:1727  IERC20 public stakingToken */\n    tag_76:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1907:1932  uint256 public rewardRate */\n    tag_80:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10721:10834  function lastTimeRewardApplicable() external view returns (uint256) {... */\n    tag_83:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10780:10787  uint256 */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10802:10829  _lastTimeRewardApplicable() */\n      tag_187\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10802:10827  _lastTimeRewardApplicable */\n      tag_146\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10802:10829  _lastTimeRewardApplicable() */\n      jump\t// in\n    tag_187:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10795:10829  return _lastTimeRewardApplicable() */\n      swap1\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10721:10834  function lastTimeRewardApplicable() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5437:5998  function redelegateTokens(... */\n    tag_88:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5631:5636  int64 */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_189\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_141\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_189:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5610:5620  msg.sender */\n      caller\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3912:3929  _rewardPerToken() */\n      tag_191\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3912:3927  _rewardPerToken */\n      tag_144\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3912:3929  _rewardPerToken() */\n      jump\t// in\n    tag_191:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3889:3909  rewardPerTokenStored */\n      0x0a\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3889:3929  rewardPerTokenStored = _rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3952:3979  _lastTimeRewardApplicable() */\n      tag_192\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3952:3977  _lastTimeRewardApplicable */\n      tag_146\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3952:3979  _lastTimeRewardApplicable() */\n      jump\t// in\n    tag_192:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3935:3949  lastUpdateTime */\n      0x09\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3935:3979  lastUpdateTime = _lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4008:4009  0 */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3989:4010  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3989:3996  account */\n      dup2\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3989:4010  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3985:4128  if (account != address(0)) {... */\n      tag_193\n      jumpi\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4041:4057  _earned(account) */\n      tag_194\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4049:4056  account */\n      dup2\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4041:4048  _earned */\n      tag_132\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4041:4057  _earned(account) */\n      jump\t// in\n    tag_194:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4022:4029  rewards */\n      0x0c\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4022:4038  rewards[account] */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4030:4037  account */\n      dup4\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4022:4038  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4022:4057  rewards[account] = _earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4101:4121  rewardPerTokenStored */\n      sload(0x0a)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4067:4089  userRewardPerTokenPaid */\n      0x0b\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4067:4098  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4090:4097  account */\n      dup4\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4067:4098  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4067:4121  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3985:4128  if (account != address(0)) {... */\n    tag_193:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5663:5664  0 */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5652:5659  _amount */\n      dup4\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5652:5664  _amount <= 0 */\n      gt\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5648:5710  if (_amount <= 0) {... */\n      tag_196\n      jumpi\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5687:5699  ZeroAmount() */\n      mload(0x40)\n      0x1f2a200500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5648:5710  if (_amount <= 0) {... */\n    tag_196:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5719:5739  int64 completionTime */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/Staking.sol\":221:263  0x0000000000000000000000000000000000000800 */\n      0x0800\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5742:5769  STAKING_CONTRACT.redelegate */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x54b826f5\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5770:5780  msg.sender */\n      caller\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5782:5799  _srcValidatorAddr */\n      dup9\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5801:5818  _dstValidatorAddr */\n      dup9\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5820:5827  _amount */\n      dup9\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5742:5828  STAKING_CONTRACT.redelegate(msg.sender, _srcValidatorAddr, _dstValidatorAddr, _amount) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_200\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_200:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_201\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5719:5828  int64 completionTime = STAKING_CONTRACT.redelegate(msg.sender, _srcValidatorAddr, _dstValidatorAddr, _amount) */\n      swap1\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5866:5873  _amount */\n      dup4\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5852:5863  totalSupply */\n      sload(0x0d)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5852:5873  totalSupply + _amount */\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5838:5849  totalSupply */\n      0x0d\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5838:5873  totalSupply = totalSupply + _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5907:5914  _amount */\n      dup4\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5883:5891  balances */\n      0x0e\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5883:5903  balances[msg.sender] */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5892:5902  msg.sender */\n      caller\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5883:5903  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5883:5914  balances[msg.sender] += _amount */\n      dup3\n      dup3\n      sload\n      tag_205\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_205:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5940:5950  msg.sender */\n      caller\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5929:5960  Redelegate(msg.sender, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0da5c3d1021415bb27aa0917eaaafc6ee7c358a2a436d70208004073f6109ec0\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5952:5959  _amount */\n      dup6\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5929:5960  Redelegate(msg.sender, _amount) */\n      mload(0x40)\n      tag_206\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5977:5991  completionTime */\n      dup1\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5970:5991  return completionTime */\n      swap3\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1268:1269  _ */\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5437:5998  function redelegateTokens(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8801:9105  function recoverERC20(... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_208\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_208:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8931:8943  stakingToken */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8907:8944  tokenAddress == address(stakingToken) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8907:8919  tokenAddress */\n      dup3\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8907:8944  tokenAddress == address(stakingToken) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8903:8993  if (tokenAddress == address(stakingToken)) {... */\n      tag_210\n      jumpi\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8961:8986  FailedToWithdrawStaking() */\n      mload(0x40)\n      0x43fc58f100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8903:8993  if (tokenAddress == address(stakingToken)) {... */\n    tag_210:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8998:9053  IERC20(tokenAddress).safeTransfer(owner(), tokenAmount) */\n      tag_211\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9032:9039  owner() */\n      tag_212\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9032:9037  owner */\n      tag_100\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9032:9039  owner() */\n      jump\t// in\n    tag_212:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9041:9052  tokenAmount */\n      dup3\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9005:9017  tokenAddress */\n      dup5\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8998:9031  IERC20(tokenAddress).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_152\n      swap1\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8998:9053  IERC20(tokenAddress).safeTransfer(owner(), tokenAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_211:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9064:9100  Recovered(tokenAddress, tokenAmount) */\n      0x8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9074:9086  tokenAddress */\n      dup3\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9088:9099  tokenAmount */\n      dup3\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9064:9100  Recovered(tokenAddress, tokenAmount) */\n      mload(0x40)\n      tag_213\n      swap3\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8801:9105  function recoverERC20(... */\n      pop\n      pop\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":2236:2293  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_97:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1297:1623  function approveRequiredMethods() public {... */\n    tag_104:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1348:1360  bool success */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/Staking.sol\":221:263  0x0000000000000000000000000000000000000800 */\n      0x0800\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1363:1387  STAKING_CONTRACT.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb6039895\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1401:1411  msg.sender */\n      caller\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1425:1442  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1456:1470  stakingMethods */\n      0x02\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1363:1480  STAKING_CONTRACT.approve(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_218\n      jump\t// in\n    tag_217:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_221\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1348:1480  bool success = STAKING_CONTRACT.approve(... */\n      swap1\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1498:1505  success */\n      dup1\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1490:1543  require(success, \"Failed to approve delegate method\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_223:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1581:1585  true */\n      0x01\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1553:1566  approvedUsers */\n      0x03\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1553:1578  approvedUsers[msg.sender] */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1567:1577  msg.sender */\n      caller\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1553:1578  approvedUsers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1553:1585  approvedUsers[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1338:1623  {... */\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1297:1623  function approveRequiredMethods() public {... */\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":2062:2091  uint256 public lastUpdateTime */\n    tag_106:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7531:8560  function fund(... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_227\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_229\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_141\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_229:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7621:7622  0 */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3912:3929  _rewardPerToken() */\n      tag_231\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3912:3927  _rewardPerToken */\n      tag_144\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3912:3929  _rewardPerToken() */\n      jump\t// in\n    tag_231:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3889:3909  rewardPerTokenStored */\n      0x0a\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3889:3929  rewardPerTokenStored = _rewardPerToken() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3952:3979  _lastTimeRewardApplicable() */\n      tag_232\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3952:3977  _lastTimeRewardApplicable */\n      tag_146\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3952:3979  _lastTimeRewardApplicable() */\n      jump\t// in\n    tag_232:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3935:3949  lastUpdateTime */\n      0x09\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3935:3979  lastUpdateTime = _lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4008:4009  0 */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3989:4010  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3989:3996  account */\n      dup2\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3989:4010  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3985:4128  if (account != address(0)) {... */\n      tag_233\n      jumpi\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4041:4057  _earned(account) */\n      tag_234\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4049:4056  account */\n      dup2\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4041:4048  _earned */\n      tag_132\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4041:4057  _earned(account) */\n      jump\t// in\n    tag_234:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4022:4029  rewards */\n      0x0c\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4022:4038  rewards[account] */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4030:4037  account */\n      dup4\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4022:4038  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4022:4057  rewards[account] = _earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4101:4121  rewardPerTokenStored */\n      sload(0x0a)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4067:4089  userRewardPerTokenPaid */\n      0x0b\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4067:4098  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4090:4097  account */\n      dup4\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4067:4098  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4067:4121  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":3985:4128  if (account != address(0)) {... */\n    tag_233:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7654:7666  periodFinish */\n      sload(0x06)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7635:7650  block.timestamp */\n      timestamp\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7635:7666  block.timestamp >= periodFinish */\n      lt\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7631:7898  if (block.timestamp >= periodFinish) {... */\n      tag_236\n      jumpi\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7698:7713  rewardsDuration */\n      sload(0x08)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7689:7695  reward */\n      dup3\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7689:7713  reward / rewardsDuration */\n      tag_237\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7676:7686  rewardRate */\n      0x07\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7676:7713  rewardRate = reward / rewardsDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7631:7898  if (block.timestamp >= periodFinish) {... */\n      jump(tag_239)\n    tag_236:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7734:7751  uint256 remaining */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7769:7784  block.timestamp */\n      timestamp\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7754:7766  periodFinish */\n      sload(0x06)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7754:7784  periodFinish - block.timestamp */\n      tag_240\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7734:7784  uint256 remaining = periodFinish - block.timestamp */\n      swap1\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7792:7808  uint256 leftover */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7823:7833  rewardRate */\n      sload(0x07)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7811:7820  remaining */\n      dup3\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7811:7833  remaining * rewardRate */\n      tag_242\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_242:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7792:7833  uint256 leftover = remaining * rewardRate */\n      swap1\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7876:7891  rewardsDuration */\n      sload(0x08)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7864:7872  leftover */\n      dup2\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7855:7861  reward */\n      dup6\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7855:7872  reward + leftover */\n      tag_243\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_243:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7854:7891  (reward + leftover) / rewardsDuration */\n      tag_244\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_244:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7841:7851  rewardRate */\n      0x07\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7841:7891  rewardRate = (reward + leftover) / rewardsDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7726:7898  {... */\n      pop\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7631:7898  if (block.timestamp >= periodFinish) {... */\n    tag_239:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8225:8289  rewardsToken.safeTransferFrom(msg.sender, address(this), reward) */\n      tag_245\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8255:8265  msg.sender */\n      caller\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8275:8279  this */\n      address\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8282:8288  reward */\n      dup5\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8225:8237  rewardsToken */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8225:8254  rewardsToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_246\n      swap1\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8225:8289  rewardsToken.safeTransferFrom(msg.sender, address(this), reward) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_245:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8295:8310  uint256 balance */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8313:8325  rewardsToken */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8313:8335  rewardsToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8344:8348  this */\n      address\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8313:8350  rewardsToken.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_247:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_249\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_249:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_250\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8295:8350  uint256 balance = rewardsToken.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8383:8398  rewardsDuration */\n      sload(0x08)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8373:8380  balance */\n      dup2\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8373:8398  balance / rewardsDuration */\n      tag_252\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_252:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8360:8370  rewardRate */\n      sload(0x07)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8360:8398  rewardRate > balance / rewardsDuration */\n      gt\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8356:8437  if (rewardRate > balance / rewardsDuration) {... */\n      iszero\n      tag_253\n      jumpi\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8415:8430  TooHighReward() */\n      mload(0x40)\n      0x7f5e85a600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8356:8437  if (rewardRate > balance / rewardsDuration) {... */\n    tag_253:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8460:8475  block.timestamp */\n      timestamp\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8443:8457  lastUpdateTime */\n      0x09\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8443:8475  lastUpdateTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8514:8529  rewardsDuration */\n      sload(0x08)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8496:8511  block.timestamp */\n      timestamp\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8496:8529  block.timestamp + rewardsDuration */\n      tag_254\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_254:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8481:8493  periodFinish */\n      0x06\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8481:8529  periodFinish = block.timestamp + rewardsDuration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8541:8555  Funded(reward) */\n      0xc4c14883ae9fd8e26d5d59e3485ed29fd126d781d7e498a4ca5c54c8268e4936\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8548:8554  reward */\n      dup4\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":8541:8555  Funded(reward) */\n      mload(0x40)\n      tag_255\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7625:8560  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1268:1269  _ */\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":7531:8560  function fund(... */\n      pop\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4935:5157  function setRewardsDuration(uint256 duration) external onlyOwner {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_257\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_257:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5028:5040  periodFinish */\n      sload(0x06)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5010:5025  block.timestamp */\n      timestamp\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5010:5040  block.timestamp < periodFinish */\n      lt\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5006:5078  if (block.timestamp < periodFinish) {... */\n      iszero\n      tag_259\n      jumpi\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5057:5071  WaitToFinish() */\n      mload(0x40)\n      0x38e3211200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5006:5078  if (block.timestamp < periodFinish) {... */\n    tag_259:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5101:5109  duration */\n      dup1\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5083:5098  rewardsDuration */\n      0x08\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5083:5109  rewardsDuration = duration */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5120:5152  RewardsDurationUpdated(duration) */\n      0xfb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d3\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5143:5151  duration */\n      dup2\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":5120:5152  RewardsDurationUpdated(duration) */\n      mload(0x40)\n      tag_260\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":4935:5157  function setRewardsDuration(uint256 duration) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10907:11000  function rewardPerToken() external view returns (uint256) {... */\n    tag_116:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10956:10963  uint256 */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10978:10995  _rewardPerToken() */\n      tag_262\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10978:10993  _rewardPerToken */\n      tag_144\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10978:10995  _rewardPerToken() */\n      jump\t// in\n    tag_262:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10971:10995  return _rewardPerToken() */\n      swap1\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":10907:11000  function rewardPerToken() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1771:1797  IERC20 public rewardsToken */\n    tag_119:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":2130:2165  uint256 public rewardPerTokenStored */\n    tag_122:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":1855:1882  uint256 public periodFinish */\n    tag_125:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_264\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2182:2183  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2170  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_266:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_269\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_185\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9786:9997  function _earned(address account) internal view returns (uint256) {... */\n    tag_132:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9843:9850  uint256 */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9976:9983  rewards */\n      0x0c\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9976:9992  rewards[account] */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9984:9991  account */\n      dup4\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9976:9992  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9963:9967  1e18 */\n      0x0de0b6b3a7640000\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9921:9943  userRewardPerTokenPaid */\n      0x0b\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9921:9952  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9944:9951  account */\n      dup6\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9921:9952  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9901:9918  _rewardPerToken() */\n      tag_271\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9901:9916  _rewardPerToken */\n      tag_144\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9901:9918  _rewardPerToken() */\n      jump\t// in\n    tag_271:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9901:9952  _rewardPerToken() - userRewardPerTokenPaid[account] */\n      tag_272\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_272:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9872:9880  balances */\n      0x0e\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9872:9889  balances[account] */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9881:9888  account */\n      dup7\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9872:9889  balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9872:9953  balances[account] *... */\n      tag_273\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_273:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9871:9967  (balances[account] *... */\n      tag_274\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_274:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9871:9992  (balances[account] *... */\n      tag_275\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_275:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9858:9992  return... */\n      swap1\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9786:9997  function _earned(address account) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_281\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_63\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap1\n      tag_284\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_282:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9513:9782  function _rewardPerToken() internal view returns (uint256) {... */\n    tag_144:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9563:9570  uint256 */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9597:9598  0 */\n      dup1\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9582:9593  totalSupply */\n      sload(0x0d)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9582:9598  totalSupply == 0 */\n      sub\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9578:9642  if (totalSupply == 0) {... */\n      tag_286\n      jumpi\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9615:9635  rewardPerTokenStored */\n      sload(0x0a)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9608:9635  return rewardPerTokenStored */\n      swap1\n      pop\n      jump(tag_285)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9578:9642  if (totalSupply == 0) {... */\n    tag_286:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9766:9777  totalSupply */\n      sload(0x0d)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9752:9756  1e18 */\n      0x0de0b6b3a7640000\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9739:9749  rewardRate */\n      sload(0x07)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9721:9735  lastUpdateTime */\n      sload(0x09)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9691:9718  _lastTimeRewardApplicable() */\n      tag_287\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9691:9716  _lastTimeRewardApplicable */\n      tag_146\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9691:9718  _lastTimeRewardApplicable() */\n      jump\t// in\n    tag_287:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9691:9735  _lastTimeRewardApplicable() - lastUpdateTime */\n      tag_288\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_288:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9690:9749  (_lastTimeRewardApplicable() - lastUpdateTime) * rewardRate */\n      tag_289\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_289:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9690:9756  (_lastTimeRewardApplicable() - lastUpdateTime) * rewardRate * 1e18 */\n      tag_290\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_290:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9689:9777  ((_lastTimeRewardApplicable() - lastUpdateTime) * rewardRate * 1e18) /... */\n      tag_291\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_291:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9660:9680  rewardPerTokenStored */\n      sload(0x0a)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9660:9777  rewardPerTokenStored +... */\n      tag_292\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_292:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9647:9777  return... */\n      swap1\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9513:9782  function _rewardPerToken() internal view returns (uint256) {... */\n    tag_285:\n      swap1\n      jump\t// out\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9359:9509  function _lastTimeRewardApplicable() internal view returns (uint256) {... */\n    tag_146:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9419:9426  uint256 */\n      0x00\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9459:9471  periodFinish */\n      sload(0x06)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9441:9456  block.timestamp */\n      timestamp\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9441:9471  block.timestamp < periodFinish */\n      lt\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9441:9504  block.timestamp < periodFinish ? block.timestamp : periodFinish */\n      tag_294\n      jumpi\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9492:9504  periodFinish */\n      sload(0x06)\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9441:9504  block.timestamp < periodFinish ? block.timestamp : periodFinish */\n      jump(tag_295)\n    tag_294:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9474:9489  block.timestamp */\n      timestamp\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9441:9504  block.timestamp < periodFinish ? block.timestamp : periodFinish */\n    tag_295:\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9434:9504  return block.timestamp < periodFinish ? block.timestamp : periodFinish */\n      swap1\n      pop\n        /* \"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":9359:9509  function _lastTimeRewardApplicable() internal view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_297\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1043:1048  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1073:1096  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1098:1100  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1102:1107  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1050:1108  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_298\n      swap3\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1042  _callOptionalReturn */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1023:1109  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":941:1116  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_302\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_303\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_304\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_305\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_306\n      swap1\n      tag_307\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_305:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1355:1558  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1551  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_310\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1475:1480  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1505:1532  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1534:1538  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1540:1542  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1544:1549  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1482:1550  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_311\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_312\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1474  _callOptionalReturn */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1455:1551  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1355:1558  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5173:5815  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5592:5615  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5618:5687  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_314\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5646:5650  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5618:5687  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5626:5631  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5618:5645  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_315\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5618:5687  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5592:5687  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5726:5727  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5705:5715  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5705:5722  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5705:5727  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5705:5761  returndata.length == 0 || abi.decode(returndata, (bool)) */\n      dup1\n      tag_316\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5742:5752  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5731:5761  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_317\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_317:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5705:5761  returndata.length == 0 || abi.decode(returndata, (bool)) */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5697:5808  require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_318\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_319\n      swap1\n      tag_320\n      jump\t// in\n    tag_319:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_318:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5243:5815  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":5173:5815  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n    tag_315:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4241:4253  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_323\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4294:4300  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4302:4306  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4308:4309  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4311:4323  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4293  functionCallWithValue */\n      tag_324\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4272:4324  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4265:4324  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4108:4331  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n    tag_324:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5342  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5387:5392  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5383  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5362:5392  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5354:5435  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_326\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_327\n      swap1\n      tag_328\n      jump\t// in\n    tag_327:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_326:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5446:5458  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5460:5483  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5493  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5498  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5506:5511  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5513:5517  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5487:5518  target.call{value: value}(data) */\n      mload(0x40)\n      tag_329\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_329:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_333\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_332)\n    tag_333:\n      0x60\n      swap2\n      pop\n    tag_332:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5445:5518  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_334\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5562:5568  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5570:5577  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5579:5589  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5591:5603  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5561  verifyCallResultFromTarget */\n      tag_335\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5535:5604  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_334:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5528:5604  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5165:5611  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_335:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7851:7863  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7879:7886  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n      iszero\n      tag_337\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7928  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7916  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7923  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7906:7928  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n      tag_338\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      tag_339\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8132:8138  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8131  isContract */\n      tag_340\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8121:8139  isContract(target) */\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8113:8173  require(isContract(target), \"Address: call to non-contract\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_342\n      swap1\n      tag_343\n      jump\t// in\n    tag_342:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_341:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7902:8188  if (returndata.length == 0) {... */\n    tag_338:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8208:8218  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8201:8218  return returndata */\n      swap1\n      pop\n      jump(tag_336)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7875:8293  if (success) {... */\n    tag_337:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      tag_345\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8257:8267  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8269:8281  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8256  _revert */\n      tag_346\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8249:8282  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7671:8299  function verifyCallResultFromTarget(... */\n    tag_336:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1472:1476  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1724:1725  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1709  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1695:1725  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8821:9361  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9000:9001  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8990  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:8997  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8980:9001  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n      iszero\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9208:9218  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9202:9219  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9264:9279  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9251:9261  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9247:9249  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9243:9262  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9236:9280  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8976:9355  if (returndata.length > 0) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9331:9343  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9324:9344  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap2\n      swap1\n      tag_352\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:82   */\n    tag_353:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_354:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_355:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_356:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_357:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_440\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_356\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_358:\n        /* \"#utility.yul\":641:665   */\n      tag_442\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_357\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_443\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_443:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_359:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_445\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_358\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_38:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_448\n      tag_354\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":917:1036   */\n    tag_447:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_449\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_359\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_360:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_361:\n        /* \"#utility.yul\":1346:1370   */\n      tag_452\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_360\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_41:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_454\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_361\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1701   */\n    tag_362:\n        /* \"#utility.yul\":1645:1652   */\n      0x00\n        /* \"#utility.yul\":1688:1693   */\n      dup2\n        /* \"#utility.yul\":1681:1694   */\n      iszero\n        /* \"#utility.yul\":1674:1695   */\n      iszero\n        /* \"#utility.yul\":1663:1695   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1707:1816   */\n    tag_363:\n        /* \"#utility.yul\":1788:1809   */\n      tag_457\n        /* \"#utility.yul\":1803:1808   */\n      dup2\n        /* \"#utility.yul\":1788:1809   */\n      tag_362\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":1783:1786   */\n      dup3\n        /* \"#utility.yul\":1776:1810   */\n      mstore\n        /* \"#utility.yul\":1707:1816   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1822:2032   */\n    tag_58:\n        /* \"#utility.yul\":1909:1913   */\n      0x00\n        /* \"#utility.yul\":1947:1949   */\n      0x20\n        /* \"#utility.yul\":1936:1945   */\n      dup3\n        /* \"#utility.yul\":1932:1950   */\n      add\n        /* \"#utility.yul\":1924:1950   */\n      swap1\n      pop\n        /* \"#utility.yul\":1960:2025   */\n      tag_459\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2011:2020   */\n      dup4\n        /* \"#utility.yul\":2007:2024   */\n      add\n        /* \"#utility.yul\":1998:2004   */\n      dup5\n        /* \"#utility.yul\":1960:2025   */\n      tag_363\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":1822:2032   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2155   */\n    tag_364:\n        /* \"#utility.yul\":2147:2148   */\n      0x00\n        /* \"#utility.yul\":2144:2145   */\n      dup1\n        /* \"#utility.yul\":2137:2149   */\n      revert\n        /* \"#utility.yul\":2161:2263   */\n    tag_365:\n        /* \"#utility.yul\":2202:2208   */\n      0x00\n        /* \"#utility.yul\":2253:2255   */\n      0x1f\n        /* \"#utility.yul\":2249:2256   */\n      not\n        /* \"#utility.yul\":2244:2246   */\n      0x1f\n        /* \"#utility.yul\":2237:2242   */\n      dup4\n        /* \"#utility.yul\":2233:2247   */\n      add\n        /* \"#utility.yul\":2229:2257   */\n      and\n        /* \"#utility.yul\":2219:2257   */\n      swap1\n      pop\n        /* \"#utility.yul\":2161:2263   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2269:2449   */\n    tag_366:\n        /* \"#utility.yul\":2317:2394   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2314:2315   */\n      0x00\n        /* \"#utility.yul\":2307:2395   */\n      mstore\n        /* \"#utility.yul\":2414:2418   */\n      0x41\n        /* \"#utility.yul\":2411:2412   */\n      0x04\n        /* \"#utility.yul\":2404:2419   */\n      mstore\n        /* \"#utility.yul\":2438:2442   */\n      0x24\n        /* \"#utility.yul\":2435:2436   */\n      0x00\n        /* \"#utility.yul\":2428:2443   */\n      revert\n        /* \"#utility.yul\":2455:2736   */\n    tag_367:\n        /* \"#utility.yul\":2538:2565   */\n      tag_464\n        /* \"#utility.yul\":2560:2564   */\n      dup3\n        /* \"#utility.yul\":2538:2565   */\n      tag_365\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":2530:2536   */\n      dup2\n        /* \"#utility.yul\":2526:2566   */\n      add\n        /* \"#utility.yul\":2668:2674   */\n      dup2\n        /* \"#utility.yul\":2656:2666   */\n      dup2\n        /* \"#utility.yul\":2653:2675   */\n      lt\n        /* \"#utility.yul\":2632:2650   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2620:2630   */\n      dup3\n        /* \"#utility.yul\":2617:2651   */\n      gt\n        /* \"#utility.yul\":2614:2676   */\n      or\n        /* \"#utility.yul\":2611:2699   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":2679:2697   */\n      tag_466\n      tag_366\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":2611:2699   */\n    tag_465:\n        /* \"#utility.yul\":2719:2729   */\n      dup1\n        /* \"#utility.yul\":2715:2717   */\n      0x40\n        /* \"#utility.yul\":2708:2730   */\n      mstore\n        /* \"#utility.yul\":2498:2736   */\n      pop\n        /* \"#utility.yul\":2455:2736   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2742:2871   */\n    tag_368:\n        /* \"#utility.yul\":2776:2782   */\n      0x00\n        /* \"#utility.yul\":2803:2823   */\n      tag_468\n      tag_353\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":2793:2823   */\n      swap1\n      pop\n        /* \"#utility.yul\":2832:2865   */\n      tag_469\n        /* \"#utility.yul\":2860:2864   */\n      dup3\n        /* \"#utility.yul\":2852:2858   */\n      dup3\n        /* \"#utility.yul\":2832:2865   */\n      tag_367\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":2742:2871   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2877:3198   */\n    tag_369:\n        /* \"#utility.yul\":2964:2968   */\n      0x00\n        /* \"#utility.yul\":3054:3072   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3046:3052   */\n      dup3\n        /* \"#utility.yul\":3043:3073   */\n      gt\n        /* \"#utility.yul\":3040:3096   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":3076:3094   */\n      tag_472\n      tag_366\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":3040:3096   */\n    tag_471:\n        /* \"#utility.yul\":3126:3130   */\n      0x20\n        /* \"#utility.yul\":3118:3124   */\n      dup3\n        /* \"#utility.yul\":3114:3131   */\n      mul\n        /* \"#utility.yul\":3106:3131   */\n      swap1\n      pop\n        /* \"#utility.yul\":3186:3190   */\n      0x20\n        /* \"#utility.yul\":3180:3184   */\n      dup2\n        /* \"#utility.yul\":3176:3191   */\n      add\n        /* \"#utility.yul\":3168:3191   */\n      swap1\n      pop\n        /* \"#utility.yul\":2877:3198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3204:3321   */\n    tag_370:\n        /* \"#utility.yul\":3313:3314   */\n      0x00\n        /* \"#utility.yul\":3310:3311   */\n      dup1\n        /* \"#utility.yul\":3303:3315   */\n      revert\n        /* \"#utility.yul\":3327:3444   */\n    tag_371:\n        /* \"#utility.yul\":3436:3437   */\n      0x00\n        /* \"#utility.yul\":3433:3434   */\n      dup1\n        /* \"#utility.yul\":3426:3438   */\n      revert\n        /* \"#utility.yul\":3450:3758   */\n    tag_372:\n        /* \"#utility.yul\":3512:3516   */\n      0x00\n        /* \"#utility.yul\":3602:3620   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3594:3600   */\n      dup3\n        /* \"#utility.yul\":3591:3621   */\n      gt\n        /* \"#utility.yul\":3588:3644   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":3624:3642   */\n      tag_477\n      tag_366\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":3588:3644   */\n    tag_476:\n        /* \"#utility.yul\":3662:3691   */\n      tag_478\n        /* \"#utility.yul\":3684:3690   */\n      dup3\n        /* \"#utility.yul\":3662:3691   */\n      tag_365\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":3654:3691   */\n      swap1\n      pop\n        /* \"#utility.yul\":3746:3750   */\n      0x20\n        /* \"#utility.yul\":3740:3744   */\n      dup2\n        /* \"#utility.yul\":3736:3751   */\n      add\n        /* \"#utility.yul\":3728:3751   */\n      swap1\n      pop\n        /* \"#utility.yul\":3450:3758   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3764:3910   */\n    tag_373:\n        /* \"#utility.yul\":3861:3867   */\n      dup3\n        /* \"#utility.yul\":3856:3859   */\n      dup2\n        /* \"#utility.yul\":3851:3854   */\n      dup4\n        /* \"#utility.yul\":3838:3868   */\n      calldatacopy\n        /* \"#utility.yul\":3902:3903   */\n      0x00\n        /* \"#utility.yul\":3893:3899   */\n      dup4\n        /* \"#utility.yul\":3888:3891   */\n      dup4\n        /* \"#utility.yul\":3884:3900   */\n      add\n        /* \"#utility.yul\":3877:3904   */\n      mstore\n        /* \"#utility.yul\":3764:3910   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3916:4341   */\n    tag_374:\n        /* \"#utility.yul\":3994:3999   */\n      0x00\n        /* \"#utility.yul\":4019:4085   */\n      tag_481\n        /* \"#utility.yul\":4035:4084   */\n      tag_482\n        /* \"#utility.yul\":4077:4083   */\n      dup5\n        /* \"#utility.yul\":4035:4084   */\n      tag_372\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":4019:4085   */\n      tag_368\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":4010:4085   */\n      swap1\n      pop\n        /* \"#utility.yul\":4108:4114   */\n      dup3\n        /* \"#utility.yul\":4101:4106   */\n      dup2\n        /* \"#utility.yul\":4094:4115   */\n      mstore\n        /* \"#utility.yul\":4146:4150   */\n      0x20\n        /* \"#utility.yul\":4139:4144   */\n      dup2\n        /* \"#utility.yul\":4135:4151   */\n      add\n        /* \"#utility.yul\":4184:4187   */\n      dup5\n        /* \"#utility.yul\":4175:4181   */\n      dup5\n        /* \"#utility.yul\":4170:4173   */\n      dup5\n        /* \"#utility.yul\":4166:4182   */\n      add\n        /* \"#utility.yul\":4163:4188   */\n      gt\n        /* \"#utility.yul\":4160:4272   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":4191:4270   */\n      tag_484\n      tag_371\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":4160:4272   */\n    tag_483:\n        /* \"#utility.yul\":4281:4335   */\n      tag_485\n        /* \"#utility.yul\":4328:4334   */\n      dup5\n        /* \"#utility.yul\":4323:4326   */\n      dup3\n        /* \"#utility.yul\":4318:4321   */\n      dup6\n        /* \"#utility.yul\":4281:4335   */\n      tag_373\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":4000:4341   */\n      pop\n        /* \"#utility.yul\":3916:4341   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4361:4701   */\n    tag_375:\n        /* \"#utility.yul\":4417:4422   */\n      0x00\n        /* \"#utility.yul\":4466:4469   */\n      dup3\n        /* \"#utility.yul\":4459:4463   */\n      0x1f\n        /* \"#utility.yul\":4451:4457   */\n      dup4\n        /* \"#utility.yul\":4447:4464   */\n      add\n        /* \"#utility.yul\":4443:4470   */\n      slt\n        /* \"#utility.yul\":4433:4555   */\n      tag_487\n      jumpi\n        /* \"#utility.yul\":4474:4553   */\n      tag_488\n      tag_364\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":4433:4555   */\n    tag_487:\n        /* \"#utility.yul\":4591:4597   */\n      dup2\n        /* \"#utility.yul\":4578:4598   */\n      calldataload\n        /* \"#utility.yul\":4616:4695   */\n      tag_489\n        /* \"#utility.yul\":4691:4694   */\n      dup5\n        /* \"#utility.yul\":4683:4689   */\n      dup3\n        /* \"#utility.yul\":4676:4680   */\n      0x20\n        /* \"#utility.yul\":4668:4674   */\n      dup7\n        /* \"#utility.yul\":4664:4681   */\n      add\n        /* \"#utility.yul\":4616:4695   */\n      tag_374\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":4607:4695   */\n      swap2\n      pop\n        /* \"#utility.yul\":4423:4701   */\n      pop\n        /* \"#utility.yul\":4361:4701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4723:5668   */\n    tag_376:\n        /* \"#utility.yul\":4829:4834   */\n      0x00\n        /* \"#utility.yul\":4854:4945   */\n      tag_491\n        /* \"#utility.yul\":4870:4944   */\n      tag_492\n        /* \"#utility.yul\":4937:4943   */\n      dup5\n        /* \"#utility.yul\":4870:4944   */\n      tag_369\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":4854:4945   */\n      tag_368\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":4845:4945   */\n      swap1\n      pop\n        /* \"#utility.yul\":4965:4970   */\n      dup1\n        /* \"#utility.yul\":4994:5000   */\n      dup4\n        /* \"#utility.yul\":4987:4992   */\n      dup3\n        /* \"#utility.yul\":4980:5001   */\n      mstore\n        /* \"#utility.yul\":5028:5032   */\n      0x20\n        /* \"#utility.yul\":5021:5026   */\n      dup3\n        /* \"#utility.yul\":5017:5033   */\n      add\n        /* \"#utility.yul\":5010:5033   */\n      swap1\n      pop\n        /* \"#utility.yul\":5081:5085   */\n      0x20\n        /* \"#utility.yul\":5073:5079   */\n      dup5\n        /* \"#utility.yul\":5069:5086   */\n      mul\n        /* \"#utility.yul\":5061:5067   */\n      dup4\n        /* \"#utility.yul\":5057:5087   */\n      add\n        /* \"#utility.yul\":5110:5113   */\n      dup6\n        /* \"#utility.yul\":5102:5108   */\n      dup2\n        /* \"#utility.yul\":5099:5114   */\n      gt\n        /* \"#utility.yul\":5096:5218   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":5129:5208   */\n      tag_494\n      tag_370\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":5096:5218   */\n    tag_493:\n        /* \"#utility.yul\":5244:5250   */\n      dup4\n        /* \"#utility.yul\":5227:5662   */\n    tag_495:\n        /* \"#utility.yul\":5261:5267   */\n      dup2\n        /* \"#utility.yul\":5256:5259   */\n      dup2\n        /* \"#utility.yul\":5253:5268   */\n      lt\n        /* \"#utility.yul\":5227:5662   */\n      iszero\n      tag_497\n      jumpi\n        /* \"#utility.yul\":5350:5353   */\n      dup1\n        /* \"#utility.yul\":5337:5354   */\n      calldataload\n        /* \"#utility.yul\":5386:5404   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5373:5384   */\n      dup2\n        /* \"#utility.yul\":5370:5405   */\n      gt\n        /* \"#utility.yul\":5367:5489   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":5408:5487   */\n      tag_499\n      tag_364\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":5367:5489   */\n    tag_498:\n        /* \"#utility.yul\":5532:5543   */\n      dup1\n        /* \"#utility.yul\":5524:5530   */\n      dup7\n        /* \"#utility.yul\":5520:5544   */\n      add\n        /* \"#utility.yul\":5570:5617   */\n      tag_500\n        /* \"#utility.yul\":5613:5616   */\n      dup10\n        /* \"#utility.yul\":5601:5611   */\n      dup3\n        /* \"#utility.yul\":5570:5617   */\n      tag_375\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":5565:5568   */\n      dup6\n        /* \"#utility.yul\":5558:5618   */\n      mstore\n        /* \"#utility.yul\":5647:5651   */\n      0x20\n        /* \"#utility.yul\":5642:5645   */\n      dup6\n        /* \"#utility.yul\":5638:5652   */\n      add\n        /* \"#utility.yul\":5631:5652   */\n      swap5\n      pop\n        /* \"#utility.yul\":5303:5662   */\n      pop\n      pop\n        /* \"#utility.yul\":5287:5291   */\n      0x20\n        /* \"#utility.yul\":5282:5285   */\n      dup2\n        /* \"#utility.yul\":5278:5292   */\n      add\n        /* \"#utility.yul\":5271:5292   */\n      swap1\n      pop\n        /* \"#utility.yul\":5227:5662   */\n      jump(tag_495)\n    tag_497:\n        /* \"#utility.yul\":5231:5252   */\n      pop\n        /* \"#utility.yul\":4835:5668   */\n      pop\n      pop\n        /* \"#utility.yul\":4723:5668   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5690:6080   */\n    tag_377:\n        /* \"#utility.yul\":5771:5776   */\n      0x00\n        /* \"#utility.yul\":5820:5823   */\n      dup3\n        /* \"#utility.yul\":5813:5817   */\n      0x1f\n        /* \"#utility.yul\":5805:5811   */\n      dup4\n        /* \"#utility.yul\":5801:5818   */\n      add\n        /* \"#utility.yul\":5797:5824   */\n      slt\n        /* \"#utility.yul\":5787:5909   */\n      tag_502\n      jumpi\n        /* \"#utility.yul\":5828:5907   */\n      tag_503\n      tag_364\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":5787:5909   */\n    tag_502:\n        /* \"#utility.yul\":5945:5951   */\n      dup2\n        /* \"#utility.yul\":5932:5952   */\n      calldataload\n        /* \"#utility.yul\":5970:6074   */\n      tag_504\n        /* \"#utility.yul\":6070:6073   */\n      dup5\n        /* \"#utility.yul\":6062:6068   */\n      dup3\n        /* \"#utility.yul\":6055:6059   */\n      0x20\n        /* \"#utility.yul\":6047:6053   */\n      dup7\n        /* \"#utility.yul\":6043:6060   */\n      add\n        /* \"#utility.yul\":5970:6074   */\n      tag_376\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":5961:6074   */\n      swap2\n      pop\n        /* \"#utility.yul\":5777:6080   */\n      pop\n        /* \"#utility.yul\":5690:6080   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6086:6397   */\n    tag_378:\n        /* \"#utility.yul\":6163:6167   */\n      0x00\n        /* \"#utility.yul\":6253:6271   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6245:6251   */\n      dup3\n        /* \"#utility.yul\":6242:6272   */\n      gt\n        /* \"#utility.yul\":6239:6295   */\n      iszero\n      tag_506\n      jumpi\n        /* \"#utility.yul\":6275:6293   */\n      tag_507\n      tag_366\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":6239:6295   */\n    tag_506:\n        /* \"#utility.yul\":6325:6329   */\n      0x20\n        /* \"#utility.yul\":6317:6323   */\n      dup3\n        /* \"#utility.yul\":6313:6330   */\n      mul\n        /* \"#utility.yul\":6305:6330   */\n      swap1\n      pop\n        /* \"#utility.yul\":6385:6389   */\n      0x20\n        /* \"#utility.yul\":6379:6383   */\n      dup2\n        /* \"#utility.yul\":6375:6390   */\n      add\n        /* \"#utility.yul\":6367:6390   */\n      swap1\n      pop\n        /* \"#utility.yul\":6086:6397   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6403:6525   */\n    tag_379:\n        /* \"#utility.yul\":6476:6500   */\n      tag_509\n        /* \"#utility.yul\":6494:6499   */\n      dup2\n        /* \"#utility.yul\":6476:6500   */\n      tag_360\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":6469:6474   */\n      dup2\n        /* \"#utility.yul\":6466:6501   */\n      eq\n        /* \"#utility.yul\":6456:6519   */\n      tag_510\n      jumpi\n        /* \"#utility.yul\":6515:6516   */\n      0x00\n        /* \"#utility.yul\":6512:6513   */\n      dup1\n        /* \"#utility.yul\":6505:6517   */\n      revert\n        /* \"#utility.yul\":6456:6519   */\n    tag_510:\n        /* \"#utility.yul\":6403:6525   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6531:6670   */\n    tag_380:\n        /* \"#utility.yul\":6577:6582   */\n      0x00\n        /* \"#utility.yul\":6615:6621   */\n      dup2\n        /* \"#utility.yul\":6602:6622   */\n      calldataload\n        /* \"#utility.yul\":6593:6622   */\n      swap1\n      pop\n        /* \"#utility.yul\":6631:6664   */\n      tag_512\n        /* \"#utility.yul\":6658:6663   */\n      dup2\n        /* \"#utility.yul\":6631:6664   */\n      tag_379\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":6531:6670   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6693:7403   */\n    tag_381:\n        /* \"#utility.yul\":6789:6794   */\n      0x00\n        /* \"#utility.yul\":6814:6895   */\n      tag_514\n        /* \"#utility.yul\":6830:6894   */\n      tag_515\n        /* \"#utility.yul\":6887:6893   */\n      dup5\n        /* \"#utility.yul\":6830:6894   */\n      tag_378\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":6814:6895   */\n      tag_368\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":6805:6895   */\n      swap1\n      pop\n        /* \"#utility.yul\":6915:6920   */\n      dup1\n        /* \"#utility.yul\":6944:6950   */\n      dup4\n        /* \"#utility.yul\":6937:6942   */\n      dup3\n        /* \"#utility.yul\":6930:6951   */\n      mstore\n        /* \"#utility.yul\":6978:6982   */\n      0x20\n        /* \"#utility.yul\":6971:6976   */\n      dup3\n        /* \"#utility.yul\":6967:6983   */\n      add\n        /* \"#utility.yul\":6960:6983   */\n      swap1\n      pop\n        /* \"#utility.yul\":7031:7035   */\n      0x20\n        /* \"#utility.yul\":7023:7029   */\n      dup5\n        /* \"#utility.yul\":7019:7036   */\n      mul\n        /* \"#utility.yul\":7011:7017   */\n      dup4\n        /* \"#utility.yul\":7007:7037   */\n      add\n        /* \"#utility.yul\":7060:7063   */\n      dup6\n        /* \"#utility.yul\":7052:7058   */\n      dup2\n        /* \"#utility.yul\":7049:7064   */\n      gt\n        /* \"#utility.yul\":7046:7168   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":7079:7158   */\n      tag_517\n      tag_370\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":7046:7168   */\n    tag_516:\n        /* \"#utility.yul\":7194:7200   */\n      dup4\n        /* \"#utility.yul\":7177:7397   */\n    tag_518:\n        /* \"#utility.yul\":7211:7217   */\n      dup2\n        /* \"#utility.yul\":7206:7209   */\n      dup2\n        /* \"#utility.yul\":7203:7218   */\n      lt\n        /* \"#utility.yul\":7177:7397   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":7286:7289   */\n      dup1\n        /* \"#utility.yul\":7315:7352   */\n      tag_521\n        /* \"#utility.yul\":7348:7351   */\n      dup9\n        /* \"#utility.yul\":7336:7346   */\n      dup3\n        /* \"#utility.yul\":7315:7352   */\n      tag_380\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":7310:7313   */\n      dup5\n        /* \"#utility.yul\":7303:7353   */\n      mstore\n        /* \"#utility.yul\":7382:7386   */\n      0x20\n        /* \"#utility.yul\":7377:7380   */\n      dup5\n        /* \"#utility.yul\":7373:7387   */\n      add\n        /* \"#utility.yul\":7366:7387   */\n      swap4\n      pop\n        /* \"#utility.yul\":7253:7397   */\n      pop\n        /* \"#utility.yul\":7237:7241   */\n      0x20\n        /* \"#utility.yul\":7232:7235   */\n      dup2\n        /* \"#utility.yul\":7228:7242   */\n      add\n        /* \"#utility.yul\":7221:7242   */\n      swap1\n      pop\n        /* \"#utility.yul\":7177:7397   */\n      jump(tag_518)\n    tag_520:\n        /* \"#utility.yul\":7181:7202   */\n      pop\n        /* \"#utility.yul\":6795:7403   */\n      pop\n      pop\n        /* \"#utility.yul\":6693:7403   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7426:7796   */\n    tag_382:\n        /* \"#utility.yul\":7497:7502   */\n      0x00\n        /* \"#utility.yul\":7546:7549   */\n      dup3\n        /* \"#utility.yul\":7539:7543   */\n      0x1f\n        /* \"#utility.yul\":7531:7537   */\n      dup4\n        /* \"#utility.yul\":7527:7544   */\n      add\n        /* \"#utility.yul\":7523:7550   */\n      slt\n        /* \"#utility.yul\":7513:7635   */\n      tag_523\n      jumpi\n        /* \"#utility.yul\":7554:7633   */\n      tag_524\n      tag_364\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":7513:7635   */\n    tag_523:\n        /* \"#utility.yul\":7671:7677   */\n      dup2\n        /* \"#utility.yul\":7658:7678   */\n      calldataload\n        /* \"#utility.yul\":7696:7790   */\n      tag_525\n        /* \"#utility.yul\":7786:7789   */\n      dup5\n        /* \"#utility.yul\":7778:7784   */\n      dup3\n        /* \"#utility.yul\":7771:7775   */\n      0x20\n        /* \"#utility.yul\":7763:7769   */\n      dup7\n        /* \"#utility.yul\":7759:7776   */\n      add\n        /* \"#utility.yul\":7696:7790   */\n      tag_381\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":7687:7790   */\n      swap2\n      pop\n        /* \"#utility.yul\":7503:7796   */\n      pop\n        /* \"#utility.yul\":7426:7796   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7802:9091   */\n    tag_67:\n        /* \"#utility.yul\":7974:7980   */\n      0x00\n        /* \"#utility.yul\":7982:7988   */\n      dup1\n        /* \"#utility.yul\":7990:7996   */\n      0x00\n        /* \"#utility.yul\":8039:8041   */\n      0x60\n        /* \"#utility.yul\":8027:8036   */\n      dup5\n        /* \"#utility.yul\":8018:8025   */\n      dup7\n        /* \"#utility.yul\":8014:8037   */\n      sub\n        /* \"#utility.yul\":8010:8042   */\n      slt\n        /* \"#utility.yul\":8007:8126   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":8045:8124   */\n      tag_528\n      tag_354\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":8007:8126   */\n    tag_527:\n        /* \"#utility.yul\":8193:8194   */\n      0x00\n        /* \"#utility.yul\":8182:8191   */\n      dup5\n        /* \"#utility.yul\":8178:8195   */\n      add\n        /* \"#utility.yul\":8165:8196   */\n      calldataload\n        /* \"#utility.yul\":8223:8241   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8215:8221   */\n      dup2\n        /* \"#utility.yul\":8212:8242   */\n      gt\n        /* \"#utility.yul\":8209:8326   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":8245:8324   */\n      tag_530\n      tag_355\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":8209:8326   */\n    tag_529:\n        /* \"#utility.yul\":8350:8438   */\n      tag_531\n        /* \"#utility.yul\":8430:8437   */\n      dup7\n        /* \"#utility.yul\":8421:8427   */\n      dup3\n        /* \"#utility.yul\":8410:8419   */\n      dup8\n        /* \"#utility.yul\":8406:8428   */\n      add\n        /* \"#utility.yul\":8350:8438   */\n      tag_377\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":8340:8438   */\n      swap4\n      pop\n        /* \"#utility.yul\":8136:8448   */\n      pop\n        /* \"#utility.yul\":8515:8517   */\n      0x20\n        /* \"#utility.yul\":8504:8513   */\n      dup5\n        /* \"#utility.yul\":8500:8518   */\n      add\n        /* \"#utility.yul\":8487:8519   */\n      calldataload\n        /* \"#utility.yul\":8546:8564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8538:8544   */\n      dup2\n        /* \"#utility.yul\":8535:8565   */\n      gt\n        /* \"#utility.yul\":8532:8649   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":8568:8647   */\n      tag_533\n      tag_355\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":8532:8649   */\n    tag_532:\n        /* \"#utility.yul\":8673:8761   */\n      tag_534\n        /* \"#utility.yul\":8753:8760   */\n      dup7\n        /* \"#utility.yul\":8744:8750   */\n      dup3\n        /* \"#utility.yul\":8733:8742   */\n      dup8\n        /* \"#utility.yul\":8729:8751   */\n      add\n        /* \"#utility.yul\":8673:8761   */\n      tag_377\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":8663:8761   */\n      swap3\n      pop\n        /* \"#utility.yul\":8458:8771   */\n      pop\n        /* \"#utility.yul\":8838:8840   */\n      0x40\n        /* \"#utility.yul\":8827:8836   */\n      dup5\n        /* \"#utility.yul\":8823:8841   */\n      add\n        /* \"#utility.yul\":8810:8842   */\n      calldataload\n        /* \"#utility.yul\":8869:8887   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8861:8867   */\n      dup2\n        /* \"#utility.yul\":8858:8888   */\n      gt\n        /* \"#utility.yul\":8855:8972   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":8891:8970   */\n      tag_536\n      tag_355\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":8855:8972   */\n    tag_535:\n        /* \"#utility.yul\":8996:9074   */\n      tag_537\n        /* \"#utility.yul\":9066:9073   */\n      dup7\n        /* \"#utility.yul\":9057:9063   */\n      dup3\n        /* \"#utility.yul\":9046:9055   */\n      dup8\n        /* \"#utility.yul\":9042:9064   */\n      add\n        /* \"#utility.yul\":8996:9074   */\n      tag_382\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":8986:9074   */\n      swap2\n      pop\n        /* \"#utility.yul\":8781:9084   */\n      pop\n        /* \"#utility.yul\":7802:9091   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9097:9157   */\n    tag_383:\n        /* \"#utility.yul\":9125:9128   */\n      0x00\n        /* \"#utility.yul\":9146:9151   */\n      dup2\n        /* \"#utility.yul\":9139:9151   */\n      swap1\n      pop\n        /* \"#utility.yul\":9097:9157   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9163:9305   */\n    tag_384:\n        /* \"#utility.yul\":9213:9222   */\n      0x00\n        /* \"#utility.yul\":9246:9299   */\n      tag_540\n        /* \"#utility.yul\":9264:9298   */\n      tag_541\n        /* \"#utility.yul\":9273:9297   */\n      tag_542\n        /* \"#utility.yul\":9291:9296   */\n      dup5\n        /* \"#utility.yul\":9273:9297   */\n      tag_356\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":9264:9298   */\n      tag_383\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":9246:9299   */\n      tag_356\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":9233:9299   */\n      swap1\n      pop\n        /* \"#utility.yul\":9163:9305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9311:9437   */\n    tag_385:\n        /* \"#utility.yul\":9361:9370   */\n      0x00\n        /* \"#utility.yul\":9394:9431   */\n      tag_544\n        /* \"#utility.yul\":9425:9430   */\n      dup3\n        /* \"#utility.yul\":9394:9431   */\n      tag_384\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":9381:9431   */\n      swap1\n      pop\n        /* \"#utility.yul\":9311:9437   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9443:9583   */\n    tag_386:\n        /* \"#utility.yul\":9507:9516   */\n      0x00\n        /* \"#utility.yul\":9540:9577   */\n      tag_546\n        /* \"#utility.yul\":9571:9576   */\n      dup3\n        /* \"#utility.yul\":9540:9577   */\n      tag_385\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":9527:9577   */\n      swap1\n      pop\n        /* \"#utility.yul\":9443:9583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9589:9748   */\n    tag_387:\n        /* \"#utility.yul\":9690:9741   */\n      tag_548\n        /* \"#utility.yul\":9735:9740   */\n      dup2\n        /* \"#utility.yul\":9690:9741   */\n      tag_386\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":9685:9688   */\n      dup3\n        /* \"#utility.yul\":9678:9742   */\n      mstore\n        /* \"#utility.yul\":9589:9748   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9754:10004   */\n    tag_78:\n        /* \"#utility.yul\":9861:9865   */\n      0x00\n        /* \"#utility.yul\":9899:9901   */\n      0x20\n        /* \"#utility.yul\":9888:9897   */\n      dup3\n        /* \"#utility.yul\":9884:9902   */\n      add\n        /* \"#utility.yul\":9876:9902   */\n      swap1\n      pop\n        /* \"#utility.yul\":9912:9997   */\n      tag_550\n        /* \"#utility.yul\":9994:9995   */\n      0x00\n        /* \"#utility.yul\":9983:9992   */\n      dup4\n        /* \"#utility.yul\":9979:9996   */\n      add\n        /* \"#utility.yul\":9970:9976   */\n      dup5\n        /* \"#utility.yul\":9912:9997   */\n      tag_387\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":9754:10004   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10010:10989   */\n    tag_87:\n        /* \"#utility.yul\":10107:10113   */\n      0x00\n        /* \"#utility.yul\":10115:10121   */\n      dup1\n        /* \"#utility.yul\":10123:10129   */\n      0x00\n        /* \"#utility.yul\":10172:10174   */\n      0x60\n        /* \"#utility.yul\":10160:10169   */\n      dup5\n        /* \"#utility.yul\":10151:10158   */\n      dup7\n        /* \"#utility.yul\":10147:10170   */\n      sub\n        /* \"#utility.yul\":10143:10175   */\n      slt\n        /* \"#utility.yul\":10140:10259   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":10178:10257   */\n      tag_553\n      tag_354\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":10140:10259   */\n    tag_552:\n        /* \"#utility.yul\":10326:10327   */\n      0x00\n        /* \"#utility.yul\":10315:10324   */\n      dup5\n        /* \"#utility.yul\":10311:10328   */\n      add\n        /* \"#utility.yul\":10298:10329   */\n      calldataload\n        /* \"#utility.yul\":10356:10374   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10348:10354   */\n      dup2\n        /* \"#utility.yul\":10345:10375   */\n      gt\n        /* \"#utility.yul\":10342:10459   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":10378:10457   */\n      tag_555\n      tag_355\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":10342:10459   */\n    tag_554:\n        /* \"#utility.yul\":10483:10546   */\n      tag_556\n        /* \"#utility.yul\":10538:10545   */\n      dup7\n        /* \"#utility.yul\":10529:10535   */\n      dup3\n        /* \"#utility.yul\":10518:10527   */\n      dup8\n        /* \"#utility.yul\":10514:10536   */\n      add\n        /* \"#utility.yul\":10483:10546   */\n      tag_375\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":10473:10546   */\n      swap4\n      pop\n        /* \"#utility.yul\":10269:10556   */\n      pop\n        /* \"#utility.yul\":10623:10625   */\n      0x20\n        /* \"#utility.yul\":10612:10621   */\n      dup5\n        /* \"#utility.yul\":10608:10626   */\n      add\n        /* \"#utility.yul\":10595:10627   */\n      calldataload\n        /* \"#utility.yul\":10654:10672   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10646:10652   */\n      dup2\n        /* \"#utility.yul\":10643:10673   */\n      gt\n        /* \"#utility.yul\":10640:10757   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":10676:10755   */\n      tag_558\n      tag_355\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":10640:10757   */\n    tag_557:\n        /* \"#utility.yul\":10781:10844   */\n      tag_559\n        /* \"#utility.yul\":10836:10843   */\n      dup7\n        /* \"#utility.yul\":10827:10833   */\n      dup3\n        /* \"#utility.yul\":10816:10825   */\n      dup8\n        /* \"#utility.yul\":10812:10834   */\n      add\n        /* \"#utility.yul\":10781:10844   */\n      tag_375\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":10771:10844   */\n      swap3\n      pop\n        /* \"#utility.yul\":10566:10854   */\n      pop\n        /* \"#utility.yul\":10893:10895   */\n      0x40\n        /* \"#utility.yul\":10919:10972   */\n      tag_560\n        /* \"#utility.yul\":10964:10971   */\n      dup7\n        /* \"#utility.yul\":10955:10961   */\n      dup3\n        /* \"#utility.yul\":10944:10953   */\n      dup8\n        /* \"#utility.yul\":10940:10962   */\n      add\n        /* \"#utility.yul\":10919:10972   */\n      tag_380\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":10909:10972   */\n      swap2\n      pop\n        /* \"#utility.yul\":10864:10982   */\n      pop\n        /* \"#utility.yul\":10010:10989   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10995:11085   */\n    tag_388:\n        /* \"#utility.yul\":11030:11037   */\n      0x00\n        /* \"#utility.yul\":11073:11078   */\n      dup2\n        /* \"#utility.yul\":11070:11071   */\n      0x07\n        /* \"#utility.yul\":11059:11079   */\n      signextend\n        /* \"#utility.yul\":11048:11079   */\n      swap1\n      pop\n        /* \"#utility.yul\":10995:11085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11091:11203   */\n    tag_389:\n        /* \"#utility.yul\":11174:11196   */\n      tag_563\n        /* \"#utility.yul\":11190:11195   */\n      dup2\n        /* \"#utility.yul\":11174:11196   */\n      tag_388\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":11169:11172   */\n      dup3\n        /* \"#utility.yul\":11162:11197   */\n      mstore\n        /* \"#utility.yul\":11091:11203   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11209:11423   */\n    tag_90:\n        /* \"#utility.yul\":11298:11302   */\n      0x00\n        /* \"#utility.yul\":11336:11338   */\n      0x20\n        /* \"#utility.yul\":11325:11334   */\n      dup3\n        /* \"#utility.yul\":11321:11339   */\n      add\n        /* \"#utility.yul\":11313:11339   */\n      swap1\n      pop\n        /* \"#utility.yul\":11349:11416   */\n      tag_565\n        /* \"#utility.yul\":11413:11414   */\n      0x00\n        /* \"#utility.yul\":11402:11411   */\n      dup4\n        /* \"#utility.yul\":11398:11415   */\n      add\n        /* \"#utility.yul\":11389:11395   */\n      dup5\n        /* \"#utility.yul\":11349:11416   */\n      tag_389\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":11209:11423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11429:11903   */\n    tag_93:\n        /* \"#utility.yul\":11497:11503   */\n      0x00\n        /* \"#utility.yul\":11505:11511   */\n      dup1\n        /* \"#utility.yul\":11554:11556   */\n      0x40\n        /* \"#utility.yul\":11542:11551   */\n      dup4\n        /* \"#utility.yul\":11533:11540   */\n      dup6\n        /* \"#utility.yul\":11529:11552   */\n      sub\n        /* \"#utility.yul\":11525:11557   */\n      slt\n        /* \"#utility.yul\":11522:11641   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":11560:11639   */\n      tag_568\n      tag_354\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":11522:11641   */\n    tag_567:\n        /* \"#utility.yul\":11680:11681   */\n      0x00\n        /* \"#utility.yul\":11705:11758   */\n      tag_569\n        /* \"#utility.yul\":11750:11757   */\n      dup6\n        /* \"#utility.yul\":11741:11747   */\n      dup3\n        /* \"#utility.yul\":11730:11739   */\n      dup7\n        /* \"#utility.yul\":11726:11748   */\n      add\n        /* \"#utility.yul\":11705:11758   */\n      tag_359\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":11695:11758   */\n      swap3\n      pop\n        /* \"#utility.yul\":11651:11768   */\n      pop\n        /* \"#utility.yul\":11807:11809   */\n      0x20\n        /* \"#utility.yul\":11833:11886   */\n      tag_570\n        /* \"#utility.yul\":11878:11885   */\n      dup6\n        /* \"#utility.yul\":11869:11875   */\n      dup3\n        /* \"#utility.yul\":11858:11867   */\n      dup7\n        /* \"#utility.yul\":11854:11876   */\n      add\n        /* \"#utility.yul\":11833:11886   */\n      tag_380\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":11823:11886   */\n      swap2\n      pop\n        /* \"#utility.yul\":11778:11896   */\n      pop\n        /* \"#utility.yul\":11429:11903   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11909:12027   */\n    tag_390:\n        /* \"#utility.yul\":11996:12020   */\n      tag_572\n        /* \"#utility.yul\":12014:12019   */\n      dup2\n        /* \"#utility.yul\":11996:12020   */\n      tag_357\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":11991:11994   */\n      dup3\n        /* \"#utility.yul\":11984:12021   */\n      mstore\n        /* \"#utility.yul\":11909:12027   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12033:12255   */\n    tag_102:\n        /* \"#utility.yul\":12126:12130   */\n      0x00\n        /* \"#utility.yul\":12164:12166   */\n      0x20\n        /* \"#utility.yul\":12153:12162   */\n      dup3\n        /* \"#utility.yul\":12149:12167   */\n      add\n        /* \"#utility.yul\":12141:12167   */\n      swap1\n      pop\n        /* \"#utility.yul\":12177:12248   */\n      tag_574\n        /* \"#utility.yul\":12245:12246   */\n      0x00\n        /* \"#utility.yul\":12234:12243   */\n      dup4\n        /* \"#utility.yul\":12230:12247   */\n      add\n        /* \"#utility.yul\":12221:12227   */\n      dup5\n        /* \"#utility.yul\":12177:12248   */\n      tag_390\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":12033:12255   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12261:12590   */\n    tag_110:\n        /* \"#utility.yul\":12320:12326   */\n      0x00\n        /* \"#utility.yul\":12369:12371   */\n      0x20\n        /* \"#utility.yul\":12357:12366   */\n      dup3\n        /* \"#utility.yul\":12348:12355   */\n      dup5\n        /* \"#utility.yul\":12344:12367   */\n      sub\n        /* \"#utility.yul\":12340:12372   */\n      slt\n        /* \"#utility.yul\":12337:12456   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":12375:12454   */\n      tag_577\n      tag_354\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":12337:12456   */\n    tag_576:\n        /* \"#utility.yul\":12495:12496   */\n      0x00\n        /* \"#utility.yul\":12520:12573   */\n      tag_578\n        /* \"#utility.yul\":12565:12572   */\n      dup5\n        /* \"#utility.yul\":12556:12562   */\n      dup3\n        /* \"#utility.yul\":12545:12554   */\n      dup6\n        /* \"#utility.yul\":12541:12563   */\n      add\n        /* \"#utility.yul\":12520:12573   */\n      tag_380\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":12510:12573   */\n      swap2\n      pop\n        /* \"#utility.yul\":12466:12583   */\n      pop\n        /* \"#utility.yul\":12261:12590   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12596:12776   */\n    tag_391:\n        /* \"#utility.yul\":12644:12721   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12641:12642   */\n      0x00\n        /* \"#utility.yul\":12634:12722   */\n      mstore\n        /* \"#utility.yul\":12741:12745   */\n      0x11\n        /* \"#utility.yul\":12738:12739   */\n      0x04\n        /* \"#utility.yul\":12731:12746   */\n      mstore\n        /* \"#utility.yul\":12765:12769   */\n      0x24\n        /* \"#utility.yul\":12762:12763   */\n      0x00\n        /* \"#utility.yul\":12755:12770   */\n      revert\n        /* \"#utility.yul\":12782:13192   */\n    tag_135:\n        /* \"#utility.yul\":12822:12829   */\n      0x00\n        /* \"#utility.yul\":12845:12865   */\n      tag_581\n        /* \"#utility.yul\":12863:12864   */\n      dup3\n        /* \"#utility.yul\":12845:12865   */\n      tag_360\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":12840:12865   */\n      swap2\n      pop\n        /* \"#utility.yul\":12879:12899   */\n      tag_582\n        /* \"#utility.yul\":12897:12898   */\n      dup4\n        /* \"#utility.yul\":12879:12899   */\n      tag_360\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":12874:12899   */\n      swap3\n      pop\n        /* \"#utility.yul\":12934:12935   */\n      dup3\n        /* \"#utility.yul\":12931:12932   */\n      dup3\n        /* \"#utility.yul\":12927:12936   */\n      mul\n        /* \"#utility.yul\":12956:12986   */\n      tag_583\n        /* \"#utility.yul\":12974:12985   */\n      dup2\n        /* \"#utility.yul\":12956:12986   */\n      tag_360\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":12945:12986   */\n      swap2\n      pop\n        /* \"#utility.yul\":13135:13136   */\n      dup3\n        /* \"#utility.yul\":13126:13133   */\n      dup3\n        /* \"#utility.yul\":13122:13137   */\n      div\n        /* \"#utility.yul\":13119:13120   */\n      dup5\n        /* \"#utility.yul\":13116:13138   */\n      eq\n        /* \"#utility.yul\":13096:13097   */\n      dup4\n        /* \"#utility.yul\":13089:13098   */\n      iszero\n        /* \"#utility.yul\":13069:13152   */\n      or\n        /* \"#utility.yul\":13046:13185   */\n      tag_584\n      jumpi\n        /* \"#utility.yul\":13165:13183   */\n      tag_585\n      tag_391\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":13046:13185   */\n    tag_584:\n        /* \"#utility.yul\":12830:13192   */\n      pop\n        /* \"#utility.yul\":12782:13192   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13198:13367   */\n    tag_392:\n        /* \"#utility.yul\":13282:13293   */\n      0x00\n        /* \"#utility.yul\":13316:13322   */\n      dup3\n        /* \"#utility.yul\":13311:13314   */\n      dup3\n        /* \"#utility.yul\":13304:13323   */\n      mstore\n        /* \"#utility.yul\":13356:13360   */\n      0x20\n        /* \"#utility.yul\":13351:13354   */\n      dup3\n        /* \"#utility.yul\":13347:13361   */\n      add\n        /* \"#utility.yul\":13332:13361   */\n      swap1\n      pop\n        /* \"#utility.yul\":13198:13367   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13373:13551   */\n    tag_393:\n        /* \"#utility.yul\":13513:13543   */\n      0x496e70757420617272617973206c656e677468206d69736d6174636800000000\n        /* \"#utility.yul\":13509:13510   */\n      0x00\n        /* \"#utility.yul\":13501:13507   */\n      dup3\n        /* \"#utility.yul\":13497:13511   */\n      add\n        /* \"#utility.yul\":13490:13544   */\n      mstore\n        /* \"#utility.yul\":13373:13551   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13557:13923   */\n    tag_394:\n        /* \"#utility.yul\":13699:13702   */\n      0x00\n        /* \"#utility.yul\":13720:13787   */\n      tag_589\n        /* \"#utility.yul\":13784:13786   */\n      0x1c\n        /* \"#utility.yul\":13779:13782   */\n      dup4\n        /* \"#utility.yul\":13720:13787   */\n      tag_392\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":13713:13787   */\n      swap2\n      pop\n        /* \"#utility.yul\":13796:13889   */\n      tag_590\n        /* \"#utility.yul\":13885:13888   */\n      dup3\n        /* \"#utility.yul\":13796:13889   */\n      tag_393\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":13914:13916   */\n      0x20\n        /* \"#utility.yul\":13909:13912   */\n      dup3\n        /* \"#utility.yul\":13905:13917   */\n      add\n        /* \"#utility.yul\":13898:13917   */\n      swap1\n      pop\n        /* \"#utility.yul\":13557:13923   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13929:14348   */\n    tag_165:\n        /* \"#utility.yul\":14095:14099   */\n      0x00\n        /* \"#utility.yul\":14133:14135   */\n      0x20\n        /* \"#utility.yul\":14122:14131   */\n      dup3\n        /* \"#utility.yul\":14118:14136   */\n      add\n        /* \"#utility.yul\":14110:14136   */\n      swap1\n      pop\n        /* \"#utility.yul\":14182:14191   */\n      dup2\n        /* \"#utility.yul\":14176:14180   */\n      dup2\n        /* \"#utility.yul\":14172:14192   */\n      sub\n        /* \"#utility.yul\":14168:14169   */\n      0x00\n        /* \"#utility.yul\":14157:14166   */\n      dup4\n        /* \"#utility.yul\":14153:14170   */\n      add\n        /* \"#utility.yul\":14146:14193   */\n      mstore\n        /* \"#utility.yul\":14210:14341   */\n      tag_592\n        /* \"#utility.yul\":14336:14340   */\n      dup2\n        /* \"#utility.yul\":14210:14341   */\n      tag_394\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":14202:14341   */\n      swap1\n      pop\n        /* \"#utility.yul\":13929:14348   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14354:14534   */\n    tag_172:\n        /* \"#utility.yul\":14402:14479   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14399:14400   */\n      0x00\n        /* \"#utility.yul\":14392:14480   */\n      mstore\n        /* \"#utility.yul\":14499:14503   */\n      0x32\n        /* \"#utility.yul\":14496:14497   */\n      0x04\n        /* \"#utility.yul\":14489:14504   */\n      mstore\n        /* \"#utility.yul\":14523:14527   */\n      0x24\n        /* \"#utility.yul\":14520:14521   */\n      0x00\n        /* \"#utility.yul\":14513:14528   */\n      revert\n        /* \"#utility.yul\":14540:14773   */\n    tag_178:\n        /* \"#utility.yul\":14579:14582   */\n      0x00\n        /* \"#utility.yul\":14602:14626   */\n      tag_595\n        /* \"#utility.yul\":14620:14625   */\n      dup3\n        /* \"#utility.yul\":14602:14626   */\n      tag_360\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":14593:14626   */\n      swap2\n      pop\n        /* \"#utility.yul\":14648:14714   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14641:14646   */\n      dup3\n        /* \"#utility.yul\":14638:14715   */\n      sub\n        /* \"#utility.yul\":14635:14738   */\n      tag_596\n      jumpi\n        /* \"#utility.yul\":14718:14736   */\n      tag_597\n      tag_391\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":14635:14738   */\n    tag_596:\n        /* \"#utility.yul\":14765:14766   */\n      0x01\n        /* \"#utility.yul\":14758:14763   */\n      dup3\n        /* \"#utility.yul\":14754:14767   */\n      add\n        /* \"#utility.yul\":14747:14767   */\n      swap1\n      pop\n        /* \"#utility.yul\":14540:14773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14779:14878   */\n    tag_395:\n        /* \"#utility.yul\":14831:14837   */\n      0x00\n        /* \"#utility.yul\":14865:14870   */\n      dup2\n        /* \"#utility.yul\":14859:14871   */\n      mload\n        /* \"#utility.yul\":14849:14871   */\n      swap1\n      pop\n        /* \"#utility.yul\":14779:14878   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14884:15130   */\n    tag_396:\n        /* \"#utility.yul\":14965:14966   */\n      0x00\n        /* \"#utility.yul\":14975:15088   */\n    tag_600:\n        /* \"#utility.yul\":14989:14995   */\n      dup4\n        /* \"#utility.yul\":14986:14987   */\n      dup2\n        /* \"#utility.yul\":14983:14996   */\n      lt\n        /* \"#utility.yul\":14975:15088   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":15074:15075   */\n      dup1\n        /* \"#utility.yul\":15069:15072   */\n      dup3\n        /* \"#utility.yul\":15065:15076   */\n      add\n        /* \"#utility.yul\":15059:15077   */\n      mload\n        /* \"#utility.yul\":15055:15056   */\n      dup2\n        /* \"#utility.yul\":15050:15053   */\n      dup5\n        /* \"#utility.yul\":15046:15057   */\n      add\n        /* \"#utility.yul\":15039:15078   */\n      mstore\n        /* \"#utility.yul\":15011:15013   */\n      0x20\n        /* \"#utility.yul\":15008:15009   */\n      dup2\n        /* \"#utility.yul\":15004:15014   */\n      add\n        /* \"#utility.yul\":14999:15014   */\n      swap1\n      pop\n        /* \"#utility.yul\":14975:15088   */\n      jump(tag_600)\n    tag_602:\n        /* \"#utility.yul\":15122:15123   */\n      0x00\n        /* \"#utility.yul\":15113:15119   */\n      dup5\n        /* \"#utility.yul\":15108:15111   */\n      dup5\n        /* \"#utility.yul\":15104:15120   */\n      add\n        /* \"#utility.yul\":15097:15124   */\n      mstore\n        /* \"#utility.yul\":14946:15130   */\n      pop\n        /* \"#utility.yul\":14884:15130   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15136:15513   */\n    tag_397:\n        /* \"#utility.yul\":15224:15227   */\n      0x00\n        /* \"#utility.yul\":15252:15291   */\n      tag_604\n        /* \"#utility.yul\":15285:15290   */\n      dup3\n        /* \"#utility.yul\":15252:15291   */\n      tag_395\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":15307:15378   */\n      tag_605\n        /* \"#utility.yul\":15371:15377   */\n      dup2\n        /* \"#utility.yul\":15366:15369   */\n      dup6\n        /* \"#utility.yul\":15307:15378   */\n      tag_392\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":15300:15378   */\n      swap4\n      pop\n        /* \"#utility.yul\":15387:15452   */\n      tag_606\n        /* \"#utility.yul\":15445:15451   */\n      dup2\n        /* \"#utility.yul\":15440:15443   */\n      dup6\n        /* \"#utility.yul\":15433:15437   */\n      0x20\n        /* \"#utility.yul\":15426:15431   */\n      dup7\n        /* \"#utility.yul\":15422:15438   */\n      add\n        /* \"#utility.yul\":15387:15452   */\n      tag_396\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":15477:15506   */\n      tag_607\n        /* \"#utility.yul\":15499:15505   */\n      dup2\n        /* \"#utility.yul\":15477:15506   */\n      tag_365\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":15472:15475   */\n      dup5\n        /* \"#utility.yul\":15468:15507   */\n      add\n        /* \"#utility.yul\":15461:15507   */\n      swap2\n      pop\n        /* \"#utility.yul\":15228:15513   */\n      pop\n        /* \"#utility.yul\":15136:15513   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15519:16254   */\n    tag_198:\n        /* \"#utility.yul\":15736:15740   */\n      0x00\n        /* \"#utility.yul\":15774:15777   */\n      0x80\n        /* \"#utility.yul\":15763:15772   */\n      dup3\n        /* \"#utility.yul\":15759:15778   */\n      add\n        /* \"#utility.yul\":15751:15778   */\n      swap1\n      pop\n        /* \"#utility.yul\":15788:15859   */\n      tag_609\n        /* \"#utility.yul\":15856:15857   */\n      0x00\n        /* \"#utility.yul\":15845:15854   */\n      dup4\n        /* \"#utility.yul\":15841:15858   */\n      add\n        /* \"#utility.yul\":15832:15838   */\n      dup8\n        /* \"#utility.yul\":15788:15859   */\n      tag_390\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":15906:15915   */\n      dup2\n        /* \"#utility.yul\":15900:15904   */\n      dup2\n        /* \"#utility.yul\":15896:15916   */\n      sub\n        /* \"#utility.yul\":15891:15893   */\n      0x20\n        /* \"#utility.yul\":15880:15889   */\n      dup4\n        /* \"#utility.yul\":15876:15894   */\n      add\n        /* \"#utility.yul\":15869:15917   */\n      mstore\n        /* \"#utility.yul\":15934:16012   */\n      tag_610\n        /* \"#utility.yul\":16007:16011   */\n      dup2\n        /* \"#utility.yul\":15998:16004   */\n      dup7\n        /* \"#utility.yul\":15934:16012   */\n      tag_397\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":15926:16012   */\n      swap1\n      pop\n        /* \"#utility.yul\":16059:16068   */\n      dup2\n        /* \"#utility.yul\":16053:16057   */\n      dup2\n        /* \"#utility.yul\":16049:16069   */\n      sub\n        /* \"#utility.yul\":16044:16046   */\n      0x40\n        /* \"#utility.yul\":16033:16042   */\n      dup4\n        /* \"#utility.yul\":16029:16047   */\n      add\n        /* \"#utility.yul\":16022:16070   */\n      mstore\n        /* \"#utility.yul\":16087:16165   */\n      tag_611\n        /* \"#utility.yul\":16160:16164   */\n      dup2\n        /* \"#utility.yul\":16151:16157   */\n      dup6\n        /* \"#utility.yul\":16087:16165   */\n      tag_397\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":16079:16165   */\n      swap1\n      pop\n        /* \"#utility.yul\":16175:16247   */\n      tag_612\n        /* \"#utility.yul\":16243:16245   */\n      0x60\n        /* \"#utility.yul\":16232:16241   */\n      dup4\n        /* \"#utility.yul\":16228:16246   */\n      add\n        /* \"#utility.yul\":16219:16225   */\n      dup5\n        /* \"#utility.yul\":16175:16247   */\n      tag_361\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":15519:16254   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16260:16378   */\n    tag_398:\n        /* \"#utility.yul\":16331:16353   */\n      tag_614\n        /* \"#utility.yul\":16347:16352   */\n      dup2\n        /* \"#utility.yul\":16331:16353   */\n      tag_388\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":16324:16329   */\n      dup2\n        /* \"#utility.yul\":16321:16354   */\n      eq\n        /* \"#utility.yul\":16311:16372   */\n      tag_615\n      jumpi\n        /* \"#utility.yul\":16368:16369   */\n      0x00\n        /* \"#utility.yul\":16365:16366   */\n      dup1\n        /* \"#utility.yul\":16358:16370   */\n      revert\n        /* \"#utility.yul\":16311:16372   */\n    tag_615:\n        /* \"#utility.yul\":16260:16378   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16384:16523   */\n    tag_399:\n        /* \"#utility.yul\":16439:16444   */\n      0x00\n        /* \"#utility.yul\":16470:16476   */\n      dup2\n        /* \"#utility.yul\":16464:16477   */\n      mload\n        /* \"#utility.yul\":16455:16477   */\n      swap1\n      pop\n        /* \"#utility.yul\":16486:16517   */\n      tag_617\n        /* \"#utility.yul\":16511:16516   */\n      dup2\n        /* \"#utility.yul\":16486:16517   */\n      tag_398\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":16384:16523   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16529:16876   */\n    tag_202:\n        /* \"#utility.yul\":16597:16603   */\n      0x00\n        /* \"#utility.yul\":16646:16648   */\n      0x20\n        /* \"#utility.yul\":16634:16643   */\n      dup3\n        /* \"#utility.yul\":16625:16632   */\n      dup5\n        /* \"#utility.yul\":16621:16644   */\n      sub\n        /* \"#utility.yul\":16617:16649   */\n      slt\n        /* \"#utility.yul\":16614:16733   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":16652:16731   */\n      tag_620\n      tag_354\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":16614:16733   */\n    tag_619:\n        /* \"#utility.yul\":16772:16773   */\n      0x00\n        /* \"#utility.yul\":16797:16859   */\n      tag_621\n        /* \"#utility.yul\":16851:16858   */\n      dup5\n        /* \"#utility.yul\":16842:16848   */\n      dup3\n        /* \"#utility.yul\":16831:16840   */\n      dup6\n        /* \"#utility.yul\":16827:16849   */\n      add\n        /* \"#utility.yul\":16797:16859   */\n      tag_399\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":16787:16859   */\n      swap2\n      pop\n        /* \"#utility.yul\":16743:16869   */\n      pop\n        /* \"#utility.yul\":16529:16876   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16882:17073   */\n    tag_204:\n        /* \"#utility.yul\":16922:16925   */\n      0x00\n        /* \"#utility.yul\":16941:16961   */\n      tag_623\n        /* \"#utility.yul\":16959:16960   */\n      dup3\n        /* \"#utility.yul\":16941:16961   */\n      tag_360\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":16936:16961   */\n      swap2\n      pop\n        /* \"#utility.yul\":16975:16995   */\n      tag_624\n        /* \"#utility.yul\":16993:16994   */\n      dup4\n        /* \"#utility.yul\":16975:16995   */\n      tag_360\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":16970:16995   */\n      swap3\n      pop\n        /* \"#utility.yul\":17018:17019   */\n      dup3\n        /* \"#utility.yul\":17015:17016   */\n      dup3\n        /* \"#utility.yul\":17011:17020   */\n      add\n        /* \"#utility.yul\":17004:17020   */\n      swap1\n      pop\n        /* \"#utility.yul\":17039:17042   */\n      dup1\n        /* \"#utility.yul\":17036:17037   */\n      dup3\n        /* \"#utility.yul\":17033:17043   */\n      gt\n        /* \"#utility.yul\":17030:17066   */\n      iszero\n      tag_625\n      jumpi\n        /* \"#utility.yul\":17046:17064   */\n      tag_626\n      tag_391\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":17030:17066   */\n    tag_625:\n        /* \"#utility.yul\":16882:17073   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17079:17411   */\n    tag_214:\n        /* \"#utility.yul\":17200:17204   */\n      0x00\n        /* \"#utility.yul\":17238:17240   */\n      0x40\n        /* \"#utility.yul\":17227:17236   */\n      dup3\n        /* \"#utility.yul\":17223:17241   */\n      add\n        /* \"#utility.yul\":17215:17241   */\n      swap1\n      pop\n        /* \"#utility.yul\":17251:17322   */\n      tag_628\n        /* \"#utility.yul\":17319:17320   */\n      0x00\n        /* \"#utility.yul\":17308:17317   */\n      dup4\n        /* \"#utility.yul\":17304:17321   */\n      add\n        /* \"#utility.yul\":17295:17301   */\n      dup6\n        /* \"#utility.yul\":17251:17322   */\n      tag_390\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":17332:17404   */\n      tag_629\n        /* \"#utility.yul\":17400:17402   */\n      0x20\n        /* \"#utility.yul\":17389:17398   */\n      dup4\n        /* \"#utility.yul\":17385:17403   */\n      add\n        /* \"#utility.yul\":17376:17382   */\n      dup5\n        /* \"#utility.yul\":17332:17404   */\n      tag_361\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":17079:17411   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17417:17535   */\n    tag_400:\n        /* \"#utility.yul\":17488:17494   */\n      0x00\n        /* \"#utility.yul\":17522:17527   */\n      dup2\n        /* \"#utility.yul\":17516:17528   */\n      sload\n        /* \"#utility.yul\":17506:17528   */\n      swap1\n      pop\n        /* \"#utility.yul\":17417:17535   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17541:17735   */\n    tag_401:\n        /* \"#utility.yul\":17650:17661   */\n      0x00\n        /* \"#utility.yul\":17684:17690   */\n      dup3\n        /* \"#utility.yul\":17679:17682   */\n      dup3\n        /* \"#utility.yul\":17672:17691   */\n      mstore\n        /* \"#utility.yul\":17724:17728   */\n      0x20\n        /* \"#utility.yul\":17719:17722   */\n      dup3\n        /* \"#utility.yul\":17715:17729   */\n      add\n        /* \"#utility.yul\":17700:17729   */\n      swap1\n      pop\n        /* \"#utility.yul\":17541:17735   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17741:17904   */\n    tag_402:\n        /* \"#utility.yul\":17812:17816   */\n      0x00\n        /* \"#utility.yul\":17835:17838   */\n      dup2\n        /* \"#utility.yul\":17827:17838   */\n      swap1\n      pop\n        /* \"#utility.yul\":17858:17861   */\n      dup2\n        /* \"#utility.yul\":17855:17856   */\n      0x00\n        /* \"#utility.yul\":17848:17862   */\n      mstore\n        /* \"#utility.yul\":17892:17896   */\n      0x20\n        /* \"#utility.yul\":17889:17890   */\n      0x00\n        /* \"#utility.yul\":17879:17897   */\n      keccak256\n        /* \"#utility.yul\":17871:17897   */\n      swap1\n      pop\n        /* \"#utility.yul\":17741:17904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17910:18090   */\n    tag_403:\n        /* \"#utility.yul\":17958:18035   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17955:17956   */\n      0x00\n        /* \"#utility.yul\":17948:18036   */\n      mstore\n        /* \"#utility.yul\":18055:18059   */\n      0x22\n        /* \"#utility.yul\":18052:18053   */\n      0x04\n        /* \"#utility.yul\":18045:18060   */\n      mstore\n        /* \"#utility.yul\":18079:18083   */\n      0x24\n        /* \"#utility.yul\":18076:18077   */\n      0x00\n        /* \"#utility.yul\":18069:18084   */\n      revert\n        /* \"#utility.yul\":18096:18416   */\n    tag_404:\n        /* \"#utility.yul\":18140:18146   */\n      0x00\n        /* \"#utility.yul\":18177:18178   */\n      0x02\n        /* \"#utility.yul\":18171:18175   */\n      dup3\n        /* \"#utility.yul\":18167:18179   */\n      div\n        /* \"#utility.yul\":18157:18179   */\n      swap1\n      pop\n        /* \"#utility.yul\":18224:18225   */\n      0x01\n        /* \"#utility.yul\":18218:18222   */\n      dup3\n        /* \"#utility.yul\":18214:18226   */\n      and\n        /* \"#utility.yul\":18245:18263   */\n      dup1\n        /* \"#utility.yul\":18235:18316   */\n      tag_635\n      jumpi\n        /* \"#utility.yul\":18301:18305   */\n      0x7f\n        /* \"#utility.yul\":18293:18299   */\n      dup3\n        /* \"#utility.yul\":18289:18306   */\n      and\n        /* \"#utility.yul\":18279:18306   */\n      swap2\n      pop\n        /* \"#utility.yul\":18235:18316   */\n    tag_635:\n        /* \"#utility.yul\":18363:18365   */\n      0x20\n        /* \"#utility.yul\":18355:18361   */\n      dup3\n        /* \"#utility.yul\":18352:18366   */\n      lt\n        /* \"#utility.yul\":18332:18350   */\n      dup2\n        /* \"#utility.yul\":18329:18367   */\n      sub\n        /* \"#utility.yul\":18326:18410   */\n      tag_636\n      jumpi\n        /* \"#utility.yul\":18382:18400   */\n      tag_637\n      tag_403\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":18326:18410   */\n    tag_636:\n        /* \"#utility.yul\":18147:18416   */\n      pop\n        /* \"#utility.yul\":18096:18416   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18422:18581   */\n    tag_405:\n        /* \"#utility.yul\":18496:18507   */\n      0x00\n        /* \"#utility.yul\":18530:18536   */\n      dup3\n        /* \"#utility.yul\":18525:18528   */\n      dup3\n        /* \"#utility.yul\":18518:18537   */\n      mstore\n        /* \"#utility.yul\":18570:18574   */\n      0x20\n        /* \"#utility.yul\":18565:18568   */\n      dup3\n        /* \"#utility.yul\":18561:18575   */\n      add\n        /* \"#utility.yul\":18546:18575   */\n      swap1\n      pop\n        /* \"#utility.yul\":18422:18581   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18587:18728   */\n    tag_406:\n        /* \"#utility.yul\":18636:18640   */\n      0x00\n        /* \"#utility.yul\":18659:18662   */\n      dup2\n        /* \"#utility.yul\":18651:18662   */\n      swap1\n      pop\n        /* \"#utility.yul\":18682:18685   */\n      dup2\n        /* \"#utility.yul\":18679:18680   */\n      0x00\n        /* \"#utility.yul\":18672:18686   */\n      mstore\n        /* \"#utility.yul\":18716:18720   */\n      0x20\n        /* \"#utility.yul\":18713:18714   */\n      0x00\n        /* \"#utility.yul\":18703:18721   */\n      keccak256\n        /* \"#utility.yul\":18695:18721   */\n      swap1\n      pop\n        /* \"#utility.yul\":18587:18728   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18758:19569   */\n    tag_407:\n        /* \"#utility.yul\":18833:18836   */\n      0x00\n        /* \"#utility.yul\":18870:18875   */\n      dup2\n        /* \"#utility.yul\":18864:18876   */\n      sload\n        /* \"#utility.yul\":18899:18935   */\n      tag_641\n        /* \"#utility.yul\":18925:18934   */\n      dup2\n        /* \"#utility.yul\":18899:18935   */\n      tag_404\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":18951:19012   */\n      tag_642\n        /* \"#utility.yul\":19005:19011   */\n      dup2\n        /* \"#utility.yul\":19000:19003   */\n      dup7\n        /* \"#utility.yul\":18951:19012   */\n      tag_405\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":18944:19012   */\n      swap5\n      pop\n        /* \"#utility.yul\":19043:19044   */\n      0x01\n        /* \"#utility.yul\":19032:19041   */\n      dup3\n        /* \"#utility.yul\":19028:19045   */\n      and\n        /* \"#utility.yul\":19059:19060   */\n      0x00\n        /* \"#utility.yul\":19054:19218   */\n      dup2\n      eq\n      tag_644\n      jumpi\n        /* \"#utility.yul\":19232:19233   */\n      0x01\n        /* \"#utility.yul\":19227:19563   */\n      dup2\n      eq\n      tag_645\n      jumpi\n        /* \"#utility.yul\":19021:19563   */\n      jump(tag_643)\n        /* \"#utility.yul\":19054:19218   */\n    tag_644:\n        /* \"#utility.yul\":19138:19142   */\n      0xff\n        /* \"#utility.yul\":19134:19143   */\n      not\n        /* \"#utility.yul\":19123:19132   */\n      dup4\n        /* \"#utility.yul\":19119:19144   */\n      and\n        /* \"#utility.yul\":19114:19117   */\n      dup7\n        /* \"#utility.yul\":19107:19145   */\n      mstore\n        /* \"#utility.yul\":19198:19204   */\n      dup2\n        /* \"#utility.yul\":19191:19205   */\n      iszero\n        /* \"#utility.yul\":19184:19206   */\n      iszero\n        /* \"#utility.yul\":19178:19182   */\n      0x20\n        /* \"#utility.yul\":19174:19207   */\n      mul\n        /* \"#utility.yul\":19169:19172   */\n      dup7\n        /* \"#utility.yul\":19165:19208   */\n      add\n        /* \"#utility.yul\":19158:19208   */\n      swap4\n      pop\n        /* \"#utility.yul\":19054:19218   */\n      jump(tag_643)\n        /* \"#utility.yul\":19227:19563   */\n    tag_645:\n        /* \"#utility.yul\":19294:19332   */\n      tag_646\n        /* \"#utility.yul\":19326:19331   */\n      dup6\n        /* \"#utility.yul\":19294:19332   */\n      tag_406\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":19354:19355   */\n      0x00\n        /* \"#utility.yul\":19368:19522   */\n    tag_647:\n        /* \"#utility.yul\":19382:19388   */\n      dup4\n        /* \"#utility.yul\":19379:19380   */\n      dup2\n        /* \"#utility.yul\":19376:19389   */\n      lt\n        /* \"#utility.yul\":19368:19522   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":19456:19463   */\n      dup2\n        /* \"#utility.yul\":19450:19464   */\n      sload\n        /* \"#utility.yul\":19446:19447   */\n      dup2\n        /* \"#utility.yul\":19441:19444   */\n      dup10\n        /* \"#utility.yul\":19437:19448   */\n      add\n        /* \"#utility.yul\":19430:19465   */\n      mstore\n        /* \"#utility.yul\":19506:19507   */\n      0x01\n        /* \"#utility.yul\":19497:19504   */\n      dup3\n        /* \"#utility.yul\":19493:19508   */\n      add\n        /* \"#utility.yul\":19482:19508   */\n      swap2\n      pop\n        /* \"#utility.yul\":19404:19408   */\n      0x20\n        /* \"#utility.yul\":19401:19402   */\n      dup2\n        /* \"#utility.yul\":19397:19409   */\n      add\n        /* \"#utility.yul\":19392:19409   */\n      swap1\n      pop\n        /* \"#utility.yul\":19368:19522   */\n      jump(tag_647)\n    tag_649:\n        /* \"#utility.yul\":19551:19552   */\n      dup1\n        /* \"#utility.yul\":19546:19549   */\n      dup9\n        /* \"#utility.yul\":19542:19553   */\n      add\n        /* \"#utility.yul\":19535:19553   */\n      swap6\n      pop\n        /* \"#utility.yul\":19234:19563   */\n      pop\n      pop\n        /* \"#utility.yul\":19021:19563   */\n    tag_643:\n      pop\n        /* \"#utility.yul\":18837:19569   */\n      pop\n      pop\n        /* \"#utility.yul\":18758:19569   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19575:19765   */\n    tag_408:\n        /* \"#utility.yul\":19661:19671   */\n      0x00\n        /* \"#utility.yul\":19696:19759   */\n      tag_651\n        /* \"#utility.yul\":19755:19758   */\n      dup4\n        /* \"#utility.yul\":19747:19753   */\n      dup4\n        /* \"#utility.yul\":19696:19759   */\n      tag_407\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":19682:19759   */\n      swap1\n      pop\n        /* \"#utility.yul\":19575:19765   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19771:19888   */\n    tag_409:\n        /* \"#utility.yul\":19845:19849   */\n      0x00\n        /* \"#utility.yul\":19877:19881   */\n      0x01\n        /* \"#utility.yul\":19872:19875   */\n      dup3\n        /* \"#utility.yul\":19868:19882   */\n      add\n        /* \"#utility.yul\":19860:19882   */\n      swap1\n      pop\n        /* \"#utility.yul\":19771:19888   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19922:20879   */\n    tag_410:\n        /* \"#utility.yul\":20055:20058   */\n      0x00\n        /* \"#utility.yul\":20084:20142   */\n      tag_654\n        /* \"#utility.yul\":20136:20141   */\n      dup3\n        /* \"#utility.yul\":20084:20142   */\n      tag_400\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":20158:20254   */\n      tag_655\n        /* \"#utility.yul\":20247:20253   */\n      dup2\n        /* \"#utility.yul\":20242:20245   */\n      dup6\n        /* \"#utility.yul\":20158:20254   */\n      tag_401\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":20151:20254   */\n      swap4\n      pop\n        /* \"#utility.yul\":20280:20283   */\n      dup4\n        /* \"#utility.yul\":20325:20329   */\n      0x20\n        /* \"#utility.yul\":20317:20323   */\n      dup3\n        /* \"#utility.yul\":20313:20330   */\n      mul\n        /* \"#utility.yul\":20308:20311   */\n      dup6\n        /* \"#utility.yul\":20304:20331   */\n      add\n        /* \"#utility.yul\":20355:20415   */\n      tag_656\n        /* \"#utility.yul\":20409:20414   */\n      dup6\n        /* \"#utility.yul\":20355:20415   */\n      tag_402\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":20438:20445   */\n      dup1\n        /* \"#utility.yul\":20469:20470   */\n      0x00\n        /* \"#utility.yul\":20454:20834   */\n    tag_657:\n        /* \"#utility.yul\":20479:20485   */\n      dup6\n        /* \"#utility.yul\":20476:20477   */\n      dup2\n        /* \"#utility.yul\":20473:20486   */\n      lt\n        /* \"#utility.yul\":20454:20834   */\n      iszero\n      tag_659\n      jumpi\n        /* \"#utility.yul\":20550:20559   */\n      dup5\n        /* \"#utility.yul\":20544:20548   */\n      dup5\n        /* \"#utility.yul\":20540:20560   */\n      sub\n        /* \"#utility.yul\":20535:20538   */\n      dup10\n        /* \"#utility.yul\":20528:20561   */\n      mstore\n        /* \"#utility.yul\":20595:20601   */\n      dup2\n        /* \"#utility.yul\":20622:20703   */\n      tag_660\n        /* \"#utility.yul\":20698:20702   */\n      dup6\n        /* \"#utility.yul\":20683:20696   */\n      dup3\n        /* \"#utility.yul\":20622:20703   */\n      tag_408\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":20614:20703   */\n      swap5\n      pop\n        /* \"#utility.yul\":20726:20790   */\n      tag_661\n        /* \"#utility.yul\":20783:20789   */\n      dup4\n        /* \"#utility.yul\":20726:20790   */\n      tag_409\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":20716:20790   */\n      swap3\n      pop\n        /* \"#utility.yul\":20819:20823   */\n      0x20\n        /* \"#utility.yul\":20814:20817   */\n      dup11\n        /* \"#utility.yul\":20810:20824   */\n      add\n        /* \"#utility.yul\":20803:20824   */\n      swap10\n      pop\n        /* \"#utility.yul\":20514:20834   */\n      pop\n        /* \"#utility.yul\":20501:20502   */\n      0x01\n        /* \"#utility.yul\":20498:20499   */\n      dup2\n        /* \"#utility.yul\":20494:20503   */\n      add\n        /* \"#utility.yul\":20489:20503   */\n      swap1\n      pop\n        /* \"#utility.yul\":20454:20834   */\n      jump(tag_657)\n    tag_659:\n        /* \"#utility.yul\":20458:20472   */\n      pop\n        /* \"#utility.yul\":20850:20854   */\n      dup3\n        /* \"#utility.yul\":20843:20854   */\n      swap8\n      pop\n        /* \"#utility.yul\":20870:20873   */\n      dup8\n        /* \"#utility.yul\":20863:20873   */\n      swap6\n      pop\n        /* \"#utility.yul\":20060:20879   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19922:20879   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20885:21506   */\n    tag_218:\n        /* \"#utility.yul\":21098:21102   */\n      0x00\n        /* \"#utility.yul\":21136:21138   */\n      0x60\n        /* \"#utility.yul\":21125:21134   */\n      dup3\n        /* \"#utility.yul\":21121:21139   */\n      add\n        /* \"#utility.yul\":21113:21139   */\n      swap1\n      pop\n        /* \"#utility.yul\":21149:21220   */\n      tag_663\n        /* \"#utility.yul\":21217:21218   */\n      0x00\n        /* \"#utility.yul\":21206:21215   */\n      dup4\n        /* \"#utility.yul\":21202:21219   */\n      add\n        /* \"#utility.yul\":21193:21199   */\n      dup7\n        /* \"#utility.yul\":21149:21220   */\n      tag_390\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":21230:21302   */\n      tag_664\n        /* \"#utility.yul\":21298:21300   */\n      0x20\n        /* \"#utility.yul\":21287:21296   */\n      dup4\n        /* \"#utility.yul\":21283:21301   */\n      add\n        /* \"#utility.yul\":21274:21280   */\n      dup6\n        /* \"#utility.yul\":21230:21302   */\n      tag_361\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":21349:21358   */\n      dup2\n        /* \"#utility.yul\":21343:21347   */\n      dup2\n        /* \"#utility.yul\":21339:21359   */\n      sub\n        /* \"#utility.yul\":21334:21336   */\n      0x40\n        /* \"#utility.yul\":21323:21332   */\n      dup4\n        /* \"#utility.yul\":21319:21337   */\n      add\n        /* \"#utility.yul\":21312:21360   */\n      mstore\n        /* \"#utility.yul\":21377:21499   */\n      tag_665\n        /* \"#utility.yul\":21494:21498   */\n      dup2\n        /* \"#utility.yul\":21485:21491   */\n      dup5\n        /* \"#utility.yul\":21377:21499   */\n      tag_410\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":21369:21499   */\n      swap1\n      pop\n        /* \"#utility.yul\":20885:21506   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21512:21628   */\n    tag_411:\n        /* \"#utility.yul\":21582:21603   */\n      tag_667\n        /* \"#utility.yul\":21597:21602   */\n      dup2\n        /* \"#utility.yul\":21582:21603   */\n      tag_362\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":21575:21580   */\n      dup2\n        /* \"#utility.yul\":21572:21604   */\n      eq\n        /* \"#utility.yul\":21562:21622   */\n      tag_668\n      jumpi\n        /* \"#utility.yul\":21618:21619   */\n      0x00\n        /* \"#utility.yul\":21615:21616   */\n      dup1\n        /* \"#utility.yul\":21608:21620   */\n      revert\n        /* \"#utility.yul\":21562:21622   */\n    tag_668:\n        /* \"#utility.yul\":21512:21628   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21634:21771   */\n    tag_412:\n        /* \"#utility.yul\":21688:21693   */\n      0x00\n        /* \"#utility.yul\":21719:21725   */\n      dup2\n        /* \"#utility.yul\":21713:21726   */\n      mload\n        /* \"#utility.yul\":21704:21726   */\n      swap1\n      pop\n        /* \"#utility.yul\":21735:21765   */\n      tag_670\n        /* \"#utility.yul\":21759:21764   */\n      dup2\n        /* \"#utility.yul\":21735:21765   */\n      tag_411\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":21634:21771   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21777:22122   */\n    tag_222:\n        /* \"#utility.yul\":21844:21850   */\n      0x00\n        /* \"#utility.yul\":21893:21895   */\n      0x20\n        /* \"#utility.yul\":21881:21890   */\n      dup3\n        /* \"#utility.yul\":21872:21879   */\n      dup5\n        /* \"#utility.yul\":21868:21891   */\n      sub\n        /* \"#utility.yul\":21864:21896   */\n      slt\n        /* \"#utility.yul\":21861:21980   */\n      iszero\n      tag_672\n      jumpi\n        /* \"#utility.yul\":21899:21978   */\n      tag_673\n      tag_354\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":21861:21980   */\n    tag_672:\n        /* \"#utility.yul\":22019:22020   */\n      0x00\n        /* \"#utility.yul\":22044:22105   */\n      tag_674\n        /* \"#utility.yul\":22097:22104   */\n      dup5\n        /* \"#utility.yul\":22088:22094   */\n      dup3\n        /* \"#utility.yul\":22077:22086   */\n      dup6\n        /* \"#utility.yul\":22073:22095   */\n      add\n        /* \"#utility.yul\":22044:22105   */\n      tag_412\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":22034:22105   */\n      swap2\n      pop\n        /* \"#utility.yul\":21990:22115   */\n      pop\n        /* \"#utility.yul\":21777:22122   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22128:22348   */\n    tag_413:\n        /* \"#utility.yul\":22268:22302   */\n      0x4661696c656420746f20617070726f76652064656c6567617465206d6574686f\n        /* \"#utility.yul\":22264:22265   */\n      0x00\n        /* \"#utility.yul\":22256:22262   */\n      dup3\n        /* \"#utility.yul\":22252:22266   */\n      add\n        /* \"#utility.yul\":22245:22303   */\n      mstore\n        /* \"#utility.yul\":22337:22340   */\n      0x6400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22332:22334   */\n      0x20\n        /* \"#utility.yul\":22324:22330   */\n      dup3\n        /* \"#utility.yul\":22320:22335   */\n      add\n        /* \"#utility.yul\":22313:22341   */\n      mstore\n        /* \"#utility.yul\":22128:22348   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22354:22720   */\n    tag_414:\n        /* \"#utility.yul\":22496:22499   */\n      0x00\n        /* \"#utility.yul\":22517:22584   */\n      tag_677\n        /* \"#utility.yul\":22581:22583   */\n      0x21\n        /* \"#utility.yul\":22576:22579   */\n      dup4\n        /* \"#utility.yul\":22517:22584   */\n      tag_392\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":22510:22584   */\n      swap2\n      pop\n        /* \"#utility.yul\":22593:22686   */\n      tag_678\n        /* \"#utility.yul\":22682:22685   */\n      dup3\n        /* \"#utility.yul\":22593:22686   */\n      tag_413\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":22711:22713   */\n      0x40\n        /* \"#utility.yul\":22706:22709   */\n      dup3\n        /* \"#utility.yul\":22702:22714   */\n      add\n        /* \"#utility.yul\":22695:22714   */\n      swap1\n      pop\n        /* \"#utility.yul\":22354:22720   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22726:23145   */\n    tag_225:\n        /* \"#utility.yul\":22892:22896   */\n      0x00\n        /* \"#utility.yul\":22930:22932   */\n      0x20\n        /* \"#utility.yul\":22919:22928   */\n      dup3\n        /* \"#utility.yul\":22915:22933   */\n      add\n        /* \"#utility.yul\":22907:22933   */\n      swap1\n      pop\n        /* \"#utility.yul\":22979:22988   */\n      dup2\n        /* \"#utility.yul\":22973:22977   */\n      dup2\n        /* \"#utility.yul\":22969:22989   */\n      sub\n        /* \"#utility.yul\":22965:22966   */\n      0x00\n        /* \"#utility.yul\":22954:22963   */\n      dup4\n        /* \"#utility.yul\":22950:22967   */\n      add\n        /* \"#utility.yul\":22943:22990   */\n      mstore\n        /* \"#utility.yul\":23007:23138   */\n      tag_680\n        /* \"#utility.yul\":23133:23137   */\n      dup2\n        /* \"#utility.yul\":23007:23138   */\n      tag_414\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":22999:23138   */\n      swap1\n      pop\n        /* \"#utility.yul\":22726:23145   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23151:23331   */\n    tag_415:\n        /* \"#utility.yul\":23199:23276   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":23196:23197   */\n      0x00\n        /* \"#utility.yul\":23189:23277   */\n      mstore\n        /* \"#utility.yul\":23296:23300   */\n      0x12\n        /* \"#utility.yul\":23293:23294   */\n      0x04\n        /* \"#utility.yul\":23286:23301   */\n      mstore\n        /* \"#utility.yul\":23320:23324   */\n      0x24\n        /* \"#utility.yul\":23317:23318   */\n      0x00\n        /* \"#utility.yul\":23310:23325   */\n      revert\n        /* \"#utility.yul\":23337:23522   */\n    tag_238:\n        /* \"#utility.yul\":23377:23378   */\n      0x00\n        /* \"#utility.yul\":23394:23414   */\n      tag_683\n        /* \"#utility.yul\":23412:23413   */\n      dup3\n        /* \"#utility.yul\":23394:23414   */\n      tag_360\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":23389:23414   */\n      swap2\n      pop\n        /* \"#utility.yul\":23428:23448   */\n      tag_684\n        /* \"#utility.yul\":23446:23447   */\n      dup4\n        /* \"#utility.yul\":23428:23448   */\n      tag_360\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":23423:23448   */\n      swap3\n      pop\n        /* \"#utility.yul\":23467:23468   */\n      dup3\n        /* \"#utility.yul\":23457:23492   */\n      tag_685\n      jumpi\n        /* \"#utility.yul\":23472:23490   */\n      tag_686\n      tag_415\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":23457:23492   */\n    tag_685:\n        /* \"#utility.yul\":23514:23515   */\n      dup3\n        /* \"#utility.yul\":23511:23512   */\n      dup3\n        /* \"#utility.yul\":23507:23516   */\n      div\n        /* \"#utility.yul\":23502:23516   */\n      swap1\n      pop\n        /* \"#utility.yul\":23337:23522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23528:23722   */\n    tag_241:\n        /* \"#utility.yul\":23568:23572   */\n      0x00\n        /* \"#utility.yul\":23588:23608   */\n      tag_688\n        /* \"#utility.yul\":23606:23607   */\n      dup3\n        /* \"#utility.yul\":23588:23608   */\n      tag_360\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":23583:23608   */\n      swap2\n      pop\n        /* \"#utility.yul\":23622:23642   */\n      tag_689\n        /* \"#utility.yul\":23640:23641   */\n      dup4\n        /* \"#utility.yul\":23622:23642   */\n      tag_360\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":23617:23642   */\n      swap3\n      pop\n        /* \"#utility.yul\":23666:23667   */\n      dup3\n        /* \"#utility.yul\":23663:23664   */\n      dup3\n        /* \"#utility.yul\":23659:23668   */\n      sub\n        /* \"#utility.yul\":23651:23668   */\n      swap1\n      pop\n        /* \"#utility.yul\":23690:23691   */\n      dup2\n        /* \"#utility.yul\":23684:23688   */\n      dup2\n        /* \"#utility.yul\":23681:23692   */\n      gt\n        /* \"#utility.yul\":23678:23715   */\n      iszero\n      tag_690\n      jumpi\n        /* \"#utility.yul\":23695:23713   */\n      tag_691\n      tag_391\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":23678:23715   */\n    tag_690:\n        /* \"#utility.yul\":23528:23722   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23728:23871   */\n    tag_416:\n        /* \"#utility.yul\":23785:23790   */\n      0x00\n        /* \"#utility.yul\":23816:23822   */\n      dup2\n        /* \"#utility.yul\":23810:23823   */\n      mload\n        /* \"#utility.yul\":23801:23823   */\n      swap1\n      pop\n        /* \"#utility.yul\":23832:23865   */\n      tag_693\n        /* \"#utility.yul\":23859:23864   */\n      dup2\n        /* \"#utility.yul\":23832:23865   */\n      tag_379\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":23728:23871   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23877:24228   */\n    tag_251:\n        /* \"#utility.yul\":23947:23953   */\n      0x00\n        /* \"#utility.yul\":23996:23998   */\n      0x20\n        /* \"#utility.yul\":23984:23993   */\n      dup3\n        /* \"#utility.yul\":23975:23982   */\n      dup5\n        /* \"#utility.yul\":23971:23994   */\n      sub\n        /* \"#utility.yul\":23967:23999   */\n      slt\n        /* \"#utility.yul\":23964:24083   */\n      iszero\n      tag_695\n      jumpi\n        /* \"#utility.yul\":24002:24081   */\n      tag_696\n      tag_354\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":23964:24083   */\n    tag_695:\n        /* \"#utility.yul\":24122:24123   */\n      0x00\n        /* \"#utility.yul\":24147:24211   */\n      tag_697\n        /* \"#utility.yul\":24203:24210   */\n      dup5\n        /* \"#utility.yul\":24194:24200   */\n      dup3\n        /* \"#utility.yul\":24183:24192   */\n      dup6\n        /* \"#utility.yul\":24179:24201   */\n      add\n        /* \"#utility.yul\":24147:24211   */\n      tag_416\n      jump\t// in\n    tag_697:\n        /* \"#utility.yul\":24137:24211   */\n      swap2\n      pop\n        /* \"#utility.yul\":24093:24221   */\n      pop\n        /* \"#utility.yul\":23877:24228   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24234:24459   */\n    tag_417:\n        /* \"#utility.yul\":24374:24408   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":24370:24371   */\n      0x00\n        /* \"#utility.yul\":24362:24368   */\n      dup3\n        /* \"#utility.yul\":24358:24372   */\n      add\n        /* \"#utility.yul\":24351:24409   */\n      mstore\n        /* \"#utility.yul\":24443:24451   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":24438:24440   */\n      0x20\n        /* \"#utility.yul\":24430:24436   */\n      dup3\n        /* \"#utility.yul\":24426:24441   */\n      add\n        /* \"#utility.yul\":24419:24452   */\n      mstore\n        /* \"#utility.yul\":24234:24459   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24465:24831   */\n    tag_418:\n        /* \"#utility.yul\":24607:24610   */\n      0x00\n        /* \"#utility.yul\":24628:24695   */\n      tag_700\n        /* \"#utility.yul\":24692:24694   */\n      0x26\n        /* \"#utility.yul\":24687:24690   */\n      dup4\n        /* \"#utility.yul\":24628:24695   */\n      tag_392\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":24621:24695   */\n      swap2\n      pop\n        /* \"#utility.yul\":24704:24797   */\n      tag_701\n        /* \"#utility.yul\":24793:24796   */\n      dup3\n        /* \"#utility.yul\":24704:24797   */\n      tag_417\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":24822:24824   */\n      0x40\n        /* \"#utility.yul\":24817:24820   */\n      dup3\n        /* \"#utility.yul\":24813:24825   */\n      add\n        /* \"#utility.yul\":24806:24825   */\n      swap1\n      pop\n        /* \"#utility.yul\":24465:24831   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24837:25256   */\n    tag_268:\n        /* \"#utility.yul\":25003:25007   */\n      0x00\n        /* \"#utility.yul\":25041:25043   */\n      0x20\n        /* \"#utility.yul\":25030:25039   */\n      dup3\n        /* \"#utility.yul\":25026:25044   */\n      add\n        /* \"#utility.yul\":25018:25044   */\n      swap1\n      pop\n        /* \"#utility.yul\":25090:25099   */\n      dup2\n        /* \"#utility.yul\":25084:25088   */\n      dup2\n        /* \"#utility.yul\":25080:25100   */\n      sub\n        /* \"#utility.yul\":25076:25077   */\n      0x00\n        /* \"#utility.yul\":25065:25074   */\n      dup4\n        /* \"#utility.yul\":25061:25078   */\n      add\n        /* \"#utility.yul\":25054:25101   */\n      mstore\n        /* \"#utility.yul\":25118:25249   */\n      tag_703\n        /* \"#utility.yul\":25244:25248   */\n      dup2\n        /* \"#utility.yul\":25118:25249   */\n      tag_418\n      jump\t// in\n    tag_703:\n        /* \"#utility.yul\":25110:25249   */\n      swap1\n      pop\n        /* \"#utility.yul\":24837:25256   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25262:25443   */\n    tag_419:\n        /* \"#utility.yul\":25402:25435   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":25398:25399   */\n      0x00\n        /* \"#utility.yul\":25390:25396   */\n      dup3\n        /* \"#utility.yul\":25386:25400   */\n      add\n        /* \"#utility.yul\":25379:25436   */\n      mstore\n        /* \"#utility.yul\":25262:25443   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25449:25815   */\n    tag_420:\n        /* \"#utility.yul\":25591:25594   */\n      0x00\n        /* \"#utility.yul\":25612:25679   */\n      tag_706\n        /* \"#utility.yul\":25676:25678   */\n      0x1f\n        /* \"#utility.yul\":25671:25674   */\n      dup4\n        /* \"#utility.yul\":25612:25679   */\n      tag_392\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":25605:25679   */\n      swap2\n      pop\n        /* \"#utility.yul\":25688:25781   */\n      tag_707\n        /* \"#utility.yul\":25777:25780   */\n      dup3\n        /* \"#utility.yul\":25688:25781   */\n      tag_419\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":25806:25808   */\n      0x20\n        /* \"#utility.yul\":25801:25804   */\n      dup3\n        /* \"#utility.yul\":25797:25809   */\n      add\n        /* \"#utility.yul\":25790:25809   */\n      swap1\n      pop\n        /* \"#utility.yul\":25449:25815   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25821:26240   */\n    tag_279:\n        /* \"#utility.yul\":25987:25991   */\n      0x00\n        /* \"#utility.yul\":26025:26027   */\n      0x20\n        /* \"#utility.yul\":26014:26023   */\n      dup3\n        /* \"#utility.yul\":26010:26028   */\n      add\n        /* \"#utility.yul\":26002:26028   */\n      swap1\n      pop\n        /* \"#utility.yul\":26074:26083   */\n      dup2\n        /* \"#utility.yul\":26068:26072   */\n      dup2\n        /* \"#utility.yul\":26064:26084   */\n      sub\n        /* \"#utility.yul\":26060:26061   */\n      0x00\n        /* \"#utility.yul\":26049:26058   */\n      dup4\n        /* \"#utility.yul\":26045:26062   */\n      add\n        /* \"#utility.yul\":26038:26085   */\n      mstore\n        /* \"#utility.yul\":26102:26233   */\n      tag_709\n        /* \"#utility.yul\":26228:26232   */\n      dup2\n        /* \"#utility.yul\":26102:26233   */\n      tag_420\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":26094:26233   */\n      swap1\n      pop\n        /* \"#utility.yul\":25821:26240   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26246:26412   */\n    tag_421:\n        /* \"#utility.yul\":26386:26404   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":26382:26383   */\n      0x00\n        /* \"#utility.yul\":26374:26380   */\n      dup3\n        /* \"#utility.yul\":26370:26384   */\n      add\n        /* \"#utility.yul\":26363:26405   */\n      mstore\n        /* \"#utility.yul\":26246:26412   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26418:26784   */\n    tag_422:\n        /* \"#utility.yul\":26560:26563   */\n      0x00\n        /* \"#utility.yul\":26581:26648   */\n      tag_712\n        /* \"#utility.yul\":26645:26647   */\n      0x10\n        /* \"#utility.yul\":26640:26643   */\n      dup4\n        /* \"#utility.yul\":26581:26648   */\n      tag_392\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":26574:26648   */\n      swap2\n      pop\n        /* \"#utility.yul\":26657:26750   */\n      tag_713\n        /* \"#utility.yul\":26746:26749   */\n      dup3\n        /* \"#utility.yul\":26657:26750   */\n      tag_421\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":26775:26777   */\n      0x20\n        /* \"#utility.yul\":26770:26773   */\n      dup3\n        /* \"#utility.yul\":26766:26778   */\n      add\n        /* \"#utility.yul\":26759:26778   */\n      swap1\n      pop\n        /* \"#utility.yul\":26418:26784   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26790:27209   */\n    tag_284:\n        /* \"#utility.yul\":26956:26960   */\n      0x00\n        /* \"#utility.yul\":26994:26996   */\n      0x20\n        /* \"#utility.yul\":26983:26992   */\n      dup3\n        /* \"#utility.yul\":26979:26997   */\n      add\n        /* \"#utility.yul\":26971:26997   */\n      swap1\n      pop\n        /* \"#utility.yul\":27043:27052   */\n      dup2\n        /* \"#utility.yul\":27037:27041   */\n      dup2\n        /* \"#utility.yul\":27033:27053   */\n      sub\n        /* \"#utility.yul\":27029:27030   */\n      0x00\n        /* \"#utility.yul\":27018:27027   */\n      dup4\n        /* \"#utility.yul\":27014:27031   */\n      add\n        /* \"#utility.yul\":27007:27054   */\n      mstore\n        /* \"#utility.yul\":27071:27202   */\n      tag_715\n        /* \"#utility.yul\":27197:27201   */\n      dup2\n        /* \"#utility.yul\":27071:27202   */\n      tag_422\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":27063:27202   */\n      swap1\n      pop\n        /* \"#utility.yul\":26790:27209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27215:27397   */\n    tag_423:\n        /* \"#utility.yul\":27355:27389   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":27351:27352   */\n      0x00\n        /* \"#utility.yul\":27343:27349   */\n      dup3\n        /* \"#utility.yul\":27339:27353   */\n      add\n        /* \"#utility.yul\":27332:27390   */\n      mstore\n        /* \"#utility.yul\":27215:27397   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27403:27769   */\n    tag_424:\n        /* \"#utility.yul\":27545:27548   */\n      0x00\n        /* \"#utility.yul\":27566:27633   */\n      tag_718\n        /* \"#utility.yul\":27630:27632   */\n      0x20\n        /* \"#utility.yul\":27625:27628   */\n      dup4\n        /* \"#utility.yul\":27566:27633   */\n      tag_392\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":27559:27633   */\n      swap2\n      pop\n        /* \"#utility.yul\":27642:27735   */\n      tag_719\n        /* \"#utility.yul\":27731:27734   */\n      dup3\n        /* \"#utility.yul\":27642:27735   */\n      tag_423\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":27760:27762   */\n      0x20\n        /* \"#utility.yul\":27755:27758   */\n      dup3\n        /* \"#utility.yul\":27751:27763   */\n      add\n        /* \"#utility.yul\":27744:27763   */\n      swap1\n      pop\n        /* \"#utility.yul\":27403:27769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27775:28194   */\n    tag_307:\n        /* \"#utility.yul\":27941:27945   */\n      0x00\n        /* \"#utility.yul\":27979:27981   */\n      0x20\n        /* \"#utility.yul\":27968:27977   */\n      dup3\n        /* \"#utility.yul\":27964:27982   */\n      add\n        /* \"#utility.yul\":27956:27982   */\n      swap1\n      pop\n        /* \"#utility.yul\":28028:28037   */\n      dup2\n        /* \"#utility.yul\":28022:28026   */\n      dup2\n        /* \"#utility.yul\":28018:28038   */\n      sub\n        /* \"#utility.yul\":28014:28015   */\n      0x00\n        /* \"#utility.yul\":28003:28012   */\n      dup4\n        /* \"#utility.yul\":27999:28016   */\n      add\n        /* \"#utility.yul\":27992:28039   */\n      mstore\n        /* \"#utility.yul\":28056:28187   */\n      tag_721\n        /* \"#utility.yul\":28182:28186   */\n      dup2\n        /* \"#utility.yul\":28056:28187   */\n      tag_424\n      jump\t// in\n    tag_721:\n        /* \"#utility.yul\":28048:28187   */\n      swap1\n      pop\n        /* \"#utility.yul\":27775:28194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28200:28642   */\n    tag_312:\n        /* \"#utility.yul\":28349:28353   */\n      0x00\n        /* \"#utility.yul\":28387:28389   */\n      0x60\n        /* \"#utility.yul\":28376:28385   */\n      dup3\n        /* \"#utility.yul\":28372:28390   */\n      add\n        /* \"#utility.yul\":28364:28390   */\n      swap1\n      pop\n        /* \"#utility.yul\":28400:28471   */\n      tag_723\n        /* \"#utility.yul\":28468:28469   */\n      0x00\n        /* \"#utility.yul\":28457:28466   */\n      dup4\n        /* \"#utility.yul\":28453:28470   */\n      add\n        /* \"#utility.yul\":28444:28450   */\n      dup7\n        /* \"#utility.yul\":28400:28471   */\n      tag_390\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":28481:28553   */\n      tag_724\n        /* \"#utility.yul\":28549:28551   */\n      0x20\n        /* \"#utility.yul\":28538:28547   */\n      dup4\n        /* \"#utility.yul\":28534:28552   */\n      add\n        /* \"#utility.yul\":28525:28531   */\n      dup6\n        /* \"#utility.yul\":28481:28553   */\n      tag_390\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":28563:28635   */\n      tag_725\n        /* \"#utility.yul\":28631:28633   */\n      0x40\n        /* \"#utility.yul\":28620:28629   */\n      dup4\n        /* \"#utility.yul\":28616:28634   */\n      add\n        /* \"#utility.yul\":28607:28613   */\n      dup5\n        /* \"#utility.yul\":28563:28635   */\n      tag_361\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":28200:28642   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28648:28877   */\n    tag_425:\n        /* \"#utility.yul\":28788:28822   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":28784:28785   */\n      0x00\n        /* \"#utility.yul\":28776:28782   */\n      dup3\n        /* \"#utility.yul\":28772:28786   */\n      add\n        /* \"#utility.yul\":28765:28823   */\n      mstore\n        /* \"#utility.yul\":28857:28869   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":28852:28854   */\n      0x20\n        /* \"#utility.yul\":28844:28850   */\n      dup3\n        /* \"#utility.yul\":28840:28855   */\n      add\n        /* \"#utility.yul\":28833:28870   */\n      mstore\n        /* \"#utility.yul\":28648:28877   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28883:29249   */\n    tag_426:\n        /* \"#utility.yul\":29025:29028   */\n      0x00\n        /* \"#utility.yul\":29046:29113   */\n      tag_728\n        /* \"#utility.yul\":29110:29112   */\n      0x2a\n        /* \"#utility.yul\":29105:29108   */\n      dup4\n        /* \"#utility.yul\":29046:29113   */\n      tag_392\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":29039:29113   */\n      swap2\n      pop\n        /* \"#utility.yul\":29122:29215   */\n      tag_729\n        /* \"#utility.yul\":29211:29214   */\n      dup3\n        /* \"#utility.yul\":29122:29215   */\n      tag_425\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":29240:29242   */\n      0x40\n        /* \"#utility.yul\":29235:29238   */\n      dup3\n        /* \"#utility.yul\":29231:29243   */\n      add\n        /* \"#utility.yul\":29224:29243   */\n      swap1\n      pop\n        /* \"#utility.yul\":28883:29249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29255:29674   */\n    tag_320:\n        /* \"#utility.yul\":29421:29425   */\n      0x00\n        /* \"#utility.yul\":29459:29461   */\n      0x20\n        /* \"#utility.yul\":29448:29457   */\n      dup3\n        /* \"#utility.yul\":29444:29462   */\n      add\n        /* \"#utility.yul\":29436:29462   */\n      swap1\n      pop\n        /* \"#utility.yul\":29508:29517   */\n      dup2\n        /* \"#utility.yul\":29502:29506   */\n      dup2\n        /* \"#utility.yul\":29498:29518   */\n      sub\n        /* \"#utility.yul\":29494:29495   */\n      0x00\n        /* \"#utility.yul\":29483:29492   */\n      dup4\n        /* \"#utility.yul\":29479:29496   */\n      add\n        /* \"#utility.yul\":29472:29519   */\n      mstore\n        /* \"#utility.yul\":29536:29667   */\n      tag_731\n        /* \"#utility.yul\":29662:29666   */\n      dup2\n        /* \"#utility.yul\":29536:29667   */\n      tag_426\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":29528:29667   */\n      swap1\n      pop\n        /* \"#utility.yul\":29255:29674   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29680:29905   */\n    tag_427:\n        /* \"#utility.yul\":29820:29854   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":29816:29817   */\n      0x00\n        /* \"#utility.yul\":29808:29814   */\n      dup3\n        /* \"#utility.yul\":29804:29818   */\n      add\n        /* \"#utility.yul\":29797:29855   */\n      mstore\n        /* \"#utility.yul\":29889:29897   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":29884:29886   */\n      0x20\n        /* \"#utility.yul\":29876:29882   */\n      dup3\n        /* \"#utility.yul\":29872:29887   */\n      add\n        /* \"#utility.yul\":29865:29898   */\n      mstore\n        /* \"#utility.yul\":29680:29905   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29911:30277   */\n    tag_428:\n        /* \"#utility.yul\":30053:30056   */\n      0x00\n        /* \"#utility.yul\":30074:30141   */\n      tag_734\n        /* \"#utility.yul\":30138:30140   */\n      0x26\n        /* \"#utility.yul\":30133:30136   */\n      dup4\n        /* \"#utility.yul\":30074:30141   */\n      tag_392\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":30067:30141   */\n      swap2\n      pop\n        /* \"#utility.yul\":30150:30243   */\n      tag_735\n        /* \"#utility.yul\":30239:30242   */\n      dup3\n        /* \"#utility.yul\":30150:30243   */\n      tag_427\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":30268:30270   */\n      0x40\n        /* \"#utility.yul\":30263:30266   */\n      dup3\n        /* \"#utility.yul\":30259:30271   */\n      add\n        /* \"#utility.yul\":30252:30271   */\n      swap1\n      pop\n        /* \"#utility.yul\":29911:30277   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30283:30702   */\n    tag_328:\n        /* \"#utility.yul\":30449:30453   */\n      0x00\n        /* \"#utility.yul\":30487:30489   */\n      0x20\n        /* \"#utility.yul\":30476:30485   */\n      dup3\n        /* \"#utility.yul\":30472:30490   */\n      add\n        /* \"#utility.yul\":30464:30490   */\n      swap1\n      pop\n        /* \"#utility.yul\":30536:30545   */\n      dup2\n        /* \"#utility.yul\":30530:30534   */\n      dup2\n        /* \"#utility.yul\":30526:30546   */\n      sub\n        /* \"#utility.yul\":30522:30523   */\n      0x00\n        /* \"#utility.yul\":30511:30520   */\n      dup4\n        /* \"#utility.yul\":30507:30524   */\n      add\n        /* \"#utility.yul\":30500:30547   */\n      mstore\n        /* \"#utility.yul\":30564:30695   */\n      tag_737\n        /* \"#utility.yul\":30690:30694   */\n      dup2\n        /* \"#utility.yul\":30564:30695   */\n      tag_428\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":30556:30695   */\n      swap1\n      pop\n        /* \"#utility.yul\":30283:30702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30708:30806   */\n    tag_429:\n        /* \"#utility.yul\":30759:30765   */\n      0x00\n        /* \"#utility.yul\":30793:30798   */\n      dup2\n        /* \"#utility.yul\":30787:30799   */\n      mload\n        /* \"#utility.yul\":30777:30799   */\n      swap1\n      pop\n        /* \"#utility.yul\":30708:30806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30812:30959   */\n    tag_430:\n        /* \"#utility.yul\":30913:30924   */\n      0x00\n        /* \"#utility.yul\":30950:30953   */\n      dup2\n        /* \"#utility.yul\":30935:30953   */\n      swap1\n      pop\n        /* \"#utility.yul\":30812:30959   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30965:31351   */\n    tag_431:\n        /* \"#utility.yul\":31069:31072   */\n      0x00\n        /* \"#utility.yul\":31097:31135   */\n      tag_741\n        /* \"#utility.yul\":31129:31134   */\n      dup3\n        /* \"#utility.yul\":31097:31135   */\n      tag_429\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":31151:31239   */\n      tag_742\n        /* \"#utility.yul\":31232:31238   */\n      dup2\n        /* \"#utility.yul\":31227:31230   */\n      dup6\n        /* \"#utility.yul\":31151:31239   */\n      tag_430\n      jump\t// in\n    tag_742:\n        /* \"#utility.yul\":31144:31239   */\n      swap4\n      pop\n        /* \"#utility.yul\":31248:31313   */\n      tag_743\n        /* \"#utility.yul\":31306:31312   */\n      dup2\n        /* \"#utility.yul\":31301:31304   */\n      dup6\n        /* \"#utility.yul\":31294:31298   */\n      0x20\n        /* \"#utility.yul\":31287:31292   */\n      dup7\n        /* \"#utility.yul\":31283:31299   */\n      add\n        /* \"#utility.yul\":31248:31313   */\n      tag_396\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":31338:31344   */\n      dup1\n        /* \"#utility.yul\":31333:31336   */\n      dup5\n        /* \"#utility.yul\":31329:31345   */\n      add\n        /* \"#utility.yul\":31322:31345   */\n      swap2\n      pop\n        /* \"#utility.yul\":31073:31351   */\n      pop\n        /* \"#utility.yul\":30965:31351   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31357:31628   */\n    tag_330:\n        /* \"#utility.yul\":31487:31490   */\n      0x00\n        /* \"#utility.yul\":31509:31602   */\n      tag_745\n        /* \"#utility.yul\":31598:31601   */\n      dup3\n        /* \"#utility.yul\":31589:31595   */\n      dup5\n        /* \"#utility.yul\":31509:31602   */\n      tag_431\n      jump\t// in\n    tag_745:\n        /* \"#utility.yul\":31502:31602   */\n      swap2\n      pop\n        /* \"#utility.yul\":31619:31622   */\n      dup2\n        /* \"#utility.yul\":31612:31622   */\n      swap1\n      pop\n        /* \"#utility.yul\":31357:31628   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31634:31813   */\n    tag_432:\n        /* \"#utility.yul\":31774:31805   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":31770:31771   */\n      0x00\n        /* \"#utility.yul\":31762:31768   */\n      dup3\n        /* \"#utility.yul\":31758:31772   */\n      add\n        /* \"#utility.yul\":31751:31806   */\n      mstore\n        /* \"#utility.yul\":31634:31813   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31819:32185   */\n    tag_433:\n        /* \"#utility.yul\":31961:31964   */\n      0x00\n        /* \"#utility.yul\":31982:32049   */\n      tag_748\n        /* \"#utility.yul\":32046:32048   */\n      0x1d\n        /* \"#utility.yul\":32041:32044   */\n      dup4\n        /* \"#utility.yul\":31982:32049   */\n      tag_392\n      jump\t// in\n    tag_748:\n        /* \"#utility.yul\":31975:32049   */\n      swap2\n      pop\n        /* \"#utility.yul\":32058:32151   */\n      tag_749\n        /* \"#utility.yul\":32147:32150   */\n      dup3\n        /* \"#utility.yul\":32058:32151   */\n      tag_432\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":32176:32178   */\n      0x20\n        /* \"#utility.yul\":32171:32174   */\n      dup3\n        /* \"#utility.yul\":32167:32179   */\n      add\n        /* \"#utility.yul\":32160:32179   */\n      swap1\n      pop\n        /* \"#utility.yul\":31819:32185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32191:32610   */\n    tag_343:\n        /* \"#utility.yul\":32357:32361   */\n      0x00\n        /* \"#utility.yul\":32395:32397   */\n      0x20\n        /* \"#utility.yul\":32384:32393   */\n      dup3\n        /* \"#utility.yul\":32380:32398   */\n      add\n        /* \"#utility.yul\":32372:32398   */\n      swap1\n      pop\n        /* \"#utility.yul\":32444:32453   */\n      dup2\n        /* \"#utility.yul\":32438:32442   */\n      dup2\n        /* \"#utility.yul\":32434:32454   */\n      sub\n        /* \"#utility.yul\":32430:32431   */\n      0x00\n        /* \"#utility.yul\":32419:32428   */\n      dup4\n        /* \"#utility.yul\":32415:32432   */\n      add\n        /* \"#utility.yul\":32408:32455   */\n      mstore\n        /* \"#utility.yul\":32472:32603   */\n      tag_751\n        /* \"#utility.yul\":32598:32602   */\n      dup2\n        /* \"#utility.yul\":32472:32603   */\n      tag_433\n      jump\t// in\n    tag_751:\n        /* \"#utility.yul\":32464:32603   */\n      swap1\n      pop\n        /* \"#utility.yul\":32191:32610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32616:32929   */\n    tag_352:\n        /* \"#utility.yul\":32729:32733   */\n      0x00\n        /* \"#utility.yul\":32767:32769   */\n      0x20\n        /* \"#utility.yul\":32756:32765   */\n      dup3\n        /* \"#utility.yul\":32752:32770   */\n      add\n        /* \"#utility.yul\":32744:32770   */\n      swap1\n      pop\n        /* \"#utility.yul\":32816:32825   */\n      dup2\n        /* \"#utility.yul\":32810:32814   */\n      dup2\n        /* \"#utility.yul\":32806:32826   */\n      sub\n        /* \"#utility.yul\":32802:32803   */\n      0x00\n        /* \"#utility.yul\":32791:32800   */\n      dup4\n        /* \"#utility.yul\":32787:32804   */\n      add\n        /* \"#utility.yul\":32780:32827   */\n      mstore\n        /* \"#utility.yul\":32844:32922   */\n      tag_753\n        /* \"#utility.yul\":32917:32921   */\n      dup2\n        /* \"#utility.yul\":32908:32914   */\n      dup5\n        /* \"#utility.yul\":32844:32922   */\n      tag_397\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":32836:32922   */\n      swap1\n      pop\n        /* \"#utility.yul\":32616:32929   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dd175e72649fc590c32e72ba343166cecec776c9b550f6f852b852cdffb2987d64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_139": {
									"entryPoint": null,
									"id": 139,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1707": {
									"entryPoint": null,
									"id": 1707,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_239": {
									"entryPoint": null,
									"id": 239,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1117": {
									"entryPoint": 351,
									"id": 1117,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 359,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1497,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1458,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1086,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1039,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1372,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 792,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1430,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1236,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1382,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6859:15",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:15",
														"type": ""
													}
												],
												"src": "466:96:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:15"
															},
															"nodeType": "YulIf",
															"src": "621:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:15",
														"type": ""
													}
												],
												"src": "568:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:15"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:15",
														"type": ""
													}
												],
												"src": "696:143:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "890:32:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "900:16:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "911:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "872:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "882:7:15",
														"type": ""
													}
												],
												"src": "845:77:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "971:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1028:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:43:15"
															},
															"nodeType": "YulIf",
															"src": "981:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "964:5:15",
														"type": ""
													}
												],
												"src": "928:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1119:80:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1129:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1097:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1105:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1113:5:15",
														"type": ""
													}
												],
												"src": "1056:143:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1299:413:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1345:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1312:32:15"
															},
															"nodeType": "YulIf",
															"src": "1309:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "1438:128:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1482:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1576:129:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1621:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1261:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1272:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1284:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1292:6:15",
														"type": ""
													}
												],
												"src": "1205:507:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1777:40:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1788:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1804:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1798:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1760:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1770:6:15",
														"type": ""
													}
												],
												"src": "1718:99:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1851:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1868:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1871:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1861:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1861:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1861:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1965:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1968:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1958:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1958:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1958:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1989:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1982:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1982:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1982:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1823:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2037:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2054:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2057:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2047:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2047:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2047:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2151:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2154:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2144:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2144:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2144:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2175:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2178:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2168:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2168:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2168:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "2009:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2246:269:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2256:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2270:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2276:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2266:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2266:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2256:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2287:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2317:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2323:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2313:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2313:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2291:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2364:51:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2378:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2392:6:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2400:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2388:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2388:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2378:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2344:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2337:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2337:26:15"
															},
															"nodeType": "YulIf",
															"src": "2334:81:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2467:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2481:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2481:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2481:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2431:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2454:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2462:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2451:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2451:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2428:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2428:38:15"
															},
															"nodeType": "YulIf",
															"src": "2425:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2230:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2239:6:15",
														"type": ""
													}
												],
												"src": "2195:320:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2575:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2585:11:15",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2593:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2585:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2613:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2616:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2606:14:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2606:14:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2629:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2647:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2650:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2637:9:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2637:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2629:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2562:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2570:4:15",
														"type": ""
													}
												],
												"src": "2521:141:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2712:49:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2722:33:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2740:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2747:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2736:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2736:14:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2752:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2732:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2732:23:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2722:6:15"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2695:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2705:6:15",
														"type": ""
													}
												],
												"src": "2668:93:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2820:54:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2830:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "2855:4:15"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2861:5:15"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2851:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "2830:8:15"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "2795:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2801:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "2811:8:15",
														"type": ""
													}
												],
												"src": "2767:107:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2956:317:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2966:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "2987:10:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2999:1:15",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2983:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2983:18:15"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "2970:9:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3010:109:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "3041:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3052:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3022:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3022:97:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "3014:4:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3128:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:15"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "3170:8:15"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "3140:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3140:39:15"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "3128:8:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3188:30:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3201:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "3212:4:15"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3208:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3208:9:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3197:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3197:21:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3188:5:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3227:40:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3240:5:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "3251:8:15"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "3261:4:15"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3247:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3247:19:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3237:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:30:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "3227:6:15"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2917:5:15",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "2924:10:15",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "2936:8:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2949:6:15",
														"type": ""
													}
												],
												"src": "2880:393:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3311:28:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3321:12:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3328:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3321:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3297:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3307:3:15",
														"type": ""
													}
												],
												"src": "3279:60:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3405:82:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3415:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3473:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3455:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3455:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3446:8:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3446:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3428:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3428:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "3415:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3385:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "3395:9:15",
														"type": ""
													}
												],
												"src": "3345:142:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3540:28:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3550:12:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3557:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3550:3:15"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3526:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3536:3:15",
														"type": ""
													}
												],
												"src": "3493:75:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3650:193:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3660:63:15",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "3715:7:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3684:30:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3684:39:15"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "3664:16:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3739:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3779:4:15"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3773:5:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3773:11:15"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3786:6:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "3818:16:15"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3794:23:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3794:41:15"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "3745:27:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3745:91:15"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3732:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3732:105:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3732:105:15"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3627:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3633:6:15",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "3641:7:15",
														"type": ""
													}
												],
												"src": "3574:269:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:24:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3908:8:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3915:1:15",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3908:3:15"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3894:3:15",
														"type": ""
													}
												],
												"src": "3849:73:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3981:136:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3991:46:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4005:30:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4005:32:15"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "3995:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "4090:4:15"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4096:6:15"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "4104:6:15"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "4046:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4046:65:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4046:65:15"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3967:4:15",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3973:6:15",
														"type": ""
													}
												],
												"src": "3928:189:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4173:136:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4240:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "4284:5:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4291:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "4254:29:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4254:39:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4254:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "4193:5:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4200:3:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4190:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4190:14:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4205:26:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4207:22:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "4220:5:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4227:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4216:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4216:13:15"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "4207:5:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4187:2:15",
																"statements": []
															},
															"src": "4183:120:15"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "4161:5:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4168:3:15",
														"type": ""
													}
												],
												"src": "4123:186:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4394:464:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4420:431:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4434:54:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "4482:5:15"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "4450:31:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4450:38:15"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "4438:8:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4501:63:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "4524:8:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "4552:10:15"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "4534:17:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4534:29:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4520:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4520:44:15"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "4505:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4721:27:15",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4723:23:15",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "4738:8:15"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "4723:11:15"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "4705:10:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4717:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "4702:2:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4702:18:15"
																		},
																		"nodeType": "YulIf",
																		"src": "4699:49:15"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "4790:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "4807:8:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "4835:3:15"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "4817:17:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4817:22:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4803:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4803:37:15"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "4761:28:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4761:80:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4761:80:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4411:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4416:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4408:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4408:11:15"
															},
															"nodeType": "YulIf",
															"src": "4405:446:15"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4370:5:15",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4377:3:15",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "4382:10:15",
														"type": ""
													}
												],
												"src": "4315:543:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4927:54:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4937:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4962:4:15"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4968:5:15"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4958:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4958:16:15"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4937:8:15"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4902:4:15",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4908:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4918:8:15",
														"type": ""
													}
												],
												"src": "4864:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5038:118:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5048:68:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5097:1:15",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "5100:5:15"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "5093:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5093:13:15"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5112:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "5108:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5108:6:15"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "5064:28:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5064:51:15"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "5060:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5060:56:15"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "5052:4:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5125:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5139:4:15"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "5145:4:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5135:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5135:15:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "5125:6:15"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5015:4:15",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "5021:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "5031:6:15",
														"type": ""
													}
												],
												"src": "4987:169:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5242:214:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5375:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5402:4:15"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "5408:3:15"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "5383:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5383:29:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5375:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5421:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "5432:4:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5442:1:15",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "5445:3:15"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5438:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5438:11:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5429:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5429:21:15"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "5421:4:15"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5223:4:15",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "5229:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "5237:4:15",
														"type": ""
													}
												],
												"src": "5161:295:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5553:1303:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5564:51:15",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5611:3:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5578:32:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5578:37:15"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "5568:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5700:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5702:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5702:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5702:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5672:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5680:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5669:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5669:30:15"
															},
															"nodeType": "YulIf",
															"src": "5666:56:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5732:52:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "5778:4:15"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "5772:5:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5772:11:15"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "5746:25:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5746:38:15"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "5736:6:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5877:4:15"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "5883:6:15"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5891:6:15"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "5831:45:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5831:67:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5831:67:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5908:18:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5925:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "5912:9:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5936:17:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5949:4:15",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "5936:9:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6000:611:15",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6014:37:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "6033:6:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6045:4:15",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "6041:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6041:9:15"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "6029:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6029:22:15"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "6018:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6065:51:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6111:4:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "6079:31:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6079:37:15"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "6069:6:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6129:10:15",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6138:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "6133:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6197:163:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6222:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "6240:3:15"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "6245:9:15"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "6236:3:15"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6236:19:15"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "6230:5:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6230:26:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6215:6:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6215:42:15"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6215:42:15"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6274:24:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6288:6:15"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6296:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6284:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6284:14:15"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "6274:6:15"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "6315:31:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "6332:9:15"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6343:2:15",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6328:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6328:18:15"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "6315:9:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "6163:1:15"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6166:7:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6160:2:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6160:14:15"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "6175:21:15",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6177:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "6186:1:15"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6189:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6182:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6182:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "6177:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "6156:3:15",
																					"statements": []
																				},
																				"src": "6152:208:15"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6396:156:15",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "6414:43:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6441:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6446:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6437:3:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6437:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6431:5:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6431:26:15"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "6418:9:15",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6481:6:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "6508:9:15"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "6523:6:15"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "6531:4:15",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "6519:3:15"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6519:17:15"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "6489:18:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6489:48:15"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6474:6:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6474:64:15"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6474:64:15"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "6379:7:15"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "6388:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "6376:2:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6376:19:15"
																				},
																				"nodeType": "YulIf",
																				"src": "6373:179:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6572:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "6586:6:15"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6594:1:15",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "6582:3:15"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6582:14:15"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6598:1:15",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6578:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6578:22:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6565:6:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6565:36:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6565:36:15"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5993:618:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5998:1:15",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6628:222:15",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6642:14:15",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6655:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "6646:5:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6679:67:15",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6697:35:15",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6716:3:15"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6721:9:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6712:3:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6712:19:15"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6706:5:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6706:26:15"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6697:5:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "6672:6:15"
																				},
																				"nodeType": "YulIf",
																				"src": "6669:77:15"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6766:4:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6825:5:15"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "6832:6:15"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "6772:52:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6772:67:15"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6759:6:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6759:81:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6759:81:15"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6620:230:15",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5973:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5981:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5970:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5970:14:15"
															},
															"nodeType": "YulSwitch",
															"src": "5963:887:15"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5542:4:15",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5548:3:15",
														"type": ""
													}
												],
												"src": "5461:1395:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260405180602001604052806040518060600160405280602a8152602001620032a5602a913981525060029060016200003e9291906200022b565b506202a3006008553480156200005357600080fd5b50604051620032cf380380620032cf8339818101604052810190620000799190620003bd565b620000996200008d6200015f60201b60201c565b6200016760201b60201c565b60008060146101000a81548160ff0219169083151502179055506001808190555081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073befe898407483f0f2ff605971fbd8cf8fbd8b160600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060088190555050506200075b565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b82805482825590600052602060002090810192821562000278579160200282015b828111156200027757825182908162000266919062000674565b50916020019190600101906200024c565b5b5090506200028791906200028b565b5090565b5b80821115620002af5760008181620002a59190620002b3565b506001016200028c565b5090565b508054620002c1906200046d565b6000825580601f10620002d55750620002f6565b601f016020900490600052602060002090810190620002f59190620002f9565b5b50565b5b8082111562000314576000816000905550600101620002fa565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200034a826200031d565b9050919050565b6200035c816200033d565b81146200036857600080fd5b50565b6000815190506200037c8162000351565b92915050565b6000819050919050565b620003978162000382565b8114620003a357600080fd5b50565b600081519050620003b7816200038c565b92915050565b60008060408385031215620003d757620003d662000318565b5b6000620003e7858286016200036b565b9250506020620003fa85828601620003a6565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200048657607f821691505b6020821081036200049c576200049b6200043e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005067fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004c7565b620005128683620004c7565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620005556200054f620005498462000382565b6200052a565b62000382565b9050919050565b6000819050919050565b620005718362000534565b6200058962000580826200055c565b848454620004d4565b825550505050565b600090565b620005a062000591565b620005ad81848462000566565b505050565b5b81811015620005d557620005c960008262000596565b600181019050620005b3565b5050565b601f8211156200062457620005ee81620004a2565b620005f984620004b7565b8101602085101562000609578190505b620006216200061885620004b7565b830182620005b2565b50505b505050565b600082821c905092915050565b6000620006496000198460080262000629565b1980831691505092915050565b600062000664838362000636565b9150826002028217905092915050565b6200067f8262000404565b67ffffffffffffffff8111156200069b576200069a6200040f565b5b620006a782546200046d565b620006b4828285620005d9565b600060209050601f831160018114620006ec5760008415620006d7578287015190505b620006e3858262000656565b86555062000753565b601f198416620006fc86620004a2565b60005b828110156200072657848901518255600182019150602085019450602081019050620006ff565b8683101562000746578489015162000742601f89168262000636565b8355505b6001600288020188555050505b505050505050565b612b3a806200076b6000396000f3fe608060405234801561001057600080fd5b50600436106101a85760003560e01c806380faa57d116100f9578063ca1d209d11610097578063d1af0c7d11610071578063d1af0c7d14610487578063df136d65146104a5578063ebe2b12b146104c3578063f2fde38b146104e1576101a8565b8063ca1d209d14610431578063cc1a378f1461044d578063cd3daf9d14610469576101a8565b80638b876347116100d35780638b876347146103bb5780638da5cb5b146103eb578063c6e79b9114610409578063c8f33c9114610413576101a8565b806380faa57d14610351578063880b0e431461036f5780638980f11f1461039f576101a8565b8063583419221161016657806370a082311161014057806370a08231146102db578063715018a61461030b57806372f702f3146103155780637b0a47ee14610333576101a8565b806358341922146102835780635c975abb146102a15780636c11fe9b146102bf576101a8565b80628cc262146101ad5780630700037d146101dd5780631c1f78eb1461020d578063386a95251461022b5780634e71d92d14610249578063529d6ccf14610253575b600080fd5b6101c760048036038101906101c29190611a10565b6104fd565b6040516101d49190611a56565b60405180910390f35b6101f760048036038101906101f29190611a10565b61050f565b6040516102049190611a56565b60405180910390f35b610215610527565b6040516102229190611a56565b60405180910390f35b61023361053e565b6040516102409190611a56565b60405180910390f35b610251610544565b005b61026d60048036038101906102689190611a10565b610772565b60405161027a9190611a8c565b60405180910390f35b61028b6107c8565b6040516102989190611a56565b60405180910390f35b6102a96107d2565b6040516102b69190611a8c565b60405180910390f35b6102d960048036038101906102d49190611dc2565b6107e8565b005b6102f560048036038101906102f09190611a10565b6108c0565b6040516103029190611a56565b60405180910390f35b610313610909565b005b61031d61091d565b60405161032a9190611ec8565b60405180910390f35b61033b610943565b6040516103489190611a56565b60405180910390f35b610359610949565b6040516103669190611a56565b60405180910390f35b61038960048036038101906103849190611ee3565b610958565b6040516103969190611f8a565b60405180910390f35b6103b960048036038101906103b49190611fa5565b610bcc565b005b6103d560048036038101906103d09190611a10565b610cca565b6040516103e29190611a56565b60405180910390f35b6103f3610ce2565b6040516104009190611ff4565b60405180910390f35b610411610d0b565b005b61041b610e4d565b6040516104289190611a56565b60405180910390f35b61044b6004803603810190610446919061200f565b610e53565b005b6104676004803603810190610462919061200f565b61113f565b005b6104716111c4565b60405161047e9190611a56565b60405180910390f35b61048f6111d3565b60405161049c9190611ec8565b60405180910390f35b6104ad6111f9565b6040516104ba9190611a56565b60405180910390f35b6104cb6111ff565b6040516104d89190611a56565b60405180910390f35b6104fb60048036038101906104f69190611a10565b611205565b005b600061050882611288565b9050919050565b600c6020528060005260406000206000915090505481565b6000600854600754610539919061206b565b905090565b60085481565b61054c61138a565b6105546113d9565b3361055d611423565b600a8190555061056b61148d565b600981905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610638576105ae81611288565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a54600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610766576000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107173382600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166114a79092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a8260405161075d9190611a56565b60405180910390a25b505061077061152d565b565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600d54905090565b60008060149054906101000a900460ff16905090565b6107f06113d9565b81518351148015610802575080518251145b610841576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108389061210a565b60405180910390fd5b60005b83518110156108ba576108a68482815181106108635761086261212a565b5b602002602001015184838151811061087e5761087d61212a565b5b60200260200101518484815181106108995761089861212a565b5b6020026020010151610958565b5080806108b290612159565b915050610844565b50505050565b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610911611536565b61091b60006115b4565b565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b600061095361148d565b905090565b60006109626113d9565b3361096b611423565b600a8190555061097961148d565b600981905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a46576109bc81611288565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a54600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008311610a80576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061080073ffffffffffffffffffffffffffffffffffffffff166354b826f5338888886040518563ffffffff1660e01b8152600401610ac3949392919061220f565b6020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061228e565b905083600d54610b1691906122bb565b600d8190555083600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b6b91906122bb565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f0da5c3d1021415bb27aa0917eaaafc6ee7c358a2a436d70208004073f6109ec085604051610bb89190611a56565b60405180910390a280925050509392505050565b610bd4611536565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c5b576040517f43fc58f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c8d610c66610ce2565b828473ffffffffffffffffffffffffffffffffffffffff166114a79092919063ffffffff16565b7f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa288282604051610cbe9291906122ef565b60405180910390a15050565b600b6020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061080073ffffffffffffffffffffffffffffffffffffffff1663b6039895337fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60026040518463ffffffff1660e01b8152600401610d6d939291906124e8565b6020604051808303816000875af1158015610d8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db09190612552565b905080610df2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de9906125f1565b60405180910390fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60095481565b610e5b611536565b610e636113d9565b6000610e6d611423565b600a81905550610e7b61148d565b600981905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f4857610ebe81611288565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a54600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6006544210610f6a5760085482610f5f9190612640565b600781905550610fb0565b600042600654610f7a9190612671565b9050600060075482610f8c919061206b565b90506008548185610f9d91906122bb565b610fa79190612640565b60078190555050505b610fff333084600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611678909392919063ffffffff16565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161105c9190611ff4565b602060405180830381865afa158015611079573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109d91906126ba565b9050600854816110ad9190612640565b60075411156110e8576040517f7f5e85a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b42600981905550600854426110fd91906122bb565b6006819055507fc4c14883ae9fd8e26d5d59e3485ed29fd126d781d7e498a4ca5c54c8268e4936836040516111329190611a56565b60405180910390a1505050565b611147611536565b600654421015611183576040517f38e3211200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806008819055507ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d3816040516111b99190611a56565b60405180910390a150565b60006111ce611423565b905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b60065481565b61120d611536565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361127c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127390612759565b60405180910390fd5b611285816115b4565b50565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054670de0b6b3a7640000600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461131b611423565b6113259190612671565b600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461136f919061206b565b6113799190612640565b61138391906122bb565b9050919050565b6002600154036113cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c6906127c5565b60405180910390fd5b6002600181905550565b6113e16107d2565b15611421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141890612831565b60405180910390fd5b565b600080600d540361143857600a54905061148a565b600d54670de0b6b3a764000060075460095461145261148d565b61145c9190612671565b611466919061206b565b611470919061206b565b61147a9190612640565b600a5461148791906122bb565b90505b90565b600060065442106114a0576006546114a2565b425b905090565b6115288363a9059cbb60e01b84846040516024016114c69291906122ef565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611701565b505050565b60018081905550565b61153e6117c9565b73ffffffffffffffffffffffffffffffffffffffff1661155c610ce2565b73ffffffffffffffffffffffffffffffffffffffff16146115b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a99061289d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6116fb846323b872dd60e01b858585604051602401611699939291906128bd565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611701565b50505050565b6000611763826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166117d19092919063ffffffff16565b90506000815114806117855750808060200190518101906117849190612552565b5b6117c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117bb90612966565b60405180910390fd5b505050565b600033905090565b60606117e084846000856117e9565b90509392505050565b60608247101561182e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611825906129f8565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516118579190612a5f565b60006040518083038185875af1925050503d8060008114611894576040519150601f19603f3d011682016040523d82523d6000602084013e611899565b606091505b50915091506118aa878383876118b6565b92505050949350505050565b60608315611918576000835103611910576118d08561192b565b61190f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190690612ac2565b60405180910390fd5b5b829050611923565b611922838361194e565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156119615781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119959190612ae2565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119dd826119b2565b9050919050565b6119ed816119d2565b81146119f857600080fd5b50565b600081359050611a0a816119e4565b92915050565b600060208284031215611a2657611a256119a8565b5b6000611a34848285016119fb565b91505092915050565b6000819050919050565b611a5081611a3d565b82525050565b6000602082019050611a6b6000830184611a47565b92915050565b60008115159050919050565b611a8681611a71565b82525050565b6000602082019050611aa16000830184611a7d565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611af582611aac565b810181811067ffffffffffffffff82111715611b1457611b13611abd565b5b80604052505050565b6000611b2761199e565b9050611b338282611aec565b919050565b600067ffffffffffffffff821115611b5357611b52611abd565b5b602082029050602081019050919050565b600080fd5b600080fd5b600067ffffffffffffffff821115611b8957611b88611abd565b5b611b9282611aac565b9050602081019050919050565b82818337600083830152505050565b6000611bc1611bbc84611b6e565b611b1d565b905082815260208101848484011115611bdd57611bdc611b69565b5b611be8848285611b9f565b509392505050565b600082601f830112611c0557611c04611aa7565b5b8135611c15848260208601611bae565b91505092915050565b6000611c31611c2c84611b38565b611b1d565b90508083825260208201905060208402830185811115611c5457611c53611b64565b5b835b81811015611c9b57803567ffffffffffffffff811115611c7957611c78611aa7565b5b808601611c868982611bf0565b85526020850194505050602081019050611c56565b5050509392505050565b600082601f830112611cba57611cb9611aa7565b5b8135611cca848260208601611c1e565b91505092915050565b600067ffffffffffffffff821115611cee57611ced611abd565b5b602082029050602081019050919050565b611d0881611a3d565b8114611d1357600080fd5b50565b600081359050611d2581611cff565b92915050565b6000611d3e611d3984611cd3565b611b1d565b90508083825260208201905060208402830185811115611d6157611d60611b64565b5b835b81811015611d8a5780611d768882611d16565b845260208401935050602081019050611d63565b5050509392505050565b600082601f830112611da957611da8611aa7565b5b8135611db9848260208601611d2b565b91505092915050565b600080600060608486031215611ddb57611dda6119a8565b5b600084013567ffffffffffffffff811115611df957611df86119ad565b5b611e0586828701611ca5565b935050602084013567ffffffffffffffff811115611e2657611e256119ad565b5b611e3286828701611ca5565b925050604084013567ffffffffffffffff811115611e5357611e526119ad565b5b611e5f86828701611d94565b9150509250925092565b6000819050919050565b6000611e8e611e89611e84846119b2565b611e69565b6119b2565b9050919050565b6000611ea082611e73565b9050919050565b6000611eb282611e95565b9050919050565b611ec281611ea7565b82525050565b6000602082019050611edd6000830184611eb9565b92915050565b600080600060608486031215611efc57611efb6119a8565b5b600084013567ffffffffffffffff811115611f1a57611f196119ad565b5b611f2686828701611bf0565b935050602084013567ffffffffffffffff811115611f4757611f466119ad565b5b611f5386828701611bf0565b9250506040611f6486828701611d16565b9150509250925092565b60008160070b9050919050565b611f8481611f6e565b82525050565b6000602082019050611f9f6000830184611f7b565b92915050565b60008060408385031215611fbc57611fbb6119a8565b5b6000611fca858286016119fb565b9250506020611fdb85828601611d16565b9150509250929050565b611fee816119d2565b82525050565b60006020820190506120096000830184611fe5565b92915050565b600060208284031215612025576120246119a8565b5b600061203384828501611d16565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061207682611a3d565b915061208183611a3d565b925082820261208f81611a3d565b915082820484148315176120a6576120a561203c565b5b5092915050565b600082825260208201905092915050565b7f496e70757420617272617973206c656e677468206d69736d6174636800000000600082015250565b60006120f4601c836120ad565b91506120ff826120be565b602082019050919050565b60006020820190508181036000830152612123816120e7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061216482611a3d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121965761219561203c565b5b600182019050919050565b600081519050919050565b60005b838110156121ca5780820151818401526020810190506121af565b60008484015250505050565b60006121e1826121a1565b6121eb81856120ad565b93506121fb8185602086016121ac565b61220481611aac565b840191505092915050565b60006080820190506122246000830187611fe5565b818103602083015261223681866121d6565b9050818103604083015261224a81856121d6565b90506122596060830184611a47565b95945050505050565b61226b81611f6e565b811461227657600080fd5b50565b60008151905061228881612262565b92915050565b6000602082840312156122a4576122a36119a8565b5b60006122b284828501612279565b91505092915050565b60006122c682611a3d565b91506122d183611a3d565b92508282019050808211156122e9576122e861203c565b5b92915050565b60006040820190506123046000830185611fe5565b6123116020830184611a47565b9392505050565b600081549050919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061239057607f821691505b6020821081036123a3576123a2612349565b5b50919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b600081546123dc81612378565b6123e681866123a9565b9450600182166000811461240157600181146124175761244a565b60ff19831686528115156020028601935061244a565b612420856123ba565b60005b8381101561244257815481890152600182019150602081019050612423565b808801955050505b50505092915050565b600061245f83836123cf565b905092915050565b6000600182019050919050565b600061247f82612318565b6124898185612323565b93508360208202850161249b85612334565b8060005b858110156124d6578484038952816124b78582612453565b94506124c283612467565b925060208a0199505060018101905061249f565b50829750879550505050505092915050565b60006060820190506124fd6000830186611fe5565b61250a6020830185611a47565b818103604083015261251c8184612474565b9050949350505050565b61252f81611a71565b811461253a57600080fd5b50565b60008151905061254c81612526565b92915050565b600060208284031215612568576125676119a8565b5b60006125768482850161253d565b91505092915050565b7f4661696c656420746f20617070726f76652064656c6567617465206d6574686f60008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b60006125db6021836120ad565b91506125e68261257f565b604082019050919050565b6000602082019050818103600083015261260a816125ce565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061264b82611a3d565b915061265683611a3d565b92508261266657612665612611565b5b828204905092915050565b600061267c82611a3d565b915061268783611a3d565b925082820390508181111561269f5761269e61203c565b5b92915050565b6000815190506126b481611cff565b92915050565b6000602082840312156126d0576126cf6119a8565b5b60006126de848285016126a5565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006127436026836120ad565b915061274e826126e7565b604082019050919050565b6000602082019050818103600083015261277281612736565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006127af601f836120ad565b91506127ba82612779565b602082019050919050565b600060208201905081810360008301526127de816127a2565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b600061281b6010836120ad565b9150612826826127e5565b602082019050919050565b6000602082019050818103600083015261284a8161280e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006128876020836120ad565b915061289282612851565b602082019050919050565b600060208201905081810360008301526128b68161287a565b9050919050565b60006060820190506128d26000830186611fe5565b6128df6020830185611fe5565b6128ec6040830184611a47565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612950602a836120ad565b915061295b826128f4565b604082019050919050565b6000602082019050818103600083015261297f81612943565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006129e26026836120ad565b91506129ed82612986565b604082019050919050565b60006020820190508181036000830152612a11816129d5565b9050919050565b600081519050919050565b600081905092915050565b6000612a3982612a18565b612a438185612a23565b9350612a538185602086016121ac565b80840191505092915050565b6000612a6b8284612a2e565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612aac601d836120ad565b9150612ab782612a76565b602082019050919050565b60006020820190508181036000830152612adb81612a9f565b9050919050565b60006020820190508181036000830152612afc81846121d6565b90509291505056fea2646970667358221220dd175e72649fc590c32e72ba343166cecec776c9b550f6f852b852cdffb2987d64736f6c634300081200332f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c6567617465",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x32A5 PUSH1 0x2A SWAP2 CODECOPY DUP2 MSTORE POP PUSH1 0x2 SWAP1 PUSH1 0x1 PUSH3 0x3E SWAP3 SWAP2 SWAP1 PUSH3 0x22B JUMP JUMPDEST POP PUSH3 0x2A300 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x32CF CODESIZE SUB DUP1 PUSH3 0x32CF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x79 SWAP2 SWAP1 PUSH3 0x3BD JUMP JUMPDEST PUSH3 0x99 PUSH3 0x8D PUSH3 0x15F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x167 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xBEFE898407483F0F2FF605971FBD8CF8FBD8B160 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP POP POP PUSH3 0x75B JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x278 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x277 JUMPI DUP3 MLOAD DUP3 SWAP1 DUP2 PUSH3 0x266 SWAP2 SWAP1 PUSH3 0x674 JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x24C JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x287 SWAP2 SWAP1 PUSH3 0x28B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2AF JUMPI PUSH1 0x0 DUP2 DUP2 PUSH3 0x2A5 SWAP2 SWAP1 PUSH3 0x2B3 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH3 0x28C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH3 0x2C1 SWAP1 PUSH3 0x46D JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH3 0x2D5 JUMPI POP PUSH3 0x2F6 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH3 0x2F5 SWAP2 SWAP1 PUSH3 0x2F9 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x314 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2FA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x34A DUP3 PUSH3 0x31D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x35C DUP2 PUSH3 0x33D JUMP JUMPDEST DUP2 EQ PUSH3 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x37C DUP2 PUSH3 0x351 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x397 DUP2 PUSH3 0x382 JUMP JUMPDEST DUP2 EQ PUSH3 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x3B7 DUP2 PUSH3 0x38C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x3D7 JUMPI PUSH3 0x3D6 PUSH3 0x318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x3E7 DUP6 DUP3 DUP7 ADD PUSH3 0x36B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x3FA DUP6 DUP3 DUP7 ADD PUSH3 0x3A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x486 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x49C JUMPI PUSH3 0x49B PUSH3 0x43E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x506 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4C7 JUMP JUMPDEST PUSH3 0x512 DUP7 DUP4 PUSH3 0x4C7 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x555 PUSH3 0x54F PUSH3 0x549 DUP5 PUSH3 0x382 JUMP JUMPDEST PUSH3 0x52A JUMP JUMPDEST PUSH3 0x382 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x571 DUP4 PUSH3 0x534 JUMP JUMPDEST PUSH3 0x589 PUSH3 0x580 DUP3 PUSH3 0x55C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x4D4 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x5A0 PUSH3 0x591 JUMP JUMPDEST PUSH3 0x5AD DUP2 DUP5 DUP5 PUSH3 0x566 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5D5 JUMPI PUSH3 0x5C9 PUSH1 0x0 DUP3 PUSH3 0x596 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5B3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x624 JUMPI PUSH3 0x5EE DUP2 PUSH3 0x4A2 JUMP JUMPDEST PUSH3 0x5F9 DUP5 PUSH3 0x4B7 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x609 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x621 PUSH3 0x618 DUP6 PUSH3 0x4B7 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5B2 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x649 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x629 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x664 DUP4 DUP4 PUSH3 0x636 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x67F DUP3 PUSH3 0x404 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x69B JUMPI PUSH3 0x69A PUSH3 0x40F JUMP JUMPDEST JUMPDEST PUSH3 0x6A7 DUP3 SLOAD PUSH3 0x46D JUMP JUMPDEST PUSH3 0x6B4 DUP3 DUP3 DUP6 PUSH3 0x5D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6EC JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x6D7 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6E3 DUP6 DUP3 PUSH3 0x656 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x753 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x6FC DUP7 PUSH3 0x4A2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x726 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x6FF JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x746 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x742 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x636 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2B3A DUP1 PUSH3 0x76B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80FAA57D GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xCA1D209D GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4E1 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0xCA1D209D EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0xCC1A378F EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x469 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x8B876347 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xC6E79B91 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x413 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x880B0E43 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x39F JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x58341922 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x333 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x58341922 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x6C11FE9B EQ PUSH2 0x2BF JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x529D6CCF EQ PUSH2 0x253 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0x53E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH2 0x544 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1A8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1A8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x1DC2 JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH2 0x909 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31D PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33B PUSH2 0x943 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH2 0x949 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH2 0x958 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1F8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0xBCC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F3 PUSH2 0xCE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x1FF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x411 PUSH2 0xD0B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41B PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x200F JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x462 SWAP2 SWAP1 PUSH2 0x200F JUMP JUMPDEST PUSH2 0x113F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x471 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48F PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49C SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AD PUSH2 0x11F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CB PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x1205 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x508 DUP3 PUSH2 0x1288 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0x539 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x54C PUSH2 0x138A JUMP JUMPDEST PUSH2 0x554 PUSH2 0x13D9 JUMP JUMPDEST CALLER PUSH2 0x55D PUSH2 0x1423 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0x56B PUSH2 0x148D JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x638 JUMPI PUSH2 0x5AE DUP2 PUSH2 0x1288 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA SLOAD PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x766 JUMPI PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x717 CALLER DUP3 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14A7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A DUP3 PUSH1 0x40 MLOAD PUSH2 0x75D SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH2 0x770 PUSH2 0x152D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F0 PUSH2 0x13D9 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ DUP1 ISZERO PUSH2 0x802 JUMPI POP DUP1 MLOAD DUP3 MLOAD EQ JUMPDEST PUSH2 0x841 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x838 SWAP1 PUSH2 0x210A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x8BA JUMPI PUSH2 0x8A6 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x863 JUMPI PUSH2 0x862 PUSH2 0x212A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x87E JUMPI PUSH2 0x87D PUSH2 0x212A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x899 JUMPI PUSH2 0x898 PUSH2 0x212A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x958 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x8B2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x844 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x911 PUSH2 0x1536 JUMP JUMPDEST PUSH2 0x91B PUSH1 0x0 PUSH2 0x15B4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x953 PUSH2 0x148D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x962 PUSH2 0x13D9 JUMP JUMPDEST CALLER PUSH2 0x96B PUSH2 0x1423 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0x979 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA46 JUMPI PUSH2 0x9BC DUP2 PUSH2 0x1288 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA SLOAD PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xA80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F2A200500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x54B826F5 CALLER DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x220F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB06 SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xD SLOAD PUSH2 0xB16 SWAP2 SWAP1 PUSH2 0x22BB JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB6B SWAP2 SWAP1 PUSH2 0x22BB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDA5C3D1021415BB27AA0917EAAAFC6EE7C358A2A436D70208004073F6109EC0 DUP6 PUSH1 0x40 MLOAD PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBD4 PUSH2 0x1536 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x43FC58F100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC8D PUSH2 0xC66 PUSH2 0xCE2 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14A7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xCBE SWAP3 SWAP2 SWAP1 PUSH2 0x22EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6039895 CALLER PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB0 SWAP2 SWAP1 PUSH2 0x2552 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xDF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE9 SWAP1 PUSH2 0x25F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x1536 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0x13D9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6D PUSH2 0x1423 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0xE7B PUSH2 0x148D JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF48 JUMPI PUSH2 0xEBE DUP2 PUSH2 0x1288 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA SLOAD PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP LT PUSH2 0xF6A JUMPI PUSH1 0x8 SLOAD DUP3 PUSH2 0xF5F SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0xFB0 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP PUSH1 0x6 SLOAD PUSH2 0xF7A SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0xF8C SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST SWAP1 POP PUSH1 0x8 SLOAD DUP2 DUP6 PUSH2 0xF9D SWAP2 SWAP1 PUSH2 0x22BB JUMP JUMPDEST PUSH2 0xFA7 SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST PUSH2 0xFFF CALLER ADDRESS DUP5 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1678 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105C SWAP2 SWAP1 PUSH2 0x1FF4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1079 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109D SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST SWAP1 POP PUSH1 0x8 SLOAD DUP2 PUSH2 0x10AD SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST PUSH1 0x7 SLOAD GT ISZERO PUSH2 0x10E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7F5E85A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD TIMESTAMP PUSH2 0x10FD SWAP2 SWAP1 PUSH2 0x22BB JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH32 0xC4C14883AE9FD8E26D5D59E3485ED29FD126D781D7E498A4CA5C54C8268E4936 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1132 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x1147 PUSH2 0x1536 JUMP JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x38E3211200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0xFB46CA5A5E06D4540D6387B930A7C978BCE0DB5F449EC6B3F5D07C6E1D44F2D3 DUP2 PUSH1 0x40 MLOAD PUSH2 0x11B9 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CE PUSH2 0x1423 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x120D PUSH2 0x1536 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x127C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1273 SWAP1 PUSH2 0x2759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1285 DUP2 PUSH2 0x15B4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0xB PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x131B PUSH2 0x1423 JUMP JUMPDEST PUSH2 0x1325 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x136F SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x1379 SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST PUSH2 0x1383 SWAP2 SWAP1 PUSH2 0x22BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x13CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C6 SWAP1 PUSH2 0x27C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x13E1 PUSH2 0x7D2 JUMP JUMPDEST ISZERO PUSH2 0x1421 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1418 SWAP1 PUSH2 0x2831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xD SLOAD SUB PUSH2 0x1438 JUMPI PUSH1 0xA SLOAD SWAP1 POP PUSH2 0x148A JUMP JUMPDEST PUSH1 0xD SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD PUSH2 0x1452 PUSH2 0x148D JUMP JUMPDEST PUSH2 0x145C SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST PUSH2 0x1466 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x1470 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x147A SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1487 SWAP2 SWAP1 PUSH2 0x22BB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD TIMESTAMP LT PUSH2 0x14A0 JUMPI PUSH1 0x6 SLOAD PUSH2 0x14A2 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1528 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x14C6 SWAP3 SWAP2 SWAP1 PUSH2 0x22EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1701 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x153E PUSH2 0x17C9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x155C PUSH2 0xCE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A9 SWAP1 PUSH2 0x289D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x16FB DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1699 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1701 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1763 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x1785 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1784 SWAP2 SWAP1 PUSH2 0x2552 JUMP JUMPDEST JUMPDEST PUSH2 0x17C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17BB SWAP1 PUSH2 0x2966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x17E0 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x17E9 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x182E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1825 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1857 SWAP2 SWAP1 PUSH2 0x2A5F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1894 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x18AA DUP8 DUP4 DUP4 DUP8 PUSH2 0x18B6 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1918 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1910 JUMPI PUSH2 0x18D0 DUP6 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x190F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1906 SWAP1 PUSH2 0x2AC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1923 JUMP JUMPDEST PUSH2 0x1922 DUP4 DUP4 PUSH2 0x194E JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1961 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1995 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DD DUP3 PUSH2 0x19B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19ED DUP2 PUSH2 0x19D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A0A DUP2 PUSH2 0x19E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A26 JUMPI PUSH2 0x1A25 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A34 DUP5 DUP3 DUP6 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A50 DUP2 PUSH2 0x1A3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A6B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A86 DUP2 PUSH2 0x1A71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1AF5 DUP3 PUSH2 0x1AAC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B14 JUMPI PUSH2 0x1B13 PUSH2 0x1ABD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B27 PUSH2 0x199E JUMP JUMPDEST SWAP1 POP PUSH2 0x1B33 DUP3 DUP3 PUSH2 0x1AEC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B53 JUMPI PUSH2 0x1B52 PUSH2 0x1ABD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B89 JUMPI PUSH2 0x1B88 PUSH2 0x1ABD JUMP JUMPDEST JUMPDEST PUSH2 0x1B92 DUP3 PUSH2 0x1AAC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC1 PUSH2 0x1BBC DUP5 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1B1D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1BDD JUMPI PUSH2 0x1BDC PUSH2 0x1B69 JUMP JUMPDEST JUMPDEST PUSH2 0x1BE8 DUP5 DUP3 DUP6 PUSH2 0x1B9F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C05 JUMPI PUSH2 0x1C04 PUSH2 0x1AA7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C15 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BAE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C31 PUSH2 0x1C2C DUP5 PUSH2 0x1B38 JUMP JUMPDEST PUSH2 0x1B1D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1C54 JUMPI PUSH2 0x1C53 PUSH2 0x1B64 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C9B JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C79 JUMPI PUSH2 0x1C78 PUSH2 0x1AA7 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x1C86 DUP10 DUP3 PUSH2 0x1BF0 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C56 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CBA JUMPI PUSH2 0x1CB9 PUSH2 0x1AA7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CCA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CEE JUMPI PUSH2 0x1CED PUSH2 0x1ABD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D08 DUP2 PUSH2 0x1A3D JUMP JUMPDEST DUP2 EQ PUSH2 0x1D13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D25 DUP2 PUSH2 0x1CFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D3E PUSH2 0x1D39 DUP5 PUSH2 0x1CD3 JUMP JUMPDEST PUSH2 0x1B1D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1D61 JUMPI PUSH2 0x1D60 PUSH2 0x1B64 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D8A JUMPI DUP1 PUSH2 0x1D76 DUP9 DUP3 PUSH2 0x1D16 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D63 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DA9 JUMPI PUSH2 0x1DA8 PUSH2 0x1AA7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DB9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DDB JUMPI PUSH2 0x1DDA PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DF9 JUMPI PUSH2 0x1DF8 PUSH2 0x19AD JUMP JUMPDEST JUMPDEST PUSH2 0x1E05 DUP7 DUP3 DUP8 ADD PUSH2 0x1CA5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E26 JUMPI PUSH2 0x1E25 PUSH2 0x19AD JUMP JUMPDEST JUMPDEST PUSH2 0x1E32 DUP7 DUP3 DUP8 ADD PUSH2 0x1CA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E53 JUMPI PUSH2 0x1E52 PUSH2 0x19AD JUMP JUMPDEST JUMPDEST PUSH2 0x1E5F DUP7 DUP3 DUP8 ADD PUSH2 0x1D94 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E8E PUSH2 0x1E89 PUSH2 0x1E84 DUP5 PUSH2 0x19B2 JUMP JUMPDEST PUSH2 0x1E69 JUMP JUMPDEST PUSH2 0x19B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA0 DUP3 PUSH2 0x1E73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB2 DUP3 PUSH2 0x1E95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC2 DUP2 PUSH2 0x1EA7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EDD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EFC JUMPI PUSH2 0x1EFB PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F1A JUMPI PUSH2 0x1F19 PUSH2 0x19AD JUMP JUMPDEST JUMPDEST PUSH2 0x1F26 DUP7 DUP3 DUP8 ADD PUSH2 0x1BF0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F47 JUMPI PUSH2 0x1F46 PUSH2 0x19AD JUMP JUMPDEST JUMPDEST PUSH2 0x1F53 DUP7 DUP3 DUP8 ADD PUSH2 0x1BF0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F64 DUP7 DUP3 DUP8 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F84 DUP2 PUSH2 0x1F6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F9F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FBC JUMPI PUSH2 0x1FBB PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FCA DUP6 DUP3 DUP7 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FDB DUP6 DUP3 DUP7 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FEE DUP2 PUSH2 0x19D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2009 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2025 JUMPI PUSH2 0x2024 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2033 DUP5 DUP3 DUP6 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2076 DUP3 PUSH2 0x1A3D JUMP JUMPDEST SWAP2 POP PUSH2 0x2081 DUP4 PUSH2 0x1A3D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x208F DUP2 PUSH2 0x1A3D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20A6 JUMPI PUSH2 0x20A5 PUSH2 0x203C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E70757420617272617973206C656E677468206D69736D6174636800000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F4 PUSH1 0x1C DUP4 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x20FF DUP3 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2123 DUP2 PUSH2 0x20E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2164 DUP3 PUSH2 0x1A3D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2196 JUMPI PUSH2 0x2195 PUSH2 0x203C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21CA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21AF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E1 DUP3 PUSH2 0x21A1 JUMP JUMPDEST PUSH2 0x21EB DUP2 DUP6 PUSH2 0x20AD JUMP JUMPDEST SWAP4 POP PUSH2 0x21FB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x2204 DUP2 PUSH2 0x1AAC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2224 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1FE5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2236 DUP2 DUP7 PUSH2 0x21D6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x224A DUP2 DUP6 PUSH2 0x21D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x2259 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1A47 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x226B DUP2 PUSH2 0x1F6E JUMP JUMPDEST DUP2 EQ PUSH2 0x2276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2288 DUP2 PUSH2 0x2262 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22A4 JUMPI PUSH2 0x22A3 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22B2 DUP5 DUP3 DUP6 ADD PUSH2 0x2279 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C6 DUP3 PUSH2 0x1A3D JUMP JUMPDEST SWAP2 POP PUSH2 0x22D1 DUP4 PUSH2 0x1A3D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22E9 JUMPI PUSH2 0x22E8 PUSH2 0x203C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2304 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1FE5 JUMP JUMPDEST PUSH2 0x2311 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A47 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2390 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x23A3 JUMPI PUSH2 0x23A2 PUSH2 0x2349 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x23DC DUP2 PUSH2 0x2378 JUMP JUMPDEST PUSH2 0x23E6 DUP2 DUP7 PUSH2 0x23A9 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x2401 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2417 JUMPI PUSH2 0x244A JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x244A JUMP JUMPDEST PUSH2 0x2420 DUP6 PUSH2 0x23BA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2442 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2423 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x245F DUP4 DUP4 PUSH2 0x23CF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x247F DUP3 PUSH2 0x2318 JUMP JUMPDEST PUSH2 0x2489 DUP2 DUP6 PUSH2 0x2323 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x249B DUP6 PUSH2 0x2334 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x24D6 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 PUSH2 0x24B7 DUP6 DUP3 PUSH2 0x2453 JUMP JUMPDEST SWAP5 POP PUSH2 0x24C2 DUP4 PUSH2 0x2467 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x249F JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24FD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1FE5 JUMP JUMPDEST PUSH2 0x250A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A47 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x251C DUP2 DUP5 PUSH2 0x2474 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x252F DUP2 PUSH2 0x1A71 JUMP JUMPDEST DUP2 EQ PUSH2 0x253A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x254C DUP2 PUSH2 0x2526 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2568 JUMPI PUSH2 0x2567 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2576 DUP5 DUP3 DUP6 ADD PUSH2 0x253D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F20617070726F76652064656C6567617465206D6574686F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25DB PUSH1 0x21 DUP4 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x25E6 DUP3 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x260A DUP2 PUSH2 0x25CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x264B DUP3 PUSH2 0x1A3D JUMP JUMPDEST SWAP2 POP PUSH2 0x2656 DUP4 PUSH2 0x1A3D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2666 JUMPI PUSH2 0x2665 PUSH2 0x2611 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267C DUP3 PUSH2 0x1A3D JUMP JUMPDEST SWAP2 POP PUSH2 0x2687 DUP4 PUSH2 0x1A3D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x269F JUMPI PUSH2 0x269E PUSH2 0x203C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x26B4 DUP2 PUSH2 0x1CFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26D0 JUMPI PUSH2 0x26CF PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26DE DUP5 DUP3 DUP6 ADD PUSH2 0x26A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2743 PUSH1 0x26 DUP4 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x274E DUP3 PUSH2 0x26E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2772 DUP2 PUSH2 0x2736 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27AF PUSH1 0x1F DUP4 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x27BA DUP3 PUSH2 0x2779 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27DE DUP2 PUSH2 0x27A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x281B PUSH1 0x10 DUP4 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2826 DUP3 PUSH2 0x27E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x284A DUP2 PUSH2 0x280E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2887 PUSH1 0x20 DUP4 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2892 DUP3 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28B6 DUP2 PUSH2 0x287A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x28D2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1FE5 JUMP JUMPDEST PUSH2 0x28DF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FE5 JUMP JUMPDEST PUSH2 0x28EC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A47 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2950 PUSH1 0x2A DUP4 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x295B DUP3 PUSH2 0x28F4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x297F DUP2 PUSH2 0x2943 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E2 PUSH1 0x26 DUP4 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x29ED DUP3 PUSH2 0x2986 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A11 DUP2 PUSH2 0x29D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A39 DUP3 PUSH2 0x2A18 JUMP JUMPDEST PUSH2 0x2A43 DUP2 DUP6 PUSH2 0x2A23 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21AC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A6B DUP3 DUP5 PUSH2 0x2A2E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AAC PUSH1 0x1D DUP4 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2AB7 DUP3 PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ADB DUP2 PUSH2 0x2A9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AFC DUP2 DUP5 PUSH2 0x21D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD OR 0x5E PUSH19 0x649FC590C32E72BA343166CECEC776C9B550F6 0xF8 MSTORE 0xB8 MSTORE 0xCD SELFDESTRUCT 0xB2 SWAP9 PUSH30 0x64736F6C634300081200332F636F736D6F732E7374616B696E672E763162 PUSH6 0x7461312E4D73 PUSH8 0x426567696E526564 PUSH6 0x6C6567617465 ",
							"sourceMap": "862:10838:12:-:0;;;955:50;;;;;;;;990:14;;;;;;;;;;;;;;;;;955:50;;;;;;;;;;;:::i;:::-;;2006:6;1973:39;;4534:212;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1006:5:1;996:7;;:15;;;;;;;;;;;;;;;;;;1716:1:2;1821:7;:22;;;;4615:13:12;4593:12;;:36;;;;;;;;;;;;;;;;;;4665:42;4635:12;;:74;;;;;;;;;;;;;;;;;;4733:8;4715:15;:26;;;;4534:212;;862:10838;;640:96:7;693:7;719:10;712:17;;640:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;862:10838:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:15:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;1718:99::-;1770:6;1804:5;1798:12;1788:22;;1718:99;;;:::o;1823:180::-;1871:77;1868:1;1861:88;1968:4;1965:1;1958:15;1992:4;1989:1;1982:15;2009:180;2057:77;2054:1;2047:88;2154:4;2151:1;2144:15;2178:4;2175:1;2168:15;2195:320;2239:6;2276:1;2270:4;2266:12;2256:22;;2323:1;2317:4;2313:12;2344:18;2334:81;;2400:4;2392:6;2388:17;2378:27;;2334:81;2462:2;2454:6;2451:14;2431:18;2428:38;2425:84;;2481:18;;:::i;:::-;2425:84;2246:269;2195:320;;;:::o;2521:141::-;2570:4;2593:3;2585:11;;2616:3;2613:1;2606:14;2650:4;2647:1;2637:18;2629:26;;2521:141;;;:::o;2668:93::-;2705:6;2752:2;2747;2740:5;2736:14;2732:23;2722:33;;2668:93;;;:::o;2767:107::-;2811:8;2861:5;2855:4;2851:16;2830:37;;2767:107;;;;:::o;2880:393::-;2949:6;2999:1;2987:10;2983:18;3022:97;3052:66;3041:9;3022:97;:::i;:::-;3140:39;3170:8;3159:9;3140:39;:::i;:::-;3128:51;;3212:4;3208:9;3201:5;3197:21;3188:30;;3261:4;3251:8;3247:19;3240:5;3237:30;3227:40;;2956:317;;2880:393;;;;;:::o;3279:60::-;3307:3;3328:5;3321:12;;3279:60;;;:::o;3345:142::-;3395:9;3428:53;3446:34;3455:24;3473:5;3455:24;:::i;:::-;3446:34;:::i;:::-;3428:53;:::i;:::-;3415:66;;3345:142;;;:::o;3493:75::-;3536:3;3557:5;3550:12;;3493:75;;;:::o;3574:269::-;3684:39;3715:7;3684:39;:::i;:::-;3745:91;3794:41;3818:16;3794:41;:::i;:::-;3786:6;3779:4;3773:11;3745:91;:::i;:::-;3739:4;3732:105;3650:193;3574:269;;;:::o;3849:73::-;3894:3;3849:73;:::o;3928:189::-;4005:32;;:::i;:::-;4046:65;4104:6;4096;4090:4;4046:65;:::i;:::-;3981:136;3928:189;;:::o;4123:186::-;4183:120;4200:3;4193:5;4190:14;4183:120;;;4254:39;4291:1;4284:5;4254:39;:::i;:::-;4227:1;4220:5;4216:13;4207:22;;4183:120;;;4123:186;;:::o;4315:543::-;4416:2;4411:3;4408:11;4405:446;;;4450:38;4482:5;4450:38;:::i;:::-;4534:29;4552:10;4534:29;:::i;:::-;4524:8;4520:44;4717:2;4705:10;4702:18;4699:49;;;4738:8;4723:23;;4699:49;4761:80;4817:22;4835:3;4817:22;:::i;:::-;4807:8;4803:37;4790:11;4761:80;:::i;:::-;4420:431;;4405:446;4315:543;;;:::o;4864:117::-;4918:8;4968:5;4962:4;4958:16;4937:37;;4864:117;;;;:::o;4987:169::-;5031:6;5064:51;5112:1;5108:6;5100:5;5097:1;5093:13;5064:51;:::i;:::-;5060:56;5145:4;5139;5135:15;5125:25;;5038:118;4987:169;;;;:::o;5161:295::-;5237:4;5383:29;5408:3;5402:4;5383:29;:::i;:::-;5375:37;;5445:3;5442:1;5438:11;5432:4;5429:21;5421:29;;5161:295;;;;:::o;5461:1395::-;5578:37;5611:3;5578:37;:::i;:::-;5680:18;5672:6;5669:30;5666:56;;;5702:18;;:::i;:::-;5666:56;5746:38;5778:4;5772:11;5746:38;:::i;:::-;5831:67;5891:6;5883;5877:4;5831:67;:::i;:::-;5925:1;5949:4;5936:17;;5981:2;5973:6;5970:14;5998:1;5993:618;;;;6655:1;6672:6;6669:77;;;6721:9;6716:3;6712:19;6706:26;6697:35;;6669:77;6772:67;6832:6;6825:5;6772:67;:::i;:::-;6766:4;6759:81;6628:222;5963:887;;5993:618;6045:4;6041:9;6033:6;6029:22;6079:37;6111:4;6079:37;:::i;:::-;6138:1;6152:208;6166:7;6163:1;6160:14;6152:208;;;6245:9;6240:3;6236:19;6230:26;6222:6;6215:42;6296:1;6288:6;6284:14;6274:24;;6343:2;6332:9;6328:18;6315:31;;6189:4;6186:1;6182:12;6177:17;;6152:208;;;6388:6;6379:7;6376:19;6373:179;;;6446:9;6441:3;6437:19;6431:26;6489:48;6531:4;6523:6;6519:17;6508:9;6489:48;:::i;:::-;6481:6;6474:64;6396:156;6373:179;6598:1;6594;6586:6;6582:14;6578:22;6572:4;6565:36;6000:611;;;5963:887;;5553:1303;;;5461:1395;;:::o;862:10838:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_callOptionalReturn_726": {
									"entryPoint": 5889,
									"id": 726,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 5430,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_earned_2100": {
									"entryPoint": 4744,
									"id": 2100,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_lastTimeRewardApplicable_2045": {
									"entryPoint": 5261,
									"id": 2045,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1117": {
									"entryPoint": 6089,
									"id": 1117,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_273": {
									"entryPoint": 5421,
									"id": 273,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_265": {
									"entryPoint": 5002,
									"id": 265,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_176": {
									"entryPoint": 5081,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1104": {
									"entryPoint": 6478,
									"id": 1104,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_rewardPerToken_2073": {
									"entryPoint": 5155,
									"id": 2073,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 5556,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@approveRequiredMethods_1568": {
									"entryPoint": 3339,
									"id": 1568,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOf_2122": {
									"entryPoint": 2240,
									"id": 2122,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@claim_1894": {
									"entryPoint": 1348,
									"id": 1894,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@earned_2155": {
									"entryPoint": 1277,
									"id": 2155,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@functionCallWithValue_929": {
									"entryPoint": 6121,
									"id": 929,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_865": {
									"entryPoint": 6097,
									"id": 865,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@fund_1994": {
									"entryPoint": 3667,
									"id": 1994,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getRewardForDuration_2166": {
									"entryPoint": 1319,
									"id": 2166,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_793": {
									"entryPoint": 6443,
									"id": 793,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isUserApproved_2179": {
									"entryPoint": 1906,
									"id": 2179,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastTimeRewardApplicable_2132": {
									"entryPoint": 2377,
									"id": 2132,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastUpdateTime_1587": {
									"entryPoint": 3661,
									"id": 1587,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_40": {
									"entryPoint": 3298,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_164": {
									"entryPoint": 2002,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@periodFinish_1580": {
									"entryPoint": 4607,
									"id": 1580,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@recoverERC20_2030": {
									"entryPoint": 3020,
									"id": 2030,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@redelegateTokensMultiple_1848": {
									"entryPoint": 2024,
									"id": 1848,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@redelegateTokens_1792": {
									"entryPoint": 2392,
									"id": 1792,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 2313,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerTokenStored_1589": {
									"entryPoint": 4601,
									"id": 1589,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerToken_2142": {
									"entryPoint": 4548,
									"id": 2142,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@rewardRate_1582": {
									"entryPoint": 2371,
									"id": 1582,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsDuration_1585": {
									"entryPoint": 1342,
									"id": 1585,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardsToken_1578": {
									"entryPoint": 4563,
									"id": 1578,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_1597": {
									"entryPoint": 1295,
									"id": 1597,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_459": {
									"entryPoint": 5752,
									"id": 459,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_432": {
									"entryPoint": 5287,
									"id": 432,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setRewardsDuration_1733": {
									"entryPoint": 4415,
									"id": 1733,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakingToken_1575": {
									"entryPoint": 2333,
									"id": 1575,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupplyLocked_2109": {
									"entryPoint": 1992,
									"id": 2109,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 4613,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userRewardPerTokenPaid_1593": {
									"entryPoint": 3274,
									"id": 1593,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1060": {
									"entryPoint": 6326,
									"id": 1060,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7198,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7467,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 7086,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9533,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int64_fromMemory": {
									"entryPoint": 8825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 7152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 9893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int64_fromMemory": {
									"entryPoint": 8846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256": {
									"entryPoint": 7907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr": {
									"entryPoint": 9299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_string_storage_$dyn_storage_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$363_to_t_address_fromStack": {
									"entryPoint": 7865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int64_to_t_int64_fromStack": {
									"entryPoint": 8059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_storage_to_t_string_memory_ptr": {
									"entryPoint": 9167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4b3d2aaf3158ed749e6ea5cd490dd314d6a9f8bba4f79ecc1e5c44388ee47d72_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10429,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 8719,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8943,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_array$_t_string_storage_$dyn_storage__to_t_address_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9448,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$363__to_t_address__fromStack_reversed": {
									"entryPoint": 7880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int64__to_t_int64__fromStack_reversed": {
									"entryPoint": 8074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4b3d2aaf3158ed749e6ea5cd490dd314d6a9f8bba4f79ecc1e5c44388ee47d72__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6941,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6558,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 7022,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_string_storage_$dyn_storage": {
									"entryPoint": 9012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_string_storage_$dyn_storage": {
									"entryPoint": 8984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 8609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_string_storage_$dyn_storage": {
									"entryPoint": 9319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 9129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int64": {
									"entryPoint": 8046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$363_to_t_address": {
									"entryPoint": 7847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7071,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8620,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 7785,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8252,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9745,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9033,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8490,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6845,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6823,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7012,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7017,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6573,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6568,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 9959,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786": {
									"entryPoint": 8382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4b3d2aaf3158ed749e6ea5cd490dd314d6a9f8bba4f79ecc1e5c44388ee47d72": {
									"entryPoint": 9599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 10630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 10213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 10321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 10870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 10484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 10105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int64": {
									"entryPoint": 8802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:32932:15",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:15"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:15",
														"type": ""
													}
												],
												"src": "7:75:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:15"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:15"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:15",
														"type": ""
													}
												],
												"src": "334:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:15",
														"type": ""
													}
												],
												"src": "466:96:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:15"
															},
															"nodeType": "YulIf",
															"src": "621:63:15"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:15",
														"type": ""
													}
												],
												"src": "568:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:15"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:15",
														"type": ""
													}
												],
												"src": "696:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:15"
															},
															"nodeType": "YulIf",
															"src": "917:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:15",
														"type": ""
													}
												],
												"src": "841:329:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:15",
														"type": ""
													}
												],
												"src": "1176:77:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:15"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:15",
														"type": ""
													}
												],
												"src": "1259:118:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:15",
														"type": ""
													}
												],
												"src": "1383:222:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1653:48:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1663:32:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1688:5:15"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1681:6:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:13:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:21:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1663:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1635:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1645:7:15",
														"type": ""
													}
												],
												"src": "1611:90:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1766:50:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1783:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1803:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1788:14:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1788:21:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1776:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1776:34:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1776:34:15"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1754:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1761:3:15",
														"type": ""
													}
												],
												"src": "1707:109:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1914:118:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1924:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1936:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1947:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1932:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1932:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1924:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1998:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2011:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2022:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2007:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2007:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1960:37:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "1960:65:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1960:65:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1886:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1898:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1909:4:15",
														"type": ""
													}
												],
												"src": "1822:210:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2127:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2144:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2147:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2137:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2137:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2137:12:15"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "2038:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2209:54:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2219:38:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2237:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2244:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2233:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2233:14:15"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2253:2:15",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2249:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2249:7:15"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2229:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2229:28:15"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2219:6:15"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2192:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2202:6:15",
														"type": ""
													}
												],
												"src": "2161:102:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2297:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2314:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2317:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2307:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2307:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2411:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2414:4:15",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2404:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2404:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2438:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2428:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2428:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2428:15:15"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2269:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2498:238:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2508:58:15",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2530:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "2560:4:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2538:21:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2538:27:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2526:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2526:40:15"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2512:10:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2677:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2679:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2679:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2679:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2620:10:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2632:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2617:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2617:34:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2656:10:15"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2668:6:15"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2653:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2653:22:15"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2614:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2614:62:15"
															},
															"nodeType": "YulIf",
															"src": "2611:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2715:2:15",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2719:10:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2708:22:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2708:22:15"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2484:6:15",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2492:4:15",
														"type": ""
													}
												],
												"src": "2455:281:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2783:88:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2793:30:15",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2803:18:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2803:20:15"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2793:6:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2852:6:15"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2860:4:15"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2832:19:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "2832:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2832:33:15"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2767:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2776:6:15",
														"type": ""
													}
												],
												"src": "2742:129:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2969:229:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3074:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3076:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3076:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3076:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3046:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3054:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3043:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3043:30:15"
															},
															"nodeType": "YulIf",
															"src": "3040:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3106:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3118:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3126:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3114:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3114:17:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3106:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3168:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3180:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3186:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3176:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3176:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3168:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2953:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2964:4:15",
														"type": ""
													}
												],
												"src": "2877:321:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3293:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3310:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3313:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3303:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3303:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3303:12:15"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "3204:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3416:28:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3433:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3436:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3426:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3426:12:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3426:12:15"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "3327:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3517:241:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3622:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3624:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3624:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3624:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3594:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3602:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3591:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3591:30:15"
															},
															"nodeType": "YulIf",
															"src": "3588:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3654:37:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3684:6:15"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "3662:21:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3662:29:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3654:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3728:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "3740:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3746:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3736:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3736:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3728:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3501:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3512:4:15",
														"type": ""
													}
												],
												"src": "3450:308:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3828:82:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3851:3:15"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3856:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3861:6:15"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3838:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3838:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3838:30:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3888:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3893:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3884:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3884:16:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3902:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3877:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "3877:27:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3877:27:15"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3810:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3815:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3820:6:15",
														"type": ""
													}
												],
												"src": "3764:146:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4000:341:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4010:75:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4077:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4035:41:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4035:49:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4019:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4019:66:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4010:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4101:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4108:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4094:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4094:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4094:21:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4124:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4139:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4146:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4135:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4135:16:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4128:3:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4189:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "4191:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4191:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4191:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4170:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4175:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4166:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4166:16:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4184:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4163:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4163:25:15"
															},
															"nodeType": "YulIf",
															"src": "4160:112:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4318:3:15"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4323:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4328:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "4281:36:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4281:54:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4281:54:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3973:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3978:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3986:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3994:5:15",
														"type": ""
													}
												],
												"src": "3916:425:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4423:278:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4472:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4474:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4474:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4474:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4451:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4459:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4447:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4447:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4466:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4443:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4443:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4436:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4436:35:15"
															},
															"nodeType": "YulIf",
															"src": "4433:122:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4564:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4591:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4578:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4578:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4568:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4607:88:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4668:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4676:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4664:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4664:17:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4683:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4691:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4616:47:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4616:79:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4607:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4401:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4409:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4417:5:15",
														"type": ""
													}
												],
												"src": "4361:340:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4835:833:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4845:100:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4937:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "4870:66:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4870:74:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4854:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4854:91:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4845:5:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4954:16:15",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "4965:5:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4958:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4987:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4994:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4980:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "4980:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4980:21:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5010:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "5021:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5028:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5017:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5017:16:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5010:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5043:44:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5061:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5073:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5081:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5069:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5069:17:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5057:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5057:30:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5047:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5115:103:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "5129:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5129:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5129:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5102:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5110:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5099:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5099:15:15"
															},
															"nodeType": "YulIf",
															"src": "5096:122:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5303:359:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5318:36:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5350:3:15"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "5337:12:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5337:17:15"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nodeType": "YulTypedName",
																				"src": "5322:11:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5406:83:15",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																							"nodeType": "YulIdentifier",
																							"src": "5408:77:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5408:79:15"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5408:79:15"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nodeType": "YulIdentifier",
																					"src": "5373:11:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5386:18:15",
																					"type": "",
																					"value": "0xffffffffffffffff"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "5370:2:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5370:35:15"
																		},
																		"nodeType": "YulIf",
																		"src": "5367:122:15"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5502:42:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "offset",
																					"nodeType": "YulIdentifier",
																					"src": "5524:6:15"
																				},
																				{
																					"name": "innerOffset",
																					"nodeType": "YulIdentifier",
																					"src": "5532:11:15"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5520:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5520:24:15"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "5506:10:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5565:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "5601:10:15"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "5613:3:15"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_string_memory_ptr",
																						"nodeType": "YulIdentifier",
																						"src": "5570:30:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5570:47:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5558:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5558:60:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5558:60:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5631:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5642:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5647:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5638:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5638:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5631:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5256:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5261:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5253:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:15:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5269:25:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5271:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5282:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5287:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5278:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5278:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5271:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5231:21:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5233:17:15",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "5244:6:15"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "5237:3:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "5227:435:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4805:6:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4813:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4821:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4829:5:15",
														"type": ""
													}
												],
												"src": "4723:945:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5777:303:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5826:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "5828:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5828:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5828:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5805:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5813:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5801:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5801:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "5820:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5797:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5797:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5790:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5790:35:15"
															},
															"nodeType": "YulIf",
															"src": "5787:122:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5918:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5945:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5932:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5932:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5922:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5961:113:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6047:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6055:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6043:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6043:17:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6062:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6070:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5970:72:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "5970:104:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "5961:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5755:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5763:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "5771:5:15",
														"type": ""
													}
												],
												"src": "5690:390:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6168:229:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6273:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6275:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6275:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6275:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6245:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6253:18:15",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6242:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6242:30:15"
															},
															"nodeType": "YulIf",
															"src": "6239:56:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6305:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6317:6:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6325:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6313:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6313:17:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6305:4:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6367:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6379:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6385:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6375:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6375:15:15"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6367:4:15"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6152:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6163:4:15",
														"type": ""
													}
												],
												"src": "6086:311:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6446:79:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6503:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6512:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6515:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6505:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6505:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6505:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6469:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6494:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6476:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6476:24:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6466:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6466:35:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6459:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6459:43:15"
															},
															"nodeType": "YulIf",
															"src": "6456:63:15"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6439:5:15",
														"type": ""
													}
												],
												"src": "6403:122:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6583:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6593:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6615:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6602:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6602:20:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6593:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6658:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6631:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6631:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6631:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6561:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6569:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6577:5:15",
														"type": ""
													}
												],
												"src": "6531:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6795:608:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6805:90:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6887:6:15"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6830:56:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6830:64:15"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6814:15:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6814:81:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "6805:5:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6904:16:15",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "6915:5:15"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6908:3:15",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6937:5:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6944:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6930:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6930:21:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6930:21:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6960:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "6971:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6978:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6967:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "6967:16:15"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6960:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6993:44:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7011:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7023:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7031:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7019:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7019:17:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7007:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7007:30:15"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6997:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7065:103:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "7079:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7079:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7079:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7052:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7060:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7049:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7049:15:15"
															},
															"nodeType": "YulIf",
															"src": "7046:122:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7253:144:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7268:21:15",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "7286:3:15"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "7272:10:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7310:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "7336:10:15"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "7348:3:15"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "7315:20:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7315:37:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7303:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7303:50:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7303:50:15"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7366:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7377:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7382:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7373:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7373:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7366:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7206:3:15"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7211:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7203:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7203:15:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7219:25:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7221:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "7232:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7237:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7228:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7228:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7221:3:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7181:21:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7183:17:15",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "7194:6:15"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "7187:3:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7177:220:15"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6765:6:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6773:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6781:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6789:5:15",
														"type": ""
													}
												],
												"src": "6693:710:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7503:293:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7552:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "7554:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7554:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7554:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7531:6:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7539:4:15",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7527:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7527:17:15"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7546:3:15"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7523:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7523:27:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7516:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7516:35:15"
															},
															"nodeType": "YulIf",
															"src": "7513:122:15"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7644:34:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7671:6:15"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7658:12:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7658:20:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7648:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7687:103:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7763:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7771:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7759:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7759:17:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7778:6:15"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7786:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7696:62:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "7696:94:15"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7687:5:15"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7481:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7489:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7497:5:15",
														"type": ""
													}
												],
												"src": "7426:370:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7997:1094:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8043:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8045:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8045:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8045:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8018:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8027:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8014:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8014:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8039:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8010:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "8010:32:15"
															},
															"nodeType": "YulIf",
															"src": "8007:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "8136:312:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8151:45:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8182:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8193:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8178:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8178:17:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8165:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8165:31:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8155:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8243:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8245:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8245:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8245:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8215:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8223:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8212:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8212:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "8209:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8340:98:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8410:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8421:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8406:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8406:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8430:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8350:55:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8350:88:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8340:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8458:313:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8473:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8504:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8515:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8500:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8500:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8487:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8487:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8477:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8566:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8568:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8568:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8568:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8538:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8546:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8535:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8535:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "8532:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8663:98:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8733:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8744:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8729:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8729:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8753:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8673:55:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8673:88:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8663:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8781:303:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8796:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8827:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8838:2:15",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8823:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8823:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8810:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8810:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8800:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8889:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8891:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8891:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8891:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8861:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8869:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8858:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8858:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "8855:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8986:88:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9046:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9057:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9042:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9042:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9066:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8996:45:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8996:78:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8986:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7951:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7962:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7974:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7982:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7990:6:15",
														"type": ""
													}
												],
												"src": "7802:1289:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9129:28:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9139:12:15",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9146:5:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9139:3:15"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9115:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9125:3:15",
														"type": ""
													}
												],
												"src": "9097:60:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9223:82:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9233:66:15",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9291:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "9273:17:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9273:24:15"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "9264:8:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9264:34:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9246:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9246:53:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9233:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9203:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9213:9:15",
														"type": ""
													}
												],
												"src": "9163:142:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9371:66:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9381:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9425:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9394:30:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9394:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9381:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9351:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9361:9:15",
														"type": ""
													}
												],
												"src": "9311:126:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9517:66:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9527:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9571:5:15"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "9540:30:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9540:37:15"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9527:9:15"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$363_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9497:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9507:9:15",
														"type": ""
													}
												],
												"src": "9443:140:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9668:80:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9685:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9735:5:15"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$363_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9690:44:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9690:51:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9678:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9678:64:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9678:64:15"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$363_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9656:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9663:3:15",
														"type": ""
													}
												],
												"src": "9589:159:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9866:138:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9876:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9888:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9899:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9884:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9884:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9876:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9970:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9983:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9994:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9979:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9979:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$363_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9912:57:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "9912:85:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9912:85:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$363__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9838:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9850:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9861:4:15",
														"type": ""
													}
												],
												"src": "9754:250:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10130:859:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10176:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10178:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10178:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10178:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10151:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10160:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10147:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10147:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10172:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10143:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "10143:32:15"
															},
															"nodeType": "YulIf",
															"src": "10140:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "10269:287:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10284:45:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10315:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10326:1:15",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10311:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10311:17:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10298:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10298:31:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10288:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10376:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "10378:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10378:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10378:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10348:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10356:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10345:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10345:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "10342:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10473:73:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10518:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10529:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10514:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10514:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10538:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10483:30:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10483:63:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10473:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10566:288:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10581:46:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10612:9:15"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10623:2:15",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10608:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10608:18:15"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10595:12:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10595:32:15"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10585:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10674:83:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "10676:77:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10676:79:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10676:79:15"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10646:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10654:18:15",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10643:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10643:30:15"
																	},
																	"nodeType": "YulIf",
																	"src": "10640:117:15"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10771:73:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10816:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10827:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10812:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10812:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10836:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10781:30:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10781:63:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10771:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10864:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10879:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10893:2:15",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10883:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10909:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10944:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10955:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10940:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10940:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10964:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10919:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10919:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "10909:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10084:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10095:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10107:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10115:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10123:6:15",
														"type": ""
													}
												],
												"src": "10010:979:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11038:47:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11048:31:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11070:1:15",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11073:5:15"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "11059:10:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11059:20:15"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11048:7:15"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11020:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11030:7:15",
														"type": ""
													}
												],
												"src": "10995:90:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11152:51:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11169:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11190:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int64",
																			"nodeType": "YulIdentifier",
																			"src": "11174:15:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11174:22:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11162:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11162:35:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11162:35:15"
														}
													]
												},
												"name": "abi_encode_t_int64_to_t_int64_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11140:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11147:3:15",
														"type": ""
													}
												],
												"src": "11091:112:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11303:120:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11313:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11325:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11336:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11321:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11321:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11313:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11389:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11402:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11413:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11398:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11398:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int64_to_t_int64_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11349:39:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11349:67:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11349:67:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_int64__to_t_int64__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11275:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11287:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11298:4:15",
														"type": ""
													}
												],
												"src": "11209:214:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11512:391:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11558:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11560:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11560:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11560:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11533:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11542:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11529:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11529:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11554:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11525:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11525:32:15"
															},
															"nodeType": "YulIf",
															"src": "11522:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "11651:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11666:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11680:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11670:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11695:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11730:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11741:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11726:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11726:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11750:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11705:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11705:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11695:6:15"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11778:118:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11793:16:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11807:2:15",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11797:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11823:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11858:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11869:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11854:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11854:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11878:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "11833:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11833:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "11823:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11474:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11485:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11497:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11505:6:15",
														"type": ""
													}
												],
												"src": "11429:474:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11974:53:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11991:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12014:5:15"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11996:17:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11996:24:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11984:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "11984:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11984:37:15"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11962:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11969:3:15",
														"type": ""
													}
												],
												"src": "11909:118:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12131:124:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12141:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12153:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12164:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12149:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12149:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12141:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12221:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12234:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12245:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12230:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12230:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12177:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12177:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12177:71:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12103:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12115:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12126:4:15",
														"type": ""
													}
												],
												"src": "12033:222:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12327:263:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12373:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12375:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12375:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12375:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12348:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12357:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12344:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12344:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12369:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12340:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12340:32:15"
															},
															"nodeType": "YulIf",
															"src": "12337:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "12466:117:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12481:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12495:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12485:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12510:63:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12545:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12556:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12541:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12541:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12565:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12520:20:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12520:53:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12510:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12297:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12308:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12320:6:15",
														"type": ""
													}
												],
												"src": "12261:329:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12624:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12641:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12644:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12634:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12634:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12634:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12738:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12741:4:15",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12731:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12731:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12731:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12762:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12765:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12755:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12755:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12755:15:15"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12596:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12830:362:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12840:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12863:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12845:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12845:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12840:1:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12874:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12897:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12879:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12879:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12874:1:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12908:28:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12931:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12934:1:15"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12927:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12927:9:15"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "12912:11:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12945:41:15",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "12974:11:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12956:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "12956:30:15"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12945:7:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13163:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13165:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13165:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13165:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13096:1:15"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13089:6:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13089:9:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13119:1:15"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "13126:7:15"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "13135:1:15"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "13122:3:15"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13122:15:15"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "13116:2:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13116:22:15"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "13069:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13069:83:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13049:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13049:113:15"
															},
															"nodeType": "YulIf",
															"src": "13046:139:15"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12813:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12816:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12822:7:15",
														"type": ""
													}
												],
												"src": "12782:410:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13294:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13311:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13316:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13304:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13304:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13304:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13332:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13351:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13356:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13347:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13347:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "13332:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13266:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13271:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "13282:11:15",
														"type": ""
													}
												],
												"src": "13198:169:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13479:72:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13501:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13509:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13497:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13497:14:15"
																	},
																	{
																		"hexValue": "496e70757420617272617973206c656e677468206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13513:30:15",
																		"type": "",
																		"value": "Input arrays length mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13490:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13490:54:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13490:54:15"
														}
													]
												},
												"name": "store_literal_in_memory_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13471:6:15",
														"type": ""
													}
												],
												"src": "13373:178:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13703:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13713:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13779:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13784:2:15",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13720:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13720:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13713:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13885:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786",
																	"nodeType": "YulIdentifier",
																	"src": "13796:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13796:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13796:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13898:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13909:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13914:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13905:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "13905:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13898:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13691:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13699:3:15",
														"type": ""
													}
												],
												"src": "13557:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14100:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14110:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14122:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14133:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14118:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14118:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14110:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14157:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14168:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14153:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14153:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14176:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14182:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14172:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14172:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14146:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14146:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14146:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14202:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14336:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14210:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14210:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14202:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14080:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14095:4:15",
														"type": ""
													}
												],
												"src": "13929:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14382:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14399:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14402:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14392:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14392:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14392:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14496:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14499:4:15",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14489:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14489:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14489:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14520:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14523:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14513:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14513:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14513:15:15"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "14354:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14583:190:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14593:33:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14620:5:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14602:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14602:24:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "14593:5:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14716:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14718:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14718:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14718:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14641:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14648:66:15",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14638:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14638:77:15"
															},
															"nodeType": "YulIf",
															"src": "14635:103:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14747:20:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14758:5:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14765:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14754:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14754:13:15"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14747:3:15"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14569:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14579:3:15",
														"type": ""
													}
												],
												"src": "14540:233:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14838:40:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14849:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14865:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14859:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14859:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "14849:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14821:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14831:6:15",
														"type": ""
													}
												],
												"src": "14779:99:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14946:184:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14956:10:15",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14965:1:15",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "14960:1:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15025:63:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "15050:3:15"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "15055:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15046:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15046:11:15"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "15069:3:15"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "15074:1:15"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "15065:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15065:11:15"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "15059:5:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15059:18:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15039:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15039:39:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15039:39:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "14986:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14989:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14983:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "14983:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14997:19:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14999:15:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "15008:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15011:2:15",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15004:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15004:10:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "14999:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14979:3:15",
																"statements": []
															},
															"src": "14975:113:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "15108:3:15"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15113:6:15"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15104:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15104:16:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15122:1:15",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15097:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15097:27:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15097:27:15"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "14928:3:15",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "14933:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14938:6:15",
														"type": ""
													}
												],
												"src": "14884:246:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15228:285:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15238:53:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15285:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15252:32:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15252:39:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15242:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15300:78:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15366:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15371:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15307:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15307:71:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15300:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15426:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15433:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15422:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15422:16:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15440:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15445:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "15387:34:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15387:65:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15387:65:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15461:46:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15472:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15499:6:15"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "15477:21:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15477:29:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15468:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15468:39:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15461:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15209:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15216:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15224:3:15",
														"type": ""
													}
												],
												"src": "15136:377:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15741:513:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15751:27:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15763:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15774:3:15",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15759:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15759:19:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15751:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15832:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15845:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15856:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15841:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15841:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15788:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15788:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15788:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15880:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15891:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15876:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15876:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15900:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15906:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15896:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15896:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15869:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15869:48:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15869:48:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15926:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15998:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16007:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15934:63:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "15934:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15926:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16033:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16044:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16029:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16029:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16053:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16059:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16049:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16049:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16022:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16022:48:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16022:48:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16079:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16151:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16160:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16087:63:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16087:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16079:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "16219:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16232:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16243:2:15",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16228:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16228:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16175:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16175:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16175:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15689:9:15",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15701:6:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15709:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15717:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15725:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15736:4:15",
														"type": ""
													}
												],
												"src": "15519:735:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16301:77:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16356:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16365:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16368:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16358:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16358:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16358:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16324:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "16347:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int64",
																					"nodeType": "YulIdentifier",
																					"src": "16331:15:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16331:22:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "16321:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16321:33:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16314:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16314:41:15"
															},
															"nodeType": "YulIf",
															"src": "16311:61:15"
														}
													]
												},
												"name": "validator_revert_t_int64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16294:5:15",
														"type": ""
													}
												],
												"src": "16260:118:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16445:78:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16455:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16470:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16464:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16464:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16455:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16511:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int64",
																	"nodeType": "YulIdentifier",
																	"src": "16486:24:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16486:31:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16486:31:15"
														}
													]
												},
												"name": "abi_decode_t_int64_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16423:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16431:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16439:5:15",
														"type": ""
													}
												],
												"src": "16384:139:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16604:272:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16650:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16652:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16652:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16652:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16625:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16634:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16621:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16621:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16646:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16617:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16617:32:15"
															},
															"nodeType": "YulIf",
															"src": "16614:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "16743:126:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "16758:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16772:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "16762:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "16787:72:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "16831:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16842:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16827:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16827:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16851:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int64_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "16797:29:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16797:62:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "16787:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int64_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16574:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16585:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16597:6:15",
														"type": ""
													}
												],
												"src": "16529:347:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16926:147:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16936:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16959:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16941:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16941:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "16936:1:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16970:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16993:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16975:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "16975:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "16970:1:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17004:16:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17015:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17018:1:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17011:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17011:9:15"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "17004:3:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17044:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17046:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17046:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17046:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17036:1:15"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "17039:3:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17033:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17033:10:15"
															},
															"nodeType": "YulIf",
															"src": "17030:36:15"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16913:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16916:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "16922:3:15",
														"type": ""
													}
												],
												"src": "16882:191:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17205:206:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17215:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17227:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17238:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17223:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17223:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17215:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17295:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17308:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17319:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17304:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17304:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17251:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17251:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17251:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17376:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17389:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17400:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17385:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17385:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17332:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17332:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17332:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17169:9:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17181:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17189:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17200:4:15",
														"type": ""
													}
												],
												"src": "17079:332:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17495:40:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17506:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17522:5:15"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "17516:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17516:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17506:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_string_storage_$dyn_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17478:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17488:6:15",
														"type": ""
													}
												],
												"src": "17417:118:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17662:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17679:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17684:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17672:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17672:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17672:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17700:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17719:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17724:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17715:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17715:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "17700:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17634:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17639:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "17650:11:15",
														"type": ""
													}
												],
												"src": "17541:194:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17817:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17827:11:15",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "17835:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "17827:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17855:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "17858:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17848:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17848:14:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17848:14:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17871:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17889:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17892:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "17879:9:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17879:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "17871:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_string_storage_$dyn_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "17804:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "17812:4:15",
														"type": ""
													}
												],
												"src": "17741:163:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17938:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17955:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17958:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17948:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "17948:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17948:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18052:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18055:4:15",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18045:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18045:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18045:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18076:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18079:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "18069:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18069:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18069:15:15"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "17910:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18147:269:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18157:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18171:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18177:1:15",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "18167:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18167:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "18157:6:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18188:38:15",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "18218:4:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18224:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18214:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18214:12:15"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "18192:18:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18265:51:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "18279:27:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "18293:6:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18301:4:15",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "18289:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18289:17:15"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18279:6:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "18245:18:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18238:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18238:26:15"
															},
															"nodeType": "YulIf",
															"src": "18235:81:15"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18368:42:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "18382:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18382:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18382:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "18332:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "18355:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18363:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "18352:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18352:14:15"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "18329:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18329:38:15"
															},
															"nodeType": "YulIf",
															"src": "18326:84:15"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18131:4:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18140:6:15",
														"type": ""
													}
												],
												"src": "18096:320:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18508:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18525:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18530:6:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18518:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18518:19:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18518:19:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18546:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18565:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18570:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18561:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18561:14:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18546:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18480:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18485:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18496:11:15",
														"type": ""
													}
												],
												"src": "18422:159:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18641:87:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18651:11:15",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "18659:3:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "18651:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18679:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "18682:3:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18672:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18672:14:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18672:14:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18695:26:15",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18713:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18716:4:15",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "18703:9:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18703:18:15"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "18695:4:15"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "18628:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "18636:4:15",
														"type": ""
													}
												],
												"src": "18587:141:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18837:732:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18847:29:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18870:5:15"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "18864:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18864:12:15"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nodeType": "YulTypedName",
																	"src": "18851:9:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18885:50:15",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "18925:9:15"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "18899:25:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18899:36:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "18889:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "18944:68:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19000:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19005:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "18951:48:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "18951:61:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18944:3:15"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "19061:157:15",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "19114:3:15"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nodeType": "YulIdentifier",
																									"src": "19123:9:15"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "19138:4:15",
																											"type": "",
																											"value": "0xff"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "19134:3:15"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "19134:9:15"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "19119:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "19119:25:15"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "19107:6:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19107:38:15"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "19107:38:15"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "19158:50:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "19169:3:15"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "19178:4:15",
																									"type": "",
																									"value": "0x20"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nodeType": "YulIdentifier",
																													"src": "19198:6:15"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nodeType": "YulIdentifier",
																												"src": "19191:6:15"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "19191:14:15"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "19184:6:15"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "19184:22:15"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nodeType": "YulIdentifier",
																								"src": "19174:3:15"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "19174:33:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "19165:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19165:43:15"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "19158:3:15"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "19054:164:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19059:1:15",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "19234:329:15",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "19279:53:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "19326:5:15"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "19294:31:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19294:38:15"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nodeType": "YulTypedName",
																						"src": "19283:7:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "19345:10:15",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19354:1:15",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "19349:1:15",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "19412:110:15",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nodeType": "YulIdentifier",
																												"src": "19441:3:15"
																											},
																											{
																												"name": "i",
																												"nodeType": "YulIdentifier",
																												"src": "19446:1:15"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "19437:3:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "19437:11:15"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nodeType": "YulIdentifier",
																												"src": "19456:7:15"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nodeType": "YulIdentifier",
																											"src": "19450:5:15"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "19450:14:15"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "19430:6:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19430:35:15"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "19430:35:15"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "19482:26:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nodeType": "YulIdentifier",
																										"src": "19497:7:15"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "19506:1:15",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "19493:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19493:15:15"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nodeType": "YulIdentifier",
																									"src": "19482:7:15"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "19379:1:15"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "19382:6:15"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "19376:2:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19376:13:15"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "19390:21:15",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "19392:17:15",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "19401:1:15"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "19404:4:15",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "19397:3:15"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19397:12:15"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "19392:1:15"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "19372:3:15",
																					"statements": []
																				},
																				"src": "19368:154:15"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "19535:18:15",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "19546:3:15"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "19551:1:15"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "19542:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19542:11:15"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nodeType": "YulIdentifier",
																						"src": "19535:3:15"
																					}
																				]
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "19227:336:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19232:1:15",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nodeType": "YulIdentifier",
																		"src": "19032:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19043:1:15",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19028:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "19028:17:15"
															},
															"nodeType": "YulSwitch",
															"src": "19021:542:15"
														}
													]
												},
												"name": "abi_encode_t_string_storage_to_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18818:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18825:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "18833:3:15",
														"type": ""
													}
												],
												"src": "18758:811:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19672:93:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19682:77:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19747:6:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19755:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_storage_to_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "19696:50:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "19696:63:15"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "19682:10:15"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19645:6:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19653:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "19661:10:15",
														"type": ""
													}
												],
												"src": "19575:190:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19850:38:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19860:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "19872:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19877:4:15",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19868:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "19868:14:15"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "19860:4:15"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_string_storage_$dyn_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "19837:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "19845:4:15",
														"type": ""
													}
												],
												"src": "19771:117:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20060:819:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20070:72:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20136:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_string_storage_$dyn_storage",
																	"nodeType": "YulIdentifier",
																	"src": "20084:51:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "20084:58:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "20074:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20151:103:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20242:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20247:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20158:83:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "20158:96:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20151:3:15"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20263:20:15",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "20280:3:15"
															},
															"variables": [
																{
																	"name": "headStart",
																	"nodeType": "YulTypedName",
																	"src": "20267:9:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20292:39:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20308:3:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "20317:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20325:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "20313:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20313:17:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20304:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "20304:27:15"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "20296:4:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20340:75:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20409:5:15"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_string_storage_$dyn_storage",
																	"nodeType": "YulIdentifier",
																	"src": "20355:53:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "20355:60:15"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "20344:7:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20424:21:15",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "20438:7:15"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "20428:6:15",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20514:320:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "20535:3:15"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "20544:4:15"
																						},
																						{
																							"name": "headStart",
																							"nodeType": "YulIdentifier",
																							"src": "20550:9:15"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "20540:3:15"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20540:20:15"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20528:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20528:33:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20528:33:15"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "20574:27:15",
																		"value": {
																			"name": "srcPtr",
																			"nodeType": "YulIdentifier",
																			"src": "20595:6:15"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "20578:13:15",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "20614:89:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "20683:13:15"
																				},
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "20698:4:15"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "20622:60:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20622:81:15"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20614:4:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "20716:74:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "20783:6:15"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_string_storage_$dyn_storage",
																				"nodeType": "YulIdentifier",
																				"src": "20726:56:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20726:64:15"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20716:6:15"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "20803:21:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "20814:3:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20819:4:15",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "20810:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20810:14:15"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "20803:3:15"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "20476:1:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20479:6:15"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20473:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "20473:13:15"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "20487:18:15",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "20489:14:15",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "20498:1:15"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20501:1:15",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "20494:3:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20494:9:15"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "20489:1:15"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "20458:14:15",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "20460:10:15",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "20469:1:15",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "20464:1:15",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "20454:380:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20843:11:15",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "20850:4:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20843:3:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20863:10:15",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "20870:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20863:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_string_storage_$dyn_storage_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20039:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20046:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20055:3:15",
														"type": ""
													}
												],
												"src": "19922:957:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21103:403:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21113:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21125:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21136:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21121:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21121:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21113:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21193:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21206:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21217:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21202:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21202:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21149:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21149:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21149:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21274:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21287:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21298:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21283:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21283:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21230:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21230:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21230:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21323:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21334:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21319:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21319:18:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21343:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21349:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21339:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21339:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21312:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21312:48:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21312:48:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21369:130:15",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "21485:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21494:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_string_storage_$dyn_storage_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21377:107:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21377:122:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21369:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_array$_t_string_storage_$dyn_storage__to_t_address_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21059:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "21071:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21079:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21087:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21098:4:15",
														"type": ""
													}
												],
												"src": "20885:621:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21552:76:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21606:16:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21615:1:15",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21618:1:15",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21608:6:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21608:12:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21608:12:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "21575:5:15"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "21597:5:15"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "21582:14:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21582:21:15"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "21572:2:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21572:32:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21565:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21565:40:15"
															},
															"nodeType": "YulIf",
															"src": "21562:60:15"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21545:5:15",
														"type": ""
													}
												],
												"src": "21512:116:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21694:77:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21704:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "21719:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21713:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21713:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "21704:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21759:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "21735:23:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21735:30:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21735:30:15"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "21672:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21680:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21688:5:15",
														"type": ""
													}
												],
												"src": "21634:137:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21851:271:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21897:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "21899:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21899:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21899:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21872:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21881:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21868:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21868:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21893:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "21864:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "21864:32:15"
															},
															"nodeType": "YulIf",
															"src": "21861:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "21990:125:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "22005:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22019:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "22009:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "22034:71:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "22077:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "22088:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "22073:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22073:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "22097:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "22044:28:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22044:61:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "22034:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21821:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "21832:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21844:6:15",
														"type": ""
													}
												],
												"src": "21777:345:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22234:114:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22256:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22264:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22252:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22252:14:15"
																	},
																	{
																		"hexValue": "4661696c656420746f20617070726f76652064656c6567617465206d6574686f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22268:34:15",
																		"type": "",
																		"value": "Failed to approve delegate metho"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22245:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22245:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22245:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22324:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22332:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22320:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22320:15:15"
																	},
																	{
																		"hexValue": "64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22337:3:15",
																		"type": "",
																		"value": "d"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22313:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22313:28:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22313:28:15"
														}
													]
												},
												"name": "store_literal_in_memory_4b3d2aaf3158ed749e6ea5cd490dd314d6a9f8bba4f79ecc1e5c44388ee47d72",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22226:6:15",
														"type": ""
													}
												],
												"src": "22128:220:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22500:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22510:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22576:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22581:2:15",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22517:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22517:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22510:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22682:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4b3d2aaf3158ed749e6ea5cd490dd314d6a9f8bba4f79ecc1e5c44388ee47d72",
																	"nodeType": "YulIdentifier",
																	"src": "22593:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22593:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22593:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22695:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22706:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22711:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22702:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22702:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22695:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4b3d2aaf3158ed749e6ea5cd490dd314d6a9f8bba4f79ecc1e5c44388ee47d72_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22488:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22496:3:15",
														"type": ""
													}
												],
												"src": "22354:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22897:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22907:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22919:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22930:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22915:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22915:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22907:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22954:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22965:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22950:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22950:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22973:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22979:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22969:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22969:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22943:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "22943:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22943:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22999:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23133:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4b3d2aaf3158ed749e6ea5cd490dd314d6a9f8bba4f79ecc1e5c44388ee47d72_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23007:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23007:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22999:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4b3d2aaf3158ed749e6ea5cd490dd314d6a9f8bba4f79ecc1e5c44388ee47d72__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22877:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22892:4:15",
														"type": ""
													}
												],
												"src": "22726:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23179:152:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23196:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23199:77:15",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23189:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23189:88:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23189:88:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23293:1:15",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23296:4:15",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23286:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23286:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23286:15:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23317:1:15",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23320:4:15",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "23310:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23310:15:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23310:15:15"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "23151:180:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23379:143:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23389:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23412:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23394:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23394:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "23389:1:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23423:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23446:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23428:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23428:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "23423:1:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23470:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "23472:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23472:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23472:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23467:1:15"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "23460:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23460:9:15"
															},
															"nodeType": "YulIf",
															"src": "23457:35:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23502:14:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23511:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23514:1:15"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "23507:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23507:9:15"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "23502:1:15"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "23368:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "23371:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "23377:1:15",
														"type": ""
													}
												],
												"src": "23337:185:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23573:149:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23583:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23606:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23588:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23588:20:15"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "23583:1:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23617:25:15",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23640:1:15"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23622:17:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23622:20:15"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "23617:1:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23651:17:15",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23663:1:15"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23666:1:15"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "23659:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23659:9:15"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "23651:4:15"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23693:22:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "23695:16:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23695:18:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23695:18:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "23684:4:15"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23690:1:15"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "23681:2:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23681:11:15"
															},
															"nodeType": "YulIf",
															"src": "23678:37:15"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "23559:1:15",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "23562:1:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "23568:4:15",
														"type": ""
													}
												],
												"src": "23528:194:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23791:80:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23801:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "23816:6:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23810:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23810:13:15"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "23801:5:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23859:5:15"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "23832:26:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23832:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23832:33:15"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "23769:6:15",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23777:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23785:5:15",
														"type": ""
													}
												],
												"src": "23728:143:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23954:274:15",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24000:83:15",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "24002:77:15"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24002:79:15"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24002:79:15"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "23975:7:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23984:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23971:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23971:23:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23996:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "23967:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "23967:32:15"
															},
															"nodeType": "YulIf",
															"src": "23964:119:15"
														},
														{
															"nodeType": "YulBlock",
															"src": "24093:128:15",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "24108:15:15",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24122:1:15",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "24112:6:15",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "24137:74:15",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "24183:9:15"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "24194:6:15"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "24179:3:15"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24179:22:15"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "24203:7:15"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "24147:31:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24147:64:15"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "24137:6:15"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23924:9:15",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "23935:7:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23947:6:15",
														"type": ""
													}
												],
												"src": "23877:351:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24340:119:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24362:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24370:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24358:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24358:14:15"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24374:34:15",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24351:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24351:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24351:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24430:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24438:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24426:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24426:15:15"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24443:8:15",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24419:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24419:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24419:33:15"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24332:6:15",
														"type": ""
													}
												],
												"src": "24234:225:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24611:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24621:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24687:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24692:2:15",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24628:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24628:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24621:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24793:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "24704:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24704:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24704:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24806:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24817:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24822:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24813:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "24813:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24806:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24599:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24607:3:15",
														"type": ""
													}
												],
												"src": "24465:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25008:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25018:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25030:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25041:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25026:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25026:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25018:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25065:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25076:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25061:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25061:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25084:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25090:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25080:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25080:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25054:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25054:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25054:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25110:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25244:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25118:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25118:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25110:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24988:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25003:4:15",
														"type": ""
													}
												],
												"src": "24837:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25368:75:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25390:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25398:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25386:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25386:14:15"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25402:33:15",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25379:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25379:57:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25379:57:15"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25360:6:15",
														"type": ""
													}
												],
												"src": "25262:181:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25595:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25605:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25671:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25676:2:15",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25612:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25612:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25605:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25777:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "25688:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25688:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25688:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25790:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25801:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25806:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25797:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "25797:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25790:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25583:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25591:3:15",
														"type": ""
													}
												],
												"src": "25449:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25992:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26002:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26014:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26025:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26010:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26010:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26002:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26049:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26060:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26045:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26045:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26068:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26074:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26064:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26064:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26038:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26038:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26038:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26094:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26228:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26102:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26102:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26094:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25972:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25987:4:15",
														"type": ""
													}
												],
												"src": "25821:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26352:60:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "26374:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26382:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26370:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26370:14:15"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "26386:18:15",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26363:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26363:42:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26363:42:15"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "26344:6:15",
														"type": ""
													}
												],
												"src": "26246:166:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26564:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26574:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26640:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26645:2:15",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26581:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26581:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26574:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26746:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nodeType": "YulIdentifier",
																	"src": "26657:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26657:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26657:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26759:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26770:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26775:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26766:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26766:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26759:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26552:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26560:3:15",
														"type": ""
													}
												],
												"src": "26418:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26961:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26971:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26983:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26994:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26979:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "26979:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26971:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27018:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27029:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27014:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27014:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27037:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27043:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27033:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27033:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27007:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27007:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27007:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27063:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27197:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27071:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27071:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27063:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26941:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26956:4:15",
														"type": ""
													}
												],
												"src": "26790:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27321:76:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27343:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27351:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27339:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27339:14:15"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27355:34:15",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27332:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27332:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27332:58:15"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27313:6:15",
														"type": ""
													}
												],
												"src": "27215:182:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27549:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27559:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27625:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27630:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27566:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27566:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27559:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27731:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "27642:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27642:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27642:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27744:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27755:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27760:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27751:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27751:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27744:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27537:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27545:3:15",
														"type": ""
													}
												],
												"src": "27403:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27946:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27956:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27968:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27979:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27964:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27964:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27956:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28003:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28014:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27999:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27999:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28022:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28028:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28018:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28018:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27992:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "27992:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27992:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28048:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28182:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28056:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28056:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28048:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27926:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27941:4:15",
														"type": ""
													}
												],
												"src": "27775:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28354:288:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28364:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28376:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28387:2:15",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28372:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28372:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28364:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28444:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28457:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28468:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28453:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28453:17:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28400:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28400:71:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28400:71:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "28525:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28538:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28549:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28534:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28534:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28481:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28481:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28481:72:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "28607:6:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28620:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28631:2:15",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28616:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28616:18:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28563:43:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28563:72:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28563:72:15"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28310:9:15",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "28322:6:15",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "28330:6:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28338:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28349:4:15",
														"type": ""
													}
												],
												"src": "28200:442:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28754:123:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28776:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28784:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28772:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28772:14:15"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28788:34:15",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28765:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28765:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28765:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28844:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28852:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28840:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28840:15:15"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28857:12:15",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28833:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "28833:37:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28833:37:15"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28746:6:15",
														"type": ""
													}
												],
												"src": "28648:229:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29029:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29039:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29105:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29110:2:15",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29046:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29046:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "29039:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29211:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "29122:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29122:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29122:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29224:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29235:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29240:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29231:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29231:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "29224:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "29017:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "29025:3:15",
														"type": ""
													}
												],
												"src": "28883:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29426:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29436:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29448:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29459:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29444:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29444:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29436:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29483:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29494:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29479:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29479:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "29502:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29508:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29498:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29498:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29472:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29472:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29472:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29528:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "29662:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29536:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29536:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29528:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29406:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29421:4:15",
														"type": ""
													}
												],
												"src": "29255:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29786:119:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29808:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29816:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29804:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29804:14:15"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29820:34:15",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29797:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29797:58:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29797:58:15"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "29876:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29884:2:15",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29872:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29872:15:15"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29889:8:15",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29865:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "29865:33:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29865:33:15"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "29778:6:15",
														"type": ""
													}
												],
												"src": "29680:225:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30057:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30067:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30133:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30138:2:15",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30074:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30074:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "30067:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30239:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "30150:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30150:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30150:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30252:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30263:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30268:2:15",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30259:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30259:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "30252:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "30045:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30053:3:15",
														"type": ""
													}
												],
												"src": "29911:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30454:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30464:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "30476:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30487:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30472:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30472:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30464:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30511:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30522:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30507:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30507:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "30530:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30536:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "30526:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30526:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30500:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30500:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30500:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30556:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "30690:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30564:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30564:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "30556:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "30434:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "30449:4:15",
														"type": ""
													}
												],
												"src": "30283:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30766:40:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30777:22:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "30793:5:15"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "30787:5:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "30787:12:15"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "30777:6:15"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "30749:5:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "30759:6:15",
														"type": ""
													}
												],
												"src": "30708:98:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30925:34:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30935:18:15",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "30950:3:15"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "30935:11:15"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "30897:3:15",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "30902:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "30913:11:15",
														"type": ""
													}
												],
												"src": "30812:147:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31073:278:15",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "31083:52:15",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "31129:5:15"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "31097:31:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "31097:38:15"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "31087:6:15",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "31144:95:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31227:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31232:6:15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31151:75:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "31151:88:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "31144:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31287:5:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31294:4:15",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31283:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31283:16:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31301:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31306:6:15"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "31248:34:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "31248:65:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31248:65:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31322:23:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31333:3:15"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "31338:6:15"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31329:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "31329:16:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "31322:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31054:5:15",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31061:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31069:3:15",
														"type": ""
													}
												],
												"src": "30965:386:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31491:137:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31502:100:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "31589:6:15"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "31598:3:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31509:79:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "31509:93:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "31502:3:15"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "31612:10:15",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "31619:3:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "31612:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31470:3:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "31476:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31487:3:15",
														"type": ""
													}
												],
												"src": "31357:271:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31740:73:15",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "31762:6:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31770:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31758:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31758:14:15"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "31774:31:15",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31751:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "31751:55:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31751:55:15"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "31732:6:15",
														"type": ""
													}
												],
												"src": "31634:179:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31965:220:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31975:74:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32041:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32046:2:15",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31982:58:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "31982:67:15"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "31975:3:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32147:3:15"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "32058:88:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32058:93:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32058:93:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32160:19:15",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32171:3:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32176:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32167:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32167:12:15"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "32160:3:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "31953:3:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31961:3:15",
														"type": ""
													}
												],
												"src": "31819:366:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32362:248:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32372:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "32384:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32395:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32380:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32380:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32372:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32419:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32430:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32415:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32415:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "32438:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32444:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "32434:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32434:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32408:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32408:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32408:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32464:139:15",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "32598:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32472:124:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32472:131:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32464:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "32342:9:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "32357:4:15",
														"type": ""
													}
												],
												"src": "32191:419:15"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32734:195:15",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32744:26:15",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "32756:9:15"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32767:2:15",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32752:3:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32752:18:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32744:4:15"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32791:9:15"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32802:1:15",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32787:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32787:17:15"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "32810:4:15"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "32816:9:15"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "32806:3:15"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32806:20:15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32780:6:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32780:47:15"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32780:47:15"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32836:86:15",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "32908:6:15"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "32917:4:15"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32844:63:15"
																},
																"nodeType": "YulFunctionCall",
																"src": "32844:78:15"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32836:4:15"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "32706:9:15",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "32718:6:15",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "32729:4:15",
														"type": ""
													}
												],
												"src": "32616:313:15"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // string[]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[]\n    function abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_string_memory_ptr_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_string_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$363_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$363_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$363_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$363__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$363_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int64(value) -> cleaned {\n        cleaned := signextend(7, value)\n    }\n\n    function abi_encode_t_int64_to_t_int64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int64(value))\n    }\n\n    function abi_encode_tuple_t_int64__to_t_int64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int64_to_t_int64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786(memPtr) {\n\n        mstore(add(memPtr, 0), \"Input arrays length mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_address_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function validator_revert_t_int64(value) {\n        if iszero(eq(value, cleanup_t_int64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int64(value)\n    }\n\n    function abi_decode_tuple_t_int64_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_array$_t_string_storage_$dyn_storage(value) -> length {\n\n        length := sload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_string_storage_$dyn_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_string_storage_to_t_string_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_string_storage_$dyn_storage(ptr) -> next {\n        next := add(ptr, 0x01)\n    }\n\n    // string[] -> string[]\n    function abi_encode_t_array$_t_string_storage_$dyn_storage_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_string_storage_$dyn_storage(value)\n        pos := array_storeLengthForEncoding_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_string_storage_$dyn_storage(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := srcPtr\n            tail := abi_encodeUpdatedPos_t_string_storage_to_t_string_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_string_storage_$dyn_storage(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_array$_t_string_storage_$dyn_storage__to_t_address_t_uint256_t_array$_t_string_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_string_storage_$dyn_storage_to_t_array$_t_string_memory_ptr_$dyn_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_4b3d2aaf3158ed749e6ea5cd490dd314d6a9f8bba4f79ecc1e5c44388ee47d72(memPtr) {\n\n        mstore(add(memPtr, 0), \"Failed to approve delegate metho\")\n\n        mstore(add(memPtr, 32), \"d\")\n\n    }\n\n    function abi_encode_t_stringliteral_4b3d2aaf3158ed749e6ea5cd490dd314d6a9f8bba4f79ecc1e5c44388ee47d72_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_4b3d2aaf3158ed749e6ea5cd490dd314d6a9f8bba4f79ecc1e5c44388ee47d72(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4b3d2aaf3158ed749e6ea5cd490dd314d6a9f8bba4f79ecc1e5c44388ee47d72__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4b3d2aaf3158ed749e6ea5cd490dd314d6a9f8bba4f79ecc1e5c44388ee47d72_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 15,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101a85760003560e01c806380faa57d116100f9578063ca1d209d11610097578063d1af0c7d11610071578063d1af0c7d14610487578063df136d65146104a5578063ebe2b12b146104c3578063f2fde38b146104e1576101a8565b8063ca1d209d14610431578063cc1a378f1461044d578063cd3daf9d14610469576101a8565b80638b876347116100d35780638b876347146103bb5780638da5cb5b146103eb578063c6e79b9114610409578063c8f33c9114610413576101a8565b806380faa57d14610351578063880b0e431461036f5780638980f11f1461039f576101a8565b8063583419221161016657806370a082311161014057806370a08231146102db578063715018a61461030b57806372f702f3146103155780637b0a47ee14610333576101a8565b806358341922146102835780635c975abb146102a15780636c11fe9b146102bf576101a8565b80628cc262146101ad5780630700037d146101dd5780631c1f78eb1461020d578063386a95251461022b5780634e71d92d14610249578063529d6ccf14610253575b600080fd5b6101c760048036038101906101c29190611a10565b6104fd565b6040516101d49190611a56565b60405180910390f35b6101f760048036038101906101f29190611a10565b61050f565b6040516102049190611a56565b60405180910390f35b610215610527565b6040516102229190611a56565b60405180910390f35b61023361053e565b6040516102409190611a56565b60405180910390f35b610251610544565b005b61026d60048036038101906102689190611a10565b610772565b60405161027a9190611a8c565b60405180910390f35b61028b6107c8565b6040516102989190611a56565b60405180910390f35b6102a96107d2565b6040516102b69190611a8c565b60405180910390f35b6102d960048036038101906102d49190611dc2565b6107e8565b005b6102f560048036038101906102f09190611a10565b6108c0565b6040516103029190611a56565b60405180910390f35b610313610909565b005b61031d61091d565b60405161032a9190611ec8565b60405180910390f35b61033b610943565b6040516103489190611a56565b60405180910390f35b610359610949565b6040516103669190611a56565b60405180910390f35b61038960048036038101906103849190611ee3565b610958565b6040516103969190611f8a565b60405180910390f35b6103b960048036038101906103b49190611fa5565b610bcc565b005b6103d560048036038101906103d09190611a10565b610cca565b6040516103e29190611a56565b60405180910390f35b6103f3610ce2565b6040516104009190611ff4565b60405180910390f35b610411610d0b565b005b61041b610e4d565b6040516104289190611a56565b60405180910390f35b61044b6004803603810190610446919061200f565b610e53565b005b6104676004803603810190610462919061200f565b61113f565b005b6104716111c4565b60405161047e9190611a56565b60405180910390f35b61048f6111d3565b60405161049c9190611ec8565b60405180910390f35b6104ad6111f9565b6040516104ba9190611a56565b60405180910390f35b6104cb6111ff565b6040516104d89190611a56565b60405180910390f35b6104fb60048036038101906104f69190611a10565b611205565b005b600061050882611288565b9050919050565b600c6020528060005260406000206000915090505481565b6000600854600754610539919061206b565b905090565b60085481565b61054c61138a565b6105546113d9565b3361055d611423565b600a8190555061056b61148d565b600981905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610638576105ae81611288565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a54600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610766576000600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506107173382600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166114a79092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a8260405161075d9190611a56565b60405180910390a25b505061077061152d565b565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000600d54905090565b60008060149054906101000a900460ff16905090565b6107f06113d9565b81518351148015610802575080518251145b610841576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108389061210a565b60405180910390fd5b60005b83518110156108ba576108a68482815181106108635761086261212a565b5b602002602001015184838151811061087e5761087d61212a565b5b60200260200101518484815181106108995761089861212a565b5b6020026020010151610958565b5080806108b290612159565b915050610844565b50505050565b6000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610911611536565b61091b60006115b4565b565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b600061095361148d565b905090565b60006109626113d9565b3361096b611423565b600a8190555061097961148d565b600981905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a46576109bc81611288565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a54600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008311610a80576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061080073ffffffffffffffffffffffffffffffffffffffff166354b826f5338888886040518563ffffffff1660e01b8152600401610ac3949392919061220f565b6020604051808303816000875af1158015610ae2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b06919061228e565b905083600d54610b1691906122bb565b600d8190555083600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b6b91906122bb565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f0da5c3d1021415bb27aa0917eaaafc6ee7c358a2a436d70208004073f6109ec085604051610bb89190611a56565b60405180910390a280925050509392505050565b610bd4611536565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c5b576040517f43fc58f100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c8d610c66610ce2565b828473ffffffffffffffffffffffffffffffffffffffff166114a79092919063ffffffff16565b7f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa288282604051610cbe9291906122ef565b60405180910390a15050565b600b6020528060005260406000206000915090505481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061080073ffffffffffffffffffffffffffffffffffffffff1663b6039895337fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60026040518463ffffffff1660e01b8152600401610d6d939291906124e8565b6020604051808303816000875af1158015610d8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db09190612552565b905080610df2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de9906125f1565b60405180910390fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60095481565b610e5b611536565b610e636113d9565b6000610e6d611423565b600a81905550610e7b61148d565b600981905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f4857610ebe81611288565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600a54600b60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6006544210610f6a5760085482610f5f9190612640565b600781905550610fb0565b600042600654610f7a9190612671565b9050600060075482610f8c919061206b565b90506008548185610f9d91906122bb565b610fa79190612640565b60078190555050505b610fff333084600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611678909392919063ffffffff16565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161105c9190611ff4565b602060405180830381865afa158015611079573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109d91906126ba565b9050600854816110ad9190612640565b60075411156110e8576040517f7f5e85a600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b42600981905550600854426110fd91906122bb565b6006819055507fc4c14883ae9fd8e26d5d59e3485ed29fd126d781d7e498a4ca5c54c8268e4936836040516111329190611a56565b60405180910390a1505050565b611147611536565b600654421015611183576040517f38e3211200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806008819055507ffb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d3816040516111b99190611a56565b60405180910390a150565b60006111ce611423565b905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b60065481565b61120d611536565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361127c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127390612759565b60405180910390fd5b611285816115b4565b50565b6000600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054670de0b6b3a7640000600b60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461131b611423565b6113259190612671565b600e60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461136f919061206b565b6113799190612640565b61138391906122bb565b9050919050565b6002600154036113cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c6906127c5565b60405180910390fd5b6002600181905550565b6113e16107d2565b15611421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141890612831565b60405180910390fd5b565b600080600d540361143857600a54905061148a565b600d54670de0b6b3a764000060075460095461145261148d565b61145c9190612671565b611466919061206b565b611470919061206b565b61147a9190612640565b600a5461148791906122bb565b90505b90565b600060065442106114a0576006546114a2565b425b905090565b6115288363a9059cbb60e01b84846040516024016114c69291906122ef565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611701565b505050565b60018081905550565b61153e6117c9565b73ffffffffffffffffffffffffffffffffffffffff1661155c610ce2565b73ffffffffffffffffffffffffffffffffffffffff16146115b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115a99061289d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6116fb846323b872dd60e01b858585604051602401611699939291906128bd565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611701565b50505050565b6000611763826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166117d19092919063ffffffff16565b90506000815114806117855750808060200190518101906117849190612552565b5b6117c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117bb90612966565b60405180910390fd5b505050565b600033905090565b60606117e084846000856117e9565b90509392505050565b60608247101561182e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611825906129f8565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516118579190612a5f565b60006040518083038185875af1925050503d8060008114611894576040519150601f19603f3d011682016040523d82523d6000602084013e611899565b606091505b50915091506118aa878383876118b6565b92505050949350505050565b60608315611918576000835103611910576118d08561192b565b61190f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190690612ac2565b60405180910390fd5b5b829050611923565b611922838361194e565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156119615781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119959190612ae2565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119dd826119b2565b9050919050565b6119ed816119d2565b81146119f857600080fd5b50565b600081359050611a0a816119e4565b92915050565b600060208284031215611a2657611a256119a8565b5b6000611a34848285016119fb565b91505092915050565b6000819050919050565b611a5081611a3d565b82525050565b6000602082019050611a6b6000830184611a47565b92915050565b60008115159050919050565b611a8681611a71565b82525050565b6000602082019050611aa16000830184611a7d565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611af582611aac565b810181811067ffffffffffffffff82111715611b1457611b13611abd565b5b80604052505050565b6000611b2761199e565b9050611b338282611aec565b919050565b600067ffffffffffffffff821115611b5357611b52611abd565b5b602082029050602081019050919050565b600080fd5b600080fd5b600067ffffffffffffffff821115611b8957611b88611abd565b5b611b9282611aac565b9050602081019050919050565b82818337600083830152505050565b6000611bc1611bbc84611b6e565b611b1d565b905082815260208101848484011115611bdd57611bdc611b69565b5b611be8848285611b9f565b509392505050565b600082601f830112611c0557611c04611aa7565b5b8135611c15848260208601611bae565b91505092915050565b6000611c31611c2c84611b38565b611b1d565b90508083825260208201905060208402830185811115611c5457611c53611b64565b5b835b81811015611c9b57803567ffffffffffffffff811115611c7957611c78611aa7565b5b808601611c868982611bf0565b85526020850194505050602081019050611c56565b5050509392505050565b600082601f830112611cba57611cb9611aa7565b5b8135611cca848260208601611c1e565b91505092915050565b600067ffffffffffffffff821115611cee57611ced611abd565b5b602082029050602081019050919050565b611d0881611a3d565b8114611d1357600080fd5b50565b600081359050611d2581611cff565b92915050565b6000611d3e611d3984611cd3565b611b1d565b90508083825260208201905060208402830185811115611d6157611d60611b64565b5b835b81811015611d8a5780611d768882611d16565b845260208401935050602081019050611d63565b5050509392505050565b600082601f830112611da957611da8611aa7565b5b8135611db9848260208601611d2b565b91505092915050565b600080600060608486031215611ddb57611dda6119a8565b5b600084013567ffffffffffffffff811115611df957611df86119ad565b5b611e0586828701611ca5565b935050602084013567ffffffffffffffff811115611e2657611e256119ad565b5b611e3286828701611ca5565b925050604084013567ffffffffffffffff811115611e5357611e526119ad565b5b611e5f86828701611d94565b9150509250925092565b6000819050919050565b6000611e8e611e89611e84846119b2565b611e69565b6119b2565b9050919050565b6000611ea082611e73565b9050919050565b6000611eb282611e95565b9050919050565b611ec281611ea7565b82525050565b6000602082019050611edd6000830184611eb9565b92915050565b600080600060608486031215611efc57611efb6119a8565b5b600084013567ffffffffffffffff811115611f1a57611f196119ad565b5b611f2686828701611bf0565b935050602084013567ffffffffffffffff811115611f4757611f466119ad565b5b611f5386828701611bf0565b9250506040611f6486828701611d16565b9150509250925092565b60008160070b9050919050565b611f8481611f6e565b82525050565b6000602082019050611f9f6000830184611f7b565b92915050565b60008060408385031215611fbc57611fbb6119a8565b5b6000611fca858286016119fb565b9250506020611fdb85828601611d16565b9150509250929050565b611fee816119d2565b82525050565b60006020820190506120096000830184611fe5565b92915050565b600060208284031215612025576120246119a8565b5b600061203384828501611d16565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061207682611a3d565b915061208183611a3d565b925082820261208f81611a3d565b915082820484148315176120a6576120a561203c565b5b5092915050565b600082825260208201905092915050565b7f496e70757420617272617973206c656e677468206d69736d6174636800000000600082015250565b60006120f4601c836120ad565b91506120ff826120be565b602082019050919050565b60006020820190508181036000830152612123816120e7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061216482611a3d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036121965761219561203c565b5b600182019050919050565b600081519050919050565b60005b838110156121ca5780820151818401526020810190506121af565b60008484015250505050565b60006121e1826121a1565b6121eb81856120ad565b93506121fb8185602086016121ac565b61220481611aac565b840191505092915050565b60006080820190506122246000830187611fe5565b818103602083015261223681866121d6565b9050818103604083015261224a81856121d6565b90506122596060830184611a47565b95945050505050565b61226b81611f6e565b811461227657600080fd5b50565b60008151905061228881612262565b92915050565b6000602082840312156122a4576122a36119a8565b5b60006122b284828501612279565b91505092915050565b60006122c682611a3d565b91506122d183611a3d565b92508282019050808211156122e9576122e861203c565b5b92915050565b60006040820190506123046000830185611fe5565b6123116020830184611a47565b9392505050565b600081549050919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061239057607f821691505b6020821081036123a3576123a2612349565b5b50919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b600081546123dc81612378565b6123e681866123a9565b9450600182166000811461240157600181146124175761244a565b60ff19831686528115156020028601935061244a565b612420856123ba565b60005b8381101561244257815481890152600182019150602081019050612423565b808801955050505b50505092915050565b600061245f83836123cf565b905092915050565b6000600182019050919050565b600061247f82612318565b6124898185612323565b93508360208202850161249b85612334565b8060005b858110156124d6578484038952816124b78582612453565b94506124c283612467565b925060208a0199505060018101905061249f565b50829750879550505050505092915050565b60006060820190506124fd6000830186611fe5565b61250a6020830185611a47565b818103604083015261251c8184612474565b9050949350505050565b61252f81611a71565b811461253a57600080fd5b50565b60008151905061254c81612526565b92915050565b600060208284031215612568576125676119a8565b5b60006125768482850161253d565b91505092915050565b7f4661696c656420746f20617070726f76652064656c6567617465206d6574686f60008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b60006125db6021836120ad565b91506125e68261257f565b604082019050919050565b6000602082019050818103600083015261260a816125ce565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061264b82611a3d565b915061265683611a3d565b92508261266657612665612611565b5b828204905092915050565b600061267c82611a3d565b915061268783611a3d565b925082820390508181111561269f5761269e61203c565b5b92915050565b6000815190506126b481611cff565b92915050565b6000602082840312156126d0576126cf6119a8565b5b60006126de848285016126a5565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006127436026836120ad565b915061274e826126e7565b604082019050919050565b6000602082019050818103600083015261277281612736565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b60006127af601f836120ad565b91506127ba82612779565b602082019050919050565b600060208201905081810360008301526127de816127a2565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b600061281b6010836120ad565b9150612826826127e5565b602082019050919050565b6000602082019050818103600083015261284a8161280e565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006128876020836120ad565b915061289282612851565b602082019050919050565b600060208201905081810360008301526128b68161287a565b9050919050565b60006060820190506128d26000830186611fe5565b6128df6020830185611fe5565b6128ec6040830184611a47565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612950602a836120ad565b915061295b826128f4565b604082019050919050565b6000602082019050818103600083015261297f81612943565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006129e26026836120ad565b91506129ed82612986565b604082019050919050565b60006020820190508181036000830152612a11816129d5565b9050919050565b600081519050919050565b600081905092915050565b6000612a3982612a18565b612a438185612a23565b9350612a538185602086016121ac565b80840191505092915050565b6000612a6b8284612a2e565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612aac601d836120ad565b9150612ab782612a76565b602082019050919050565b60006020820190508181036000830152612adb81612a9f565b9050919050565b60006020820190508181036000830152612afc81846121d6565b90509291505056fea2646970667358221220dd175e72649fc590c32e72ba343166cecec776c9b550f6f852b852cdffb2987d64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80FAA57D GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xCA1D209D GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x487 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x4A5 JUMPI DUP1 PUSH4 0xEBE2B12B EQ PUSH2 0x4C3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4E1 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0xCA1D209D EQ PUSH2 0x431 JUMPI DUP1 PUSH4 0xCC1A378F EQ PUSH2 0x44D JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x469 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x8B876347 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xC6E79B91 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x413 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x880B0E43 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x8980F11F EQ PUSH2 0x39F JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x58341922 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x70A08231 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x7B0A47EE EQ PUSH2 0x333 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x58341922 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x6C11FE9B EQ PUSH2 0x2BF JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x1C1F78EB EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x386A9525 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x529D6CCF EQ PUSH2 0x253 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x527 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x233 PUSH2 0x53E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x251 PUSH2 0x544 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1A8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A9 PUSH2 0x7D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x1A8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D4 SWAP2 SWAP1 PUSH2 0x1DC2 JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x8C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x313 PUSH2 0x909 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31D PUSH2 0x91D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33B PUSH2 0x943 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x359 PUSH2 0x949 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH2 0x958 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1F8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1FA5 JUMP JUMPDEST PUSH2 0xBCC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0xCCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F3 PUSH2 0xCE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x1FF4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x411 PUSH2 0xD0B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41B PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x428 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x446 SWAP2 SWAP1 PUSH2 0x200F JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x467 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x462 SWAP2 SWAP1 PUSH2 0x200F JUMP JUMPDEST PUSH2 0x113F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x471 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47E SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x48F PUSH2 0x11D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x49C SWAP2 SWAP1 PUSH2 0x1EC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AD PUSH2 0x11F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4CB PUSH2 0x11FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D8 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x1205 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH2 0x508 DUP3 PUSH2 0x1288 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0x539 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x54C PUSH2 0x138A JUMP JUMPDEST PUSH2 0x554 PUSH2 0x13D9 JUMP JUMPDEST CALLER PUSH2 0x55D PUSH2 0x1423 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0x56B PUSH2 0x148D JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x638 JUMPI PUSH2 0x5AE DUP2 PUSH2 0x1288 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA SLOAD PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x766 JUMPI PUSH1 0x0 PUSH1 0xC PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x717 CALLER DUP3 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14A7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A DUP3 PUSH1 0x40 MLOAD PUSH2 0x75D SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH2 0x770 PUSH2 0x152D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F0 PUSH2 0x13D9 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ DUP1 ISZERO PUSH2 0x802 JUMPI POP DUP1 MLOAD DUP3 MLOAD EQ JUMPDEST PUSH2 0x841 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x838 SWAP1 PUSH2 0x210A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x8BA JUMPI PUSH2 0x8A6 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x863 JUMPI PUSH2 0x862 PUSH2 0x212A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x87E JUMPI PUSH2 0x87D PUSH2 0x212A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x899 JUMPI PUSH2 0x898 PUSH2 0x212A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x958 JUMP JUMPDEST POP DUP1 DUP1 PUSH2 0x8B2 SWAP1 PUSH2 0x2159 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x844 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x911 PUSH2 0x1536 JUMP JUMPDEST PUSH2 0x91B PUSH1 0x0 PUSH2 0x15B4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x953 PUSH2 0x148D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x962 PUSH2 0x13D9 JUMP JUMPDEST CALLER PUSH2 0x96B PUSH2 0x1423 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0x979 PUSH2 0x148D JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA46 JUMPI PUSH2 0x9BC DUP2 PUSH2 0x1288 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA SLOAD PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0xA80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F2A200500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x54B826F5 CALLER DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC3 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x220F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAE2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB06 SWAP2 SWAP1 PUSH2 0x228E JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0xD SLOAD PUSH2 0xB16 SWAP2 SWAP1 PUSH2 0x22BB JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0xE PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB6B SWAP2 SWAP1 PUSH2 0x22BB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDA5C3D1021415BB27AA0917EAAAFC6EE7C358A2A436D70208004073F6109EC0 DUP6 PUSH1 0x40 MLOAD PUSH2 0xBB8 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xBD4 PUSH2 0x1536 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC5B JUMPI PUSH1 0x40 MLOAD PUSH32 0x43FC58F100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC8D PUSH2 0xC66 PUSH2 0xCE2 JUMP JUMPDEST DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14A7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0xCBE SWAP3 SWAP2 SWAP1 PUSH2 0x22EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x800 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB6039895 CALLER PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x2 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD6D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24E8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB0 SWAP2 SWAP1 PUSH2 0x2552 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xDF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE9 SWAP1 PUSH2 0x25F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x1536 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0x13D9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6D PUSH2 0x1423 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH2 0xE7B PUSH2 0x148D JUMP JUMPDEST PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF48 JUMPI PUSH2 0xEBE DUP2 PUSH2 0x1288 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xA SLOAD PUSH1 0xB PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP LT PUSH2 0xF6A JUMPI PUSH1 0x8 SLOAD DUP3 PUSH2 0xF5F SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0xFB0 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP PUSH1 0x6 SLOAD PUSH2 0xF7A SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0xF8C SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST SWAP1 POP PUSH1 0x8 SLOAD DUP2 DUP6 PUSH2 0xF9D SWAP2 SWAP1 PUSH2 0x22BB JUMP JUMPDEST PUSH2 0xFA7 SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP POP JUMPDEST PUSH2 0xFFF CALLER ADDRESS DUP5 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1678 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105C SWAP2 SWAP1 PUSH2 0x1FF4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1079 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109D SWAP2 SWAP1 PUSH2 0x26BA JUMP JUMPDEST SWAP1 POP PUSH1 0x8 SLOAD DUP2 PUSH2 0x10AD SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST PUSH1 0x7 SLOAD GT ISZERO PUSH2 0x10E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7F5E85A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD TIMESTAMP PUSH2 0x10FD SWAP2 SWAP1 PUSH2 0x22BB JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH32 0xC4C14883AE9FD8E26D5D59E3485ED29FD126D781D7E498A4CA5C54C8268E4936 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1132 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x1147 PUSH2 0x1536 JUMP JUMPDEST PUSH1 0x6 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x38E3211200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH32 0xFB46CA5A5E06D4540D6387B930A7C978BCE0DB5F449EC6B3F5D07C6E1D44F2D3 DUP2 PUSH1 0x40 MLOAD PUSH2 0x11B9 SWAP2 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CE PUSH2 0x1423 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x120D PUSH2 0x1536 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x127C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1273 SWAP1 PUSH2 0x2759 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1285 DUP2 PUSH2 0x15B4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0xB PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x131B PUSH2 0x1423 JUMP JUMPDEST PUSH2 0x1325 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x136F SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x1379 SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST PUSH2 0x1383 SWAP2 SWAP1 PUSH2 0x22BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x13CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C6 SWAP1 PUSH2 0x27C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x13E1 PUSH2 0x7D2 JUMP JUMPDEST ISZERO PUSH2 0x1421 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1418 SWAP1 PUSH2 0x2831 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xD SLOAD SUB PUSH2 0x1438 JUMPI PUSH1 0xA SLOAD SWAP1 POP PUSH2 0x148A JUMP JUMPDEST PUSH1 0xD SLOAD PUSH8 0xDE0B6B3A7640000 PUSH1 0x7 SLOAD PUSH1 0x9 SLOAD PUSH2 0x1452 PUSH2 0x148D JUMP JUMPDEST PUSH2 0x145C SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST PUSH2 0x1466 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x1470 SWAP2 SWAP1 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x147A SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1487 SWAP2 SWAP1 PUSH2 0x22BB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD TIMESTAMP LT PUSH2 0x14A0 JUMPI PUSH1 0x6 SLOAD PUSH2 0x14A2 JUMP JUMPDEST TIMESTAMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1528 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x14C6 SWAP3 SWAP2 SWAP1 PUSH2 0x22EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1701 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x153E PUSH2 0x17C9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x155C PUSH2 0xCE2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A9 SWAP1 PUSH2 0x289D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x16FB DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1699 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1701 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1763 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17D1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ DUP1 PUSH2 0x1785 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1784 SWAP2 SWAP1 PUSH2 0x2552 JUMP JUMPDEST JUMPDEST PUSH2 0x17C4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17BB SWAP1 PUSH2 0x2966 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x17E0 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x17E9 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x182E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1825 SWAP1 PUSH2 0x29F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1857 SWAP2 SWAP1 PUSH2 0x2A5F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1894 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1899 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x18AA DUP8 DUP4 DUP4 DUP8 PUSH2 0x18B6 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1918 JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x1910 JUMPI PUSH2 0x18D0 DUP6 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x190F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1906 SWAP1 PUSH2 0x2AC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x1923 JUMP JUMPDEST PUSH2 0x1922 DUP4 DUP4 PUSH2 0x194E JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1961 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1995 SWAP2 SWAP1 PUSH2 0x2AE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19DD DUP3 PUSH2 0x19B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19ED DUP2 PUSH2 0x19D2 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A0A DUP2 PUSH2 0x19E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A26 JUMPI PUSH2 0x1A25 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A34 DUP5 DUP3 DUP6 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A50 DUP2 PUSH2 0x1A3D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A6B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A86 DUP2 PUSH2 0x1A71 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AA1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A7D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1AF5 DUP3 PUSH2 0x1AAC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B14 JUMPI PUSH2 0x1B13 PUSH2 0x1ABD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B27 PUSH2 0x199E JUMP JUMPDEST SWAP1 POP PUSH2 0x1B33 DUP3 DUP3 PUSH2 0x1AEC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B53 JUMPI PUSH2 0x1B52 PUSH2 0x1ABD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B89 JUMPI PUSH2 0x1B88 PUSH2 0x1ABD JUMP JUMPDEST JUMPDEST PUSH2 0x1B92 DUP3 PUSH2 0x1AAC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC1 PUSH2 0x1BBC DUP5 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1B1D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1BDD JUMPI PUSH2 0x1BDC PUSH2 0x1B69 JUMP JUMPDEST JUMPDEST PUSH2 0x1BE8 DUP5 DUP3 DUP6 PUSH2 0x1B9F JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C05 JUMPI PUSH2 0x1C04 PUSH2 0x1AA7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C15 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BAE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C31 PUSH2 0x1C2C DUP5 PUSH2 0x1B38 JUMP JUMPDEST PUSH2 0x1B1D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1C54 JUMPI PUSH2 0x1C53 PUSH2 0x1B64 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C9B JUMPI DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C79 JUMPI PUSH2 0x1C78 PUSH2 0x1AA7 JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH2 0x1C86 DUP10 DUP3 PUSH2 0x1BF0 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C56 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CBA JUMPI PUSH2 0x1CB9 PUSH2 0x1AA7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1CCA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1C1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1CEE JUMPI PUSH2 0x1CED PUSH2 0x1ABD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D08 DUP2 PUSH2 0x1A3D JUMP JUMPDEST DUP2 EQ PUSH2 0x1D13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D25 DUP2 PUSH2 0x1CFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D3E PUSH2 0x1D39 DUP5 PUSH2 0x1CD3 JUMP JUMPDEST PUSH2 0x1B1D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1D61 JUMPI PUSH2 0x1D60 PUSH2 0x1B64 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D8A JUMPI DUP1 PUSH2 0x1D76 DUP9 DUP3 PUSH2 0x1D16 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D63 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DA9 JUMPI PUSH2 0x1DA8 PUSH2 0x1AA7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DB9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DDB JUMPI PUSH2 0x1DDA PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DF9 JUMPI PUSH2 0x1DF8 PUSH2 0x19AD JUMP JUMPDEST JUMPDEST PUSH2 0x1E05 DUP7 DUP3 DUP8 ADD PUSH2 0x1CA5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E26 JUMPI PUSH2 0x1E25 PUSH2 0x19AD JUMP JUMPDEST JUMPDEST PUSH2 0x1E32 DUP7 DUP3 DUP8 ADD PUSH2 0x1CA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E53 JUMPI PUSH2 0x1E52 PUSH2 0x19AD JUMP JUMPDEST JUMPDEST PUSH2 0x1E5F DUP7 DUP3 DUP8 ADD PUSH2 0x1D94 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E8E PUSH2 0x1E89 PUSH2 0x1E84 DUP5 PUSH2 0x19B2 JUMP JUMPDEST PUSH2 0x1E69 JUMP JUMPDEST PUSH2 0x19B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA0 DUP3 PUSH2 0x1E73 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EB2 DUP3 PUSH2 0x1E95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EC2 DUP2 PUSH2 0x1EA7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EDD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EFC JUMPI PUSH2 0x1EFB PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F1A JUMPI PUSH2 0x1F19 PUSH2 0x19AD JUMP JUMPDEST JUMPDEST PUSH2 0x1F26 DUP7 DUP3 DUP8 ADD PUSH2 0x1BF0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F47 JUMPI PUSH2 0x1F46 PUSH2 0x19AD JUMP JUMPDEST JUMPDEST PUSH2 0x1F53 DUP7 DUP3 DUP8 ADD PUSH2 0x1BF0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F64 DUP7 DUP3 DUP8 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F84 DUP2 PUSH2 0x1F6E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F9F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FBC JUMPI PUSH2 0x1FBB PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FCA DUP6 DUP3 DUP7 ADD PUSH2 0x19FB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FDB DUP6 DUP3 DUP7 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FEE DUP2 PUSH2 0x19D2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2009 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FE5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2025 JUMPI PUSH2 0x2024 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2033 DUP5 DUP3 DUP6 ADD PUSH2 0x1D16 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2076 DUP3 PUSH2 0x1A3D JUMP JUMPDEST SWAP2 POP PUSH2 0x2081 DUP4 PUSH2 0x1A3D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x208F DUP2 PUSH2 0x1A3D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x20A6 JUMPI PUSH2 0x20A5 PUSH2 0x203C JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E70757420617272617973206C656E677468206D69736D6174636800000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F4 PUSH1 0x1C DUP4 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x20FF DUP3 PUSH2 0x20BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2123 DUP2 PUSH2 0x20E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2164 DUP3 PUSH2 0x1A3D JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2196 JUMPI PUSH2 0x2195 PUSH2 0x203C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21CA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x21AF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21E1 DUP3 PUSH2 0x21A1 JUMP JUMPDEST PUSH2 0x21EB DUP2 DUP6 PUSH2 0x20AD JUMP JUMPDEST SWAP4 POP PUSH2 0x21FB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21AC JUMP JUMPDEST PUSH2 0x2204 DUP2 PUSH2 0x1AAC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2224 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1FE5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2236 DUP2 DUP7 PUSH2 0x21D6 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x224A DUP2 DUP6 PUSH2 0x21D6 JUMP JUMPDEST SWAP1 POP PUSH2 0x2259 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1A47 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x226B DUP2 PUSH2 0x1F6E JUMP JUMPDEST DUP2 EQ PUSH2 0x2276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2288 DUP2 PUSH2 0x2262 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22A4 JUMPI PUSH2 0x22A3 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x22B2 DUP5 DUP3 DUP6 ADD PUSH2 0x2279 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22C6 DUP3 PUSH2 0x1A3D JUMP JUMPDEST SWAP2 POP PUSH2 0x22D1 DUP4 PUSH2 0x1A3D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x22E9 JUMPI PUSH2 0x22E8 PUSH2 0x203C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2304 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1FE5 JUMP JUMPDEST PUSH2 0x2311 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1A47 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2390 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x23A3 JUMPI PUSH2 0x23A2 PUSH2 0x2349 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x23DC DUP2 PUSH2 0x2378 JUMP JUMPDEST PUSH2 0x23E6 DUP2 DUP7 PUSH2 0x23A9 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x2401 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2417 JUMPI PUSH2 0x244A JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x244A JUMP JUMPDEST PUSH2 0x2420 DUP6 PUSH2 0x23BA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2442 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2423 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x245F DUP4 DUP4 PUSH2 0x23CF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x247F DUP3 PUSH2 0x2318 JUMP JUMPDEST PUSH2 0x2489 DUP2 DUP6 PUSH2 0x2323 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x249B DUP6 PUSH2 0x2334 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x24D6 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 PUSH2 0x24B7 DUP6 DUP3 PUSH2 0x2453 JUMP JUMPDEST SWAP5 POP PUSH2 0x24C2 DUP4 PUSH2 0x2467 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x249F JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x24FD PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1FE5 JUMP JUMPDEST PUSH2 0x250A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A47 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x251C DUP2 DUP5 PUSH2 0x2474 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x252F DUP2 PUSH2 0x1A71 JUMP JUMPDEST DUP2 EQ PUSH2 0x253A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x254C DUP2 PUSH2 0x2526 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2568 JUMPI PUSH2 0x2567 PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2576 DUP5 DUP3 DUP6 ADD PUSH2 0x253D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4661696C656420746F20617070726F76652064656C6567617465206D6574686F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25DB PUSH1 0x21 DUP4 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x25E6 DUP3 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x260A DUP2 PUSH2 0x25CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x264B DUP3 PUSH2 0x1A3D JUMP JUMPDEST SWAP2 POP PUSH2 0x2656 DUP4 PUSH2 0x1A3D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2666 JUMPI PUSH2 0x2665 PUSH2 0x2611 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x267C DUP3 PUSH2 0x1A3D JUMP JUMPDEST SWAP2 POP PUSH2 0x2687 DUP4 PUSH2 0x1A3D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x269F JUMPI PUSH2 0x269E PUSH2 0x203C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x26B4 DUP2 PUSH2 0x1CFF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26D0 JUMPI PUSH2 0x26CF PUSH2 0x19A8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26DE DUP5 DUP3 DUP6 ADD PUSH2 0x26A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2743 PUSH1 0x26 DUP4 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x274E DUP3 PUSH2 0x26E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2772 DUP2 PUSH2 0x2736 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27AF PUSH1 0x1F DUP4 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x27BA DUP3 PUSH2 0x2779 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x27DE DUP2 PUSH2 0x27A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x281B PUSH1 0x10 DUP4 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2826 DUP3 PUSH2 0x27E5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x284A DUP2 PUSH2 0x280E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2887 PUSH1 0x20 DUP4 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2892 DUP3 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x28B6 DUP2 PUSH2 0x287A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x28D2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1FE5 JUMP JUMPDEST PUSH2 0x28DF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FE5 JUMP JUMPDEST PUSH2 0x28EC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A47 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2950 PUSH1 0x2A DUP4 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x295B DUP3 PUSH2 0x28F4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x297F DUP2 PUSH2 0x2943 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E2 PUSH1 0x26 DUP4 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x29ED DUP3 PUSH2 0x2986 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A11 DUP2 PUSH2 0x29D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A39 DUP3 PUSH2 0x2A18 JUMP JUMPDEST PUSH2 0x2A43 DUP2 DUP6 PUSH2 0x2A23 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A53 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x21AC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A6B DUP3 DUP5 PUSH2 0x2A2E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AAC PUSH1 0x1D DUP4 PUSH2 0x20AD JUMP JUMPDEST SWAP2 POP PUSH2 0x2AB7 DUP3 PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2ADB DUP2 PUSH2 0x2A9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2AFC DUP2 DUP5 PUSH2 0x21D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD OR 0x5E PUSH19 0x649FC590C32E72BA343166CECEC776C9B550F6 0xF8 MSTORE 0xB8 MSTORE 0xCD SELFDESTRUCT 0xB2 SWAP9 PUSH30 0x64736F6C6343000812003300000000000000000000000000000000000000 ",
							"sourceMap": "862:10838:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11095:99;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11274:110;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1973:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6964:275;;;:::i;:::-;;11587:110;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10302:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1615:84:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6291:554:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10496:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;:::i;:::-;;1701:26:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1907:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10721:113;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5437:561;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8801:304;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2236:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1297:326:12;;;:::i;:::-;;2062:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7531:1029;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4935:222;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10907:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1771:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2130:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1855:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11095:99:12;11151:7;11173:16;11181:7;11173;:16::i;:::-;11166:23;;11095:99;;;:::o;2365:42::-;;;;;;;;;;;;;;;;;:::o;11274:110::-;11329:7;11364:15;;11351:10;;:28;;;;:::i;:::-;11344:35;;11274:110;:::o;1973:39::-;;;;:::o;6964:275::-;2261:21:2;:19;:21::i;:::-;1239:19:1::1;:17;:19::i;:::-;7028:10:12::2;3912:17;:15;:17::i;:::-;3889:20;:40;;;;3952:27;:25;:27::i;:::-;3935:14;:44;;;;4008:1;3989:21;;:7;:21;;;3985:143;;4041:16;4049:7;4041;:16::i;:::-;4022:7;:16;4030:7;4022:16;;;;;;;;;;;;;;;:35;;;;4101:20;;4067:22;:31;4090:7;4067:31;;;;;;;;;;;;;;;:54;;;;3985:143;7046:14:::3;7063:7;:19;7071:10;7063:19;;;;;;;;;;;;;;;;7046:36;;7101:1;7092:6;:10;7088:147;;;7134:1;7112:7;:19;7120:10;7112:19;;;;;;;;;;;;;;;:23;;;;7143:45;7169:10;7181:6;7143:12;;;;;;;;;;;:25;;;;:45;;;;;:::i;:::-;7209:10;7201:27;;;7221:6;7201:27;;;;;;:::i;:::-;;;;;;;;7088:147;7040:199;1268:1:1::2;2303:20:2::0;:18;:20::i;:::-;6964:275:12:o;11587:110::-;11647:4;11670:13;:20;11684:5;11670:20;;;;;;;;;;;;;;;;;;;;;;;;;11663:27;;11587:110;;;:::o;10302:90::-;10354:7;10376:11;;10369:18;;10302:90;:::o;1615:84:1:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;6291:554:12:-;1239:19:1;:17;:19::i;:::-;6534:18:12::1;:25;6505:18;:25;:54;:114;;;;;6604:8;:15;6575:18;:25;:44;6505:114;6484:189;;;;;;;;;;;;:::i;:::-;;;;;;;;;6688:9;6683:156;6707:18;:25;6703:1;:29;6683:156;;;6753:75;6770:18;6789:1;6770:21;;;;;;;;:::i;:::-;;;;;;;;6793:18;6812:1;6793:21;;;;;;;;:::i;:::-;;;;;;;;6816:8;6825:1;6816:11;;;;;;;;:::i;:::-;;;;;;;;6753:16;:75::i;:::-;;6734:3;;;;;:::i;:::-;;;;6683:156;;;;6291:554:::0;;;:::o;10496:103::-;10555:7;10577:8;:17;10586:7;10577:17;;;;;;;;;;;;;;;;10570:24;;10496:103;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;1701:26:12:-;;;;;;;;;;;;;:::o;1907:25::-;;;;:::o;10721:113::-;10780:7;10802:27;:25;:27::i;:::-;10795:34;;10721:113;:::o;5437:561::-;5631:5;1239:19:1;:17;:19::i;:::-;5610:10:12::1;3912:17;:15;:17::i;:::-;3889:20;:40;;;;3952:27;:25;:27::i;:::-;3935:14;:44;;;;4008:1;3989:21;;:7;:21;;;3985:143;;4041:16;4049:7;4041;:16::i;:::-;4022:7;:16;4030:7;4022:16;;;;;;;;;;;;;;;:35;;;;4101:20;;4067:22;:31;4090:7;4067:31;;;;;;;;;;;;;;;:54;;;;3985:143;5663:1:::2;5652:7;:12;5648:62;;5687:12;;;;;;;;;;;;;;5648:62;5719:20;221:42:13;5742:27:12;;;5770:10;5782:17;5801;5820:7;5742:86;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5719:109;;5866:7;5852:11;;:21;;;;:::i;:::-;5838:11;:35;;;;5907:7;5883:8;:20;5892:10;5883:20;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;5940:10;5929:31;;;5952:7;5929:31;;;;;;:::i;:::-;;;;;;;;5977:14;5970:21;;;1268:1:1::1;5437:561:12::0;;;;;:::o;8801:304::-;1094:13:0;:11;:13::i;:::-;8931:12:12::1;;;;;;;;;;;8907:37;;:12;:37;;::::0;8903:90:::1;;8961:25;;;;;;;;;;;;;;8903:90;8998:55;9032:7;:5;:7::i;:::-;9041:11;9005:12;8998:33;;;;:55;;;;;:::i;:::-;9064:36;9074:12;9088:11;9064:36;;;;;;;:::i;:::-;;;;;;;;8801:304:::0;;:::o;2236:57::-;;;;;;;;;;;;;;;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1297:326:12:-;1348:12;221:42:13;1363:24:12;;;1401:10;1425:17;1456:14;1363:117;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1348:132;;1498:7;1490:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1581:4;1553:13;:25;1567:10;1553:25;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;1338:285;1297:326::o;2062:29::-;;;;:::o;7531:1029::-;1094:13:0;:11;:13::i;:::-;1239:19:1::1;:17;:19::i;:::-;7621:1:12::2;3912:17;:15;:17::i;:::-;3889:20;:40;;;;3952:27;:25;:27::i;:::-;3935:14;:44;;;;4008:1;3989:21;;:7;:21;;;3985:143;;4041:16;4049:7;4041;:16::i;:::-;4022:7;:16;4030:7;4022:16;;;;;;;;;;;;;;;:35;;;;4101:20;;4067:22;:31;4090:7;4067:31;;;;;;;;;;;;;;;:54;;;;3985:143;7654:12:::3;;7635:15;:31;7631:267;;7698:15;;7689:6;:24;;;;:::i;:::-;7676:10;:37;;;;7631:267;;;7734:17;7769:15;7754:12;;:30;;;;:::i;:::-;7734:50;;7792:16;7823:10;;7811:9;:22;;;;:::i;:::-;7792:41;;7876:15;;7864:8;7855:6;:17;;;;:::i;:::-;7854:37;;;;:::i;:::-;7841:10;:50;;;;7726:172;;7631:267;8225:64;8255:10;8275:4;8282:6;8225:12;;;;;;;;;;;:29;;;;:64;;;;;;:::i;:::-;8295:15;8313:12;;;;;;;;;;;:22;;;8344:4;8313:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8295:55;;8383:15;;8373:7;:25;;;;:::i;:::-;8360:10;;:38;8356:81;;;8415:15;;;;;;;;;;;;;;8356:81;8460:15;8443:14;:32;;;;8514:15;;8496;:33;;;;:::i;:::-;8481:12;:48;;;;8541:14;8548:6;8541:14;;;;;;:::i;:::-;;;;;;;;7625:935;1268:1:1::2;7531:1029:12::0;:::o;4935:222::-;1094:13:0;:11;:13::i;:::-;5028:12:12::1;;5010:15;:30;5006:72;;;5057:14;;;;;;;;;;;;;;5006:72;5101:8;5083:15;:26;;;;5120:32;5143:8;5120:32;;;;;;:::i;:::-;;;;;;;;4935:222:::0;:::o;10907:93::-;10956:7;10978:17;:15;:17::i;:::-;10971:24;;10907:93;:::o;1771:26::-;;;;;;;;;;;;;:::o;2130:35::-;;;;:::o;1855:27::-;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;9786:211:12:-;9843:7;9976;:16;9984:7;9976:16;;;;;;;;;;;;;;;;9963:4;9921:22;:31;9944:7;9921:31;;;;;;;;;;;;;;;;9901:17;:15;:17::i;:::-;:51;;;;:::i;:::-;9872:8;:17;9881:7;9872:17;;;;;;;;;;;;;;;;:81;;;;:::i;:::-;9871:96;;;;:::i;:::-;:121;;;;:::i;:::-;9858:134;;9786:211;;;:::o;2336:287:2:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1767:106:1:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;9513:269:12:-;9563:7;9597:1;9582:11;;:16;9578:64;;9615:20;;9608:27;;;;9578:64;9766:11;;9752:4;9739:10;;9721:14;;9691:27;:25;:27::i;:::-;:44;;;;:::i;:::-;9690:59;;;;:::i;:::-;:66;;;;:::i;:::-;9689:88;;;;:::i;:::-;9660:20;;:117;;;;:::i;:::-;9647:130;;9513:269;;:::o;9359:150::-;9419:7;9459:12;;9441:15;:30;:63;;9492:12;;9441:63;;;9474:15;9441:63;9434:70;;9359:150;:::o;941:175:5:-;1023:86;1043:5;1073:23;;;1098:2;1102:5;1050:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;2629:209:2:-;1716:1;2809:7;:22;;;;2629:209::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;1355:203:5:-;1455:96;1475:5;1505:27;;;1534:4;1540:2;1544:5;1482:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:19;:96::i;:::-;1355:203;;;;:::o;5173:642::-;5592:23;5618:69;5646:4;5618:69;;;;;;;;;;;;;;;;;5626:5;5618:27;;;;:69;;;;;:::i;:::-;5592:95;;5726:1;5705:10;:17;:22;:56;;;;5742:10;5731:30;;;;;;;;;;;;:::i;:::-;5705:56;5697:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;5243:572;5173:642;;:::o;640:96:7:-;693:7;719:10;712:17;;640:96;:::o;4108:223:6:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;;4108:223;;;;;:::o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5446:12;5460:23;5487:6;:11;;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;;;;5165:446;;;;;;:::o;7671:628::-;7851:12;7879:7;7875:418;;;7927:1;7906:10;:17;:22;7902:286;;8121:18;8132:6;8121:10;:18::i;:::-;8113:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7902:286;8208:10;8201:17;;;;7875:418;8249:33;8257:10;8269:12;8249:7;:33::i;:::-;7671:628;;;;;;;:::o;1412:320::-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8821:540::-;9000:1;8980:10;:17;:21;8976:379;;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:75:15;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:90::-;1645:7;1688:5;1681:13;1674:21;1663:32;;1611:90;;;:::o;1707:109::-;1788:21;1803:5;1788:21;:::i;:::-;1783:3;1776:34;1707:109;;:::o;1822:210::-;1909:4;1947:2;1936:9;1932:18;1924:26;;1960:65;2022:1;2011:9;2007:17;1998:6;1960:65;:::i;:::-;1822:210;;;;:::o;2038:117::-;2147:1;2144;2137:12;2161:102;2202:6;2253:2;2249:7;2244:2;2237:5;2233:14;2229:28;2219:38;;2161:102;;;:::o;2269:180::-;2317:77;2314:1;2307:88;2414:4;2411:1;2404:15;2438:4;2435:1;2428:15;2455:281;2538:27;2560:4;2538:27;:::i;:::-;2530:6;2526:40;2668:6;2656:10;2653:22;2632:18;2620:10;2617:34;2614:62;2611:88;;;2679:18;;:::i;:::-;2611:88;2719:10;2715:2;2708:22;2498:238;2455:281;;:::o;2742:129::-;2776:6;2803:20;;:::i;:::-;2793:30;;2832:33;2860:4;2852:6;2832:33;:::i;:::-;2742:129;;;:::o;2877:321::-;2964:4;3054:18;3046:6;3043:30;3040:56;;;3076:18;;:::i;:::-;3040:56;3126:4;3118:6;3114:17;3106:25;;3186:4;3180;3176:15;3168:23;;2877:321;;;:::o;3204:117::-;3313:1;3310;3303:12;3327:117;3436:1;3433;3426:12;3450:308;3512:4;3602:18;3594:6;3591:30;3588:56;;;3624:18;;:::i;:::-;3588:56;3662:29;3684:6;3662:29;:::i;:::-;3654:37;;3746:4;3740;3736:15;3728:23;;3450:308;;;:::o;3764:146::-;3861:6;3856:3;3851;3838:30;3902:1;3893:6;3888:3;3884:16;3877:27;3764:146;;;:::o;3916:425::-;3994:5;4019:66;4035:49;4077:6;4035:49;:::i;:::-;4019:66;:::i;:::-;4010:75;;4108:6;4101:5;4094:21;4146:4;4139:5;4135:16;4184:3;4175:6;4170:3;4166:16;4163:25;4160:112;;;4191:79;;:::i;:::-;4160:112;4281:54;4328:6;4323:3;4318;4281:54;:::i;:::-;4000:341;3916:425;;;;;:::o;4361:340::-;4417:5;4466:3;4459:4;4451:6;4447:17;4443:27;4433:122;;4474:79;;:::i;:::-;4433:122;4591:6;4578:20;4616:79;4691:3;4683:6;4676:4;4668:6;4664:17;4616:79;:::i;:::-;4607:88;;4423:278;4361:340;;;;:::o;4723:945::-;4829:5;4854:91;4870:74;4937:6;4870:74;:::i;:::-;4854:91;:::i;:::-;4845:100;;4965:5;4994:6;4987:5;4980:21;5028:4;5021:5;5017:16;5010:23;;5081:4;5073:6;5069:17;5061:6;5057:30;5110:3;5102:6;5099:15;5096:122;;;5129:79;;:::i;:::-;5096:122;5244:6;5227:435;5261:6;5256:3;5253:15;5227:435;;;5350:3;5337:17;5386:18;5373:11;5370:35;5367:122;;;5408:79;;:::i;:::-;5367:122;5532:11;5524:6;5520:24;5570:47;5613:3;5601:10;5570:47;:::i;:::-;5565:3;5558:60;5647:4;5642:3;5638:14;5631:21;;5303:359;;5287:4;5282:3;5278:14;5271:21;;5227:435;;;5231:21;4835:833;;4723:945;;;;;:::o;5690:390::-;5771:5;5820:3;5813:4;5805:6;5801:17;5797:27;5787:122;;5828:79;;:::i;:::-;5787:122;5945:6;5932:20;5970:104;6070:3;6062:6;6055:4;6047:6;6043:17;5970:104;:::i;:::-;5961:113;;5777:303;5690:390;;;;:::o;6086:311::-;6163:4;6253:18;6245:6;6242:30;6239:56;;;6275:18;;:::i;:::-;6239:56;6325:4;6317:6;6313:17;6305:25;;6385:4;6379;6375:15;6367:23;;6086:311;;;:::o;6403:122::-;6476:24;6494:5;6476:24;:::i;:::-;6469:5;6466:35;6456:63;;6515:1;6512;6505:12;6456:63;6403:122;:::o;6531:139::-;6577:5;6615:6;6602:20;6593:29;;6631:33;6658:5;6631:33;:::i;:::-;6531:139;;;;:::o;6693:710::-;6789:5;6814:81;6830:64;6887:6;6830:64;:::i;:::-;6814:81;:::i;:::-;6805:90;;6915:5;6944:6;6937:5;6930:21;6978:4;6971:5;6967:16;6960:23;;7031:4;7023:6;7019:17;7011:6;7007:30;7060:3;7052:6;7049:15;7046:122;;;7079:79;;:::i;:::-;7046:122;7194:6;7177:220;7211:6;7206:3;7203:15;7177:220;;;7286:3;7315:37;7348:3;7336:10;7315:37;:::i;:::-;7310:3;7303:50;7382:4;7377:3;7373:14;7366:21;;7253:144;7237:4;7232:3;7228:14;7221:21;;7177:220;;;7181:21;6795:608;;6693:710;;;;;:::o;7426:370::-;7497:5;7546:3;7539:4;7531:6;7527:17;7523:27;7513:122;;7554:79;;:::i;:::-;7513:122;7671:6;7658:20;7696:94;7786:3;7778:6;7771:4;7763:6;7759:17;7696:94;:::i;:::-;7687:103;;7503:293;7426:370;;;;:::o;7802:1289::-;7974:6;7982;7990;8039:2;8027:9;8018:7;8014:23;8010:32;8007:119;;;8045:79;;:::i;:::-;8007:119;8193:1;8182:9;8178:17;8165:31;8223:18;8215:6;8212:30;8209:117;;;8245:79;;:::i;:::-;8209:117;8350:88;8430:7;8421:6;8410:9;8406:22;8350:88;:::i;:::-;8340:98;;8136:312;8515:2;8504:9;8500:18;8487:32;8546:18;8538:6;8535:30;8532:117;;;8568:79;;:::i;:::-;8532:117;8673:88;8753:7;8744:6;8733:9;8729:22;8673:88;:::i;:::-;8663:98;;8458:313;8838:2;8827:9;8823:18;8810:32;8869:18;8861:6;8858:30;8855:117;;;8891:79;;:::i;:::-;8855:117;8996:78;9066:7;9057:6;9046:9;9042:22;8996:78;:::i;:::-;8986:88;;8781:303;7802:1289;;;;;:::o;9097:60::-;9125:3;9146:5;9139:12;;9097:60;;;:::o;9163:142::-;9213:9;9246:53;9264:34;9273:24;9291:5;9273:24;:::i;:::-;9264:34;:::i;:::-;9246:53;:::i;:::-;9233:66;;9163:142;;;:::o;9311:126::-;9361:9;9394:37;9425:5;9394:37;:::i;:::-;9381:50;;9311:126;;;:::o;9443:140::-;9507:9;9540:37;9571:5;9540:37;:::i;:::-;9527:50;;9443:140;;;:::o;9589:159::-;9690:51;9735:5;9690:51;:::i;:::-;9685:3;9678:64;9589:159;;:::o;9754:250::-;9861:4;9899:2;9888:9;9884:18;9876:26;;9912:85;9994:1;9983:9;9979:17;9970:6;9912:85;:::i;:::-;9754:250;;;;:::o;10010:979::-;10107:6;10115;10123;10172:2;10160:9;10151:7;10147:23;10143:32;10140:119;;;10178:79;;:::i;:::-;10140:119;10326:1;10315:9;10311:17;10298:31;10356:18;10348:6;10345:30;10342:117;;;10378:79;;:::i;:::-;10342:117;10483:63;10538:7;10529:6;10518:9;10514:22;10483:63;:::i;:::-;10473:73;;10269:287;10623:2;10612:9;10608:18;10595:32;10654:18;10646:6;10643:30;10640:117;;;10676:79;;:::i;:::-;10640:117;10781:63;10836:7;10827:6;10816:9;10812:22;10781:63;:::i;:::-;10771:73;;10566:288;10893:2;10919:53;10964:7;10955:6;10944:9;10940:22;10919:53;:::i;:::-;10909:63;;10864:118;10010:979;;;;;:::o;10995:90::-;11030:7;11073:5;11070:1;11059:20;11048:31;;10995:90;;;:::o;11091:112::-;11174:22;11190:5;11174:22;:::i;:::-;11169:3;11162:35;11091:112;;:::o;11209:214::-;11298:4;11336:2;11325:9;11321:18;11313:26;;11349:67;11413:1;11402:9;11398:17;11389:6;11349:67;:::i;:::-;11209:214;;;;:::o;11429:474::-;11497:6;11505;11554:2;11542:9;11533:7;11529:23;11525:32;11522:119;;;11560:79;;:::i;:::-;11522:119;11680:1;11705:53;11750:7;11741:6;11730:9;11726:22;11705:53;:::i;:::-;11695:63;;11651:117;11807:2;11833:53;11878:7;11869:6;11858:9;11854:22;11833:53;:::i;:::-;11823:63;;11778:118;11429:474;;;;;:::o;11909:118::-;11996:24;12014:5;11996:24;:::i;:::-;11991:3;11984:37;11909:118;;:::o;12033:222::-;12126:4;12164:2;12153:9;12149:18;12141:26;;12177:71;12245:1;12234:9;12230:17;12221:6;12177:71;:::i;:::-;12033:222;;;;:::o;12261:329::-;12320:6;12369:2;12357:9;12348:7;12344:23;12340:32;12337:119;;;12375:79;;:::i;:::-;12337:119;12495:1;12520:53;12565:7;12556:6;12545:9;12541:22;12520:53;:::i;:::-;12510:63;;12466:117;12261:329;;;;:::o;12596:180::-;12644:77;12641:1;12634:88;12741:4;12738:1;12731:15;12765:4;12762:1;12755:15;12782:410;12822:7;12845:20;12863:1;12845:20;:::i;:::-;12840:25;;12879:20;12897:1;12879:20;:::i;:::-;12874:25;;12934:1;12931;12927:9;12956:30;12974:11;12956:30;:::i;:::-;12945:41;;13135:1;13126:7;13122:15;13119:1;13116:22;13096:1;13089:9;13069:83;13046:139;;13165:18;;:::i;:::-;13046:139;12830:362;12782:410;;;;:::o;13198:169::-;13282:11;13316:6;13311:3;13304:19;13356:4;13351:3;13347:14;13332:29;;13198:169;;;;:::o;13373:178::-;13513:30;13509:1;13501:6;13497:14;13490:54;13373:178;:::o;13557:366::-;13699:3;13720:67;13784:2;13779:3;13720:67;:::i;:::-;13713:74;;13796:93;13885:3;13796:93;:::i;:::-;13914:2;13909:3;13905:12;13898:19;;13557:366;;;:::o;13929:419::-;14095:4;14133:2;14122:9;14118:18;14110:26;;14182:9;14176:4;14172:20;14168:1;14157:9;14153:17;14146:47;14210:131;14336:4;14210:131;:::i;:::-;14202:139;;13929:419;;;:::o;14354:180::-;14402:77;14399:1;14392:88;14499:4;14496:1;14489:15;14523:4;14520:1;14513:15;14540:233;14579:3;14602:24;14620:5;14602:24;:::i;:::-;14593:33;;14648:66;14641:5;14638:77;14635:103;;14718:18;;:::i;:::-;14635:103;14765:1;14758:5;14754:13;14747:20;;14540:233;;;:::o;14779:99::-;14831:6;14865:5;14859:12;14849:22;;14779:99;;;:::o;14884:246::-;14965:1;14975:113;14989:6;14986:1;14983:13;14975:113;;;15074:1;15069:3;15065:11;15059:18;15055:1;15050:3;15046:11;15039:39;15011:2;15008:1;15004:10;14999:15;;14975:113;;;15122:1;15113:6;15108:3;15104:16;15097:27;14946:184;14884:246;;;:::o;15136:377::-;15224:3;15252:39;15285:5;15252:39;:::i;:::-;15307:71;15371:6;15366:3;15307:71;:::i;:::-;15300:78;;15387:65;15445:6;15440:3;15433:4;15426:5;15422:16;15387:65;:::i;:::-;15477:29;15499:6;15477:29;:::i;:::-;15472:3;15468:39;15461:46;;15228:285;15136:377;;;;:::o;15519:735::-;15736:4;15774:3;15763:9;15759:19;15751:27;;15788:71;15856:1;15845:9;15841:17;15832:6;15788:71;:::i;:::-;15906:9;15900:4;15896:20;15891:2;15880:9;15876:18;15869:48;15934:78;16007:4;15998:6;15934:78;:::i;:::-;15926:86;;16059:9;16053:4;16049:20;16044:2;16033:9;16029:18;16022:48;16087:78;16160:4;16151:6;16087:78;:::i;:::-;16079:86;;16175:72;16243:2;16232:9;16228:18;16219:6;16175:72;:::i;:::-;15519:735;;;;;;;:::o;16260:118::-;16331:22;16347:5;16331:22;:::i;:::-;16324:5;16321:33;16311:61;;16368:1;16365;16358:12;16311:61;16260:118;:::o;16384:139::-;16439:5;16470:6;16464:13;16455:22;;16486:31;16511:5;16486:31;:::i;:::-;16384:139;;;;:::o;16529:347::-;16597:6;16646:2;16634:9;16625:7;16621:23;16617:32;16614:119;;;16652:79;;:::i;:::-;16614:119;16772:1;16797:62;16851:7;16842:6;16831:9;16827:22;16797:62;:::i;:::-;16787:72;;16743:126;16529:347;;;;:::o;16882:191::-;16922:3;16941:20;16959:1;16941:20;:::i;:::-;16936:25;;16975:20;16993:1;16975:20;:::i;:::-;16970:25;;17018:1;17015;17011:9;17004:16;;17039:3;17036:1;17033:10;17030:36;;;17046:18;;:::i;:::-;17030:36;16882:191;;;;:::o;17079:332::-;17200:4;17238:2;17227:9;17223:18;17215:26;;17251:71;17319:1;17308:9;17304:17;17295:6;17251:71;:::i;:::-;17332:72;17400:2;17389:9;17385:18;17376:6;17332:72;:::i;:::-;17079:332;;;;;:::o;17417:118::-;17488:6;17522:5;17516:12;17506:22;;17417:118;;;:::o;17541:194::-;17650:11;17684:6;17679:3;17672:19;17724:4;17719:3;17715:14;17700:29;;17541:194;;;;:::o;17741:163::-;17812:4;17835:3;17827:11;;17858:3;17855:1;17848:14;17892:4;17889:1;17879:18;17871:26;;17741:163;;;:::o;17910:180::-;17958:77;17955:1;17948:88;18055:4;18052:1;18045:15;18079:4;18076:1;18069:15;18096:320;18140:6;18177:1;18171:4;18167:12;18157:22;;18224:1;18218:4;18214:12;18245:18;18235:81;;18301:4;18293:6;18289:17;18279:27;;18235:81;18363:2;18355:6;18352:14;18332:18;18329:38;18326:84;;18382:18;;:::i;:::-;18326:84;18147:269;18096:320;;;:::o;18422:159::-;18496:11;18530:6;18525:3;18518:19;18570:4;18565:3;18561:14;18546:29;;18422:159;;;;:::o;18587:141::-;18636:4;18659:3;18651:11;;18682:3;18679:1;18672:14;18716:4;18713:1;18703:18;18695:26;;18587:141;;;:::o;18758:811::-;18833:3;18870:5;18864:12;18899:36;18925:9;18899:36;:::i;:::-;18951:61;19005:6;19000:3;18951:61;:::i;:::-;18944:68;;19043:1;19032:9;19028:17;19059:1;19054:164;;;;19232:1;19227:336;;;;19021:542;;19054:164;19138:4;19134:9;19123;19119:25;19114:3;19107:38;19198:6;19191:14;19184:22;19178:4;19174:33;19169:3;19165:43;19158:50;;19054:164;;19227:336;19294:38;19326:5;19294:38;:::i;:::-;19354:1;19368:154;19382:6;19379:1;19376:13;19368:154;;;19456:7;19450:14;19446:1;19441:3;19437:11;19430:35;19506:1;19497:7;19493:15;19482:26;;19404:4;19401:1;19397:12;19392:17;;19368:154;;;19551:1;19546:3;19542:11;19535:18;;19234:329;;19021:542;;18837:732;;18758:811;;;;:::o;19575:190::-;19661:10;19696:63;19755:3;19747:6;19696:63;:::i;:::-;19682:77;;19575:190;;;;:::o;19771:117::-;19845:4;19877;19872:3;19868:14;19860:22;;19771:117;;;:::o;19922:957::-;20055:3;20084:58;20136:5;20084:58;:::i;:::-;20158:96;20247:6;20242:3;20158:96;:::i;:::-;20151:103;;20280:3;20325:4;20317:6;20313:17;20308:3;20304:27;20355:60;20409:5;20355:60;:::i;:::-;20438:7;20469:1;20454:380;20479:6;20476:1;20473:13;20454:380;;;20550:9;20544:4;20540:20;20535:3;20528:33;20595:6;20622:81;20698:4;20683:13;20622:81;:::i;:::-;20614:89;;20726:64;20783:6;20726:64;:::i;:::-;20716:74;;20819:4;20814:3;20810:14;20803:21;;20514:320;20501:1;20498;20494:9;20489:14;;20454:380;;;20458:14;20850:4;20843:11;;20870:3;20863:10;;20060:819;;;;;19922:957;;;;:::o;20885:621::-;21098:4;21136:2;21125:9;21121:18;21113:26;;21149:71;21217:1;21206:9;21202:17;21193:6;21149:71;:::i;:::-;21230:72;21298:2;21287:9;21283:18;21274:6;21230:72;:::i;:::-;21349:9;21343:4;21339:20;21334:2;21323:9;21319:18;21312:48;21377:122;21494:4;21485:6;21377:122;:::i;:::-;21369:130;;20885:621;;;;;;:::o;21512:116::-;21582:21;21597:5;21582:21;:::i;:::-;21575:5;21572:32;21562:60;;21618:1;21615;21608:12;21562:60;21512:116;:::o;21634:137::-;21688:5;21719:6;21713:13;21704:22;;21735:30;21759:5;21735:30;:::i;:::-;21634:137;;;;:::o;21777:345::-;21844:6;21893:2;21881:9;21872:7;21868:23;21864:32;21861:119;;;21899:79;;:::i;:::-;21861:119;22019:1;22044:61;22097:7;22088:6;22077:9;22073:22;22044:61;:::i;:::-;22034:71;;21990:125;21777:345;;;;:::o;22128:220::-;22268:34;22264:1;22256:6;22252:14;22245:58;22337:3;22332:2;22324:6;22320:15;22313:28;22128:220;:::o;22354:366::-;22496:3;22517:67;22581:2;22576:3;22517:67;:::i;:::-;22510:74;;22593:93;22682:3;22593:93;:::i;:::-;22711:2;22706:3;22702:12;22695:19;;22354:366;;;:::o;22726:419::-;22892:4;22930:2;22919:9;22915:18;22907:26;;22979:9;22973:4;22969:20;22965:1;22954:9;22950:17;22943:47;23007:131;23133:4;23007:131;:::i;:::-;22999:139;;22726:419;;;:::o;23151:180::-;23199:77;23196:1;23189:88;23296:4;23293:1;23286:15;23320:4;23317:1;23310:15;23337:185;23377:1;23394:20;23412:1;23394:20;:::i;:::-;23389:25;;23428:20;23446:1;23428:20;:::i;:::-;23423:25;;23467:1;23457:35;;23472:18;;:::i;:::-;23457:35;23514:1;23511;23507:9;23502:14;;23337:185;;;;:::o;23528:194::-;23568:4;23588:20;23606:1;23588:20;:::i;:::-;23583:25;;23622:20;23640:1;23622:20;:::i;:::-;23617:25;;23666:1;23663;23659:9;23651:17;;23690:1;23684:4;23681:11;23678:37;;;23695:18;;:::i;:::-;23678:37;23528:194;;;;:::o;23728:143::-;23785:5;23816:6;23810:13;23801:22;;23832:33;23859:5;23832:33;:::i;:::-;23728:143;;;;:::o;23877:351::-;23947:6;23996:2;23984:9;23975:7;23971:23;23967:32;23964:119;;;24002:79;;:::i;:::-;23964:119;24122:1;24147:64;24203:7;24194:6;24183:9;24179:22;24147:64;:::i;:::-;24137:74;;24093:128;23877:351;;;;:::o;24234:225::-;24374:34;24370:1;24362:6;24358:14;24351:58;24443:8;24438:2;24430:6;24426:15;24419:33;24234:225;:::o;24465:366::-;24607:3;24628:67;24692:2;24687:3;24628:67;:::i;:::-;24621:74;;24704:93;24793:3;24704:93;:::i;:::-;24822:2;24817:3;24813:12;24806:19;;24465:366;;;:::o;24837:419::-;25003:4;25041:2;25030:9;25026:18;25018:26;;25090:9;25084:4;25080:20;25076:1;25065:9;25061:17;25054:47;25118:131;25244:4;25118:131;:::i;:::-;25110:139;;24837:419;;;:::o;25262:181::-;25402:33;25398:1;25390:6;25386:14;25379:57;25262:181;:::o;25449:366::-;25591:3;25612:67;25676:2;25671:3;25612:67;:::i;:::-;25605:74;;25688:93;25777:3;25688:93;:::i;:::-;25806:2;25801:3;25797:12;25790:19;;25449:366;;;:::o;25821:419::-;25987:4;26025:2;26014:9;26010:18;26002:26;;26074:9;26068:4;26064:20;26060:1;26049:9;26045:17;26038:47;26102:131;26228:4;26102:131;:::i;:::-;26094:139;;25821:419;;;:::o;26246:166::-;26386:18;26382:1;26374:6;26370:14;26363:42;26246:166;:::o;26418:366::-;26560:3;26581:67;26645:2;26640:3;26581:67;:::i;:::-;26574:74;;26657:93;26746:3;26657:93;:::i;:::-;26775:2;26770:3;26766:12;26759:19;;26418:366;;;:::o;26790:419::-;26956:4;26994:2;26983:9;26979:18;26971:26;;27043:9;27037:4;27033:20;27029:1;27018:9;27014:17;27007:47;27071:131;27197:4;27071:131;:::i;:::-;27063:139;;26790:419;;;:::o;27215:182::-;27355:34;27351:1;27343:6;27339:14;27332:58;27215:182;:::o;27403:366::-;27545:3;27566:67;27630:2;27625:3;27566:67;:::i;:::-;27559:74;;27642:93;27731:3;27642:93;:::i;:::-;27760:2;27755:3;27751:12;27744:19;;27403:366;;;:::o;27775:419::-;27941:4;27979:2;27968:9;27964:18;27956:26;;28028:9;28022:4;28018:20;28014:1;28003:9;27999:17;27992:47;28056:131;28182:4;28056:131;:::i;:::-;28048:139;;27775:419;;;:::o;28200:442::-;28349:4;28387:2;28376:9;28372:18;28364:26;;28400:71;28468:1;28457:9;28453:17;28444:6;28400:71;:::i;:::-;28481:72;28549:2;28538:9;28534:18;28525:6;28481:72;:::i;:::-;28563;28631:2;28620:9;28616:18;28607:6;28563:72;:::i;:::-;28200:442;;;;;;:::o;28648:229::-;28788:34;28784:1;28776:6;28772:14;28765:58;28857:12;28852:2;28844:6;28840:15;28833:37;28648:229;:::o;28883:366::-;29025:3;29046:67;29110:2;29105:3;29046:67;:::i;:::-;29039:74;;29122:93;29211:3;29122:93;:::i;:::-;29240:2;29235:3;29231:12;29224:19;;28883:366;;;:::o;29255:419::-;29421:4;29459:2;29448:9;29444:18;29436:26;;29508:9;29502:4;29498:20;29494:1;29483:9;29479:17;29472:47;29536:131;29662:4;29536:131;:::i;:::-;29528:139;;29255:419;;;:::o;29680:225::-;29820:34;29816:1;29808:6;29804:14;29797:58;29889:8;29884:2;29876:6;29872:15;29865:33;29680:225;:::o;29911:366::-;30053:3;30074:67;30138:2;30133:3;30074:67;:::i;:::-;30067:74;;30150:93;30239:3;30150:93;:::i;:::-;30268:2;30263:3;30259:12;30252:19;;29911:366;;;:::o;30283:419::-;30449:4;30487:2;30476:9;30472:18;30464:26;;30536:9;30530:4;30526:20;30522:1;30511:9;30507:17;30500:47;30564:131;30690:4;30564:131;:::i;:::-;30556:139;;30283:419;;;:::o;30708:98::-;30759:6;30793:5;30787:12;30777:22;;30708:98;;;:::o;30812:147::-;30913:11;30950:3;30935:18;;30812:147;;;;:::o;30965:386::-;31069:3;31097:38;31129:5;31097:38;:::i;:::-;31151:88;31232:6;31227:3;31151:88;:::i;:::-;31144:95;;31248:65;31306:6;31301:3;31294:4;31287:5;31283:16;31248:65;:::i;:::-;31338:6;31333:3;31329:16;31322:23;;31073:278;30965:386;;;;:::o;31357:271::-;31487:3;31509:93;31598:3;31589:6;31509:93;:::i;:::-;31502:100;;31619:3;31612:10;;31357:271;;;;:::o;31634:179::-;31774:31;31770:1;31762:6;31758:14;31751:55;31634:179;:::o;31819:366::-;31961:3;31982:67;32046:2;32041:3;31982:67;:::i;:::-;31975:74;;32058:93;32147:3;32058:93;:::i;:::-;32176:2;32171:3;32167:12;32160:19;;31819:366;;;:::o;32191:419::-;32357:4;32395:2;32384:9;32380:18;32372:26;;32444:9;32438:4;32434:20;32430:1;32419:9;32415:17;32408:47;32472:131;32598:4;32472:131;:::i;:::-;32464:139;;32191:419;;;:::o;32616:313::-;32729:4;32767:2;32756:9;32752:18;32744:26;;32816:9;32810:4;32806:20;32802:1;32791:9;32787:17;32780:47;32844:78;32917:4;32908:6;32844:78;:::i;:::-;32836:86;;32616:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2213200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approveRequiredMethods()": "infinite",
								"balanceOf(address)": "2886",
								"claim()": "infinite",
								"earned(address)": "infinite",
								"fund(uint256)": "infinite",
								"getRewardForDuration()": "infinite",
								"isUserApproved(address)": "3017",
								"lastTimeRewardApplicable()": "4651",
								"lastUpdateTime()": "2540",
								"owner()": "2589",
								"paused()": "2597",
								"periodFinish()": "2517",
								"recoverERC20(address,uint256)": "infinite",
								"redelegateTokens(string,string,uint256)": "infinite",
								"redelegateTokensMultiple(string[],string[],uint256[])": "infinite",
								"renounceOwnership()": "30465",
								"rewardPerToken()": "infinite",
								"rewardPerTokenStored()": "2495",
								"rewardRate()": "2540",
								"rewards(address)": "2860",
								"rewardsDuration()": "2519",
								"rewardsToken()": "infinite",
								"setRewardsDuration(uint256)": "infinite",
								"stakingToken()": "infinite",
								"totalSupplyLocked()": "2483",
								"transferOwnership(address)": "30854",
								"userRewardPerTokenPaid(address)": "2859"
							},
							"internal": {
								"_earned(address)": "infinite",
								"_lastTimeRewardApplicable()": "4256",
								"_rewardPerToken()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 990,
									"end": 1004,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 990,
									"end": 1004,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 990,
									"end": 1004,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 990,
									"end": 1004,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 990,
									"end": 1004,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 990,
									"end": 1004,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 990,
									"end": 1004,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 990,
									"end": 1004,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 990,
									"end": 1004,
									"name": "PUSH",
									"source": 12,
									"value": "2A"
								},
								{
									"begin": 990,
									"end": 1004,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 990,
									"end": 1004,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 990,
									"end": 1004,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 990,
									"end": 1004,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 990,
									"end": 1004,
									"name": "PUSH data",
									"source": 12,
									"value": "17E571B15BA8F3567BE32B8C9B4C10B5AEE7936471ACCDC36D1737426796A31"
								},
								{
									"begin": 990,
									"end": 1004,
									"name": "PUSH",
									"source": 12,
									"value": "2A"
								},
								{
									"begin": 990,
									"end": 1004,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 990,
									"end": 1004,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 955,
									"end": 1005,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 955,
									"end": 1005,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2006,
									"end": 2012,
									"name": "PUSH",
									"source": 12,
									"value": "2A300"
								},
								{
									"begin": 1973,
									"end": 2012,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 1973,
									"end": 2012,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 4534,
									"end": 4746,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "tag",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 4615,
									"end": 4628,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4593,
									"end": 4605,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 4593,
									"end": 4605,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4593,
									"end": 4629,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 4593,
									"end": 4629,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 4593,
									"end": 4629,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4593,
									"end": 4629,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 4593,
									"end": 4629,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4593,
									"end": 4629,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4593,
									"end": 4629,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4593,
									"end": 4629,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4593,
									"end": 4629,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4593,
									"end": 4629,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4593,
									"end": 4629,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4593,
									"end": 4629,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4593,
									"end": 4629,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4593,
									"end": 4629,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4593,
									"end": 4629,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 4593,
									"end": 4629,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4593,
									"end": 4629,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4593,
									"end": 4629,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4665,
									"end": 4707,
									"name": "PUSH",
									"source": 12,
									"value": "BEFE898407483F0F2FF605971FBD8CF8FBD8B160"
								},
								{
									"begin": 4635,
									"end": 4647,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 4635,
									"end": 4647,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4635,
									"end": 4709,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 4635,
									"end": 4709,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 4635,
									"end": 4709,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4635,
									"end": 4709,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 4635,
									"end": 4709,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4635,
									"end": 4709,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4635,
									"end": 4709,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4635,
									"end": 4709,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 4635,
									"end": 4709,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4635,
									"end": 4709,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4635,
									"end": 4709,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4635,
									"end": 4709,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4635,
									"end": 4709,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4635,
									"end": 4709,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4635,
									"end": 4709,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 4635,
									"end": 4709,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4635,
									"end": 4709,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4635,
									"end": 4709,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4733,
									"end": 4741,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4715,
									"end": 4730,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 4715,
									"end": 4741,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4715,
									"end": 4741,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4715,
									"end": 4741,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 4715,
									"end": 4741,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4534,
									"end": 4746,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2543,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2597,
									"end": 2605,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2587,
									"end": 2595,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 862,
									"end": 11700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 862,
									"end": 11700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 862,
									"end": 11700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 862,
									"end": 11700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 862,
									"end": 11700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "74"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "43"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 15,
									"value": "74"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "76"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "44"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 15,
									"value": "76"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "77"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 15,
									"value": "77"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "79"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "45"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 15,
									"value": "79"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "82"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 15,
									"value": "82"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "83"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 15,
									"value": "83"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "85"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "48"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 15,
									"value": "85"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 15,
									"value": "5"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 15
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "87"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "88"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 15,
									"value": "88"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 15,
									"value": "87"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "89"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "46"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 15,
									"value": "89"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "49"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 15,
									"value": "90"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "tag",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1770,
									"end": 1776,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1804,
									"end": 1809,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1798,
									"end": 1810,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1788,
									"end": 1810,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1788,
									"end": 1810,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 1718,
									"end": 1817,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 1823,
									"end": 2003,
									"name": "tag",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 1823,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1871,
									"end": 1948,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1868,
									"end": 1869,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1861,
									"end": 1949,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1968,
									"end": 1972,
									"name": "PUSH",
									"source": 15,
									"value": "41"
								},
								{
									"begin": 1965,
									"end": 1966,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 1973,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1992,
									"end": 1996,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1989,
									"end": 1990,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1982,
									"end": 1997,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 2009,
									"end": 2189,
									"name": "tag",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 2009,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2057,
									"end": 2134,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2047,
									"end": 2135,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 2154,
									"end": 2158,
									"name": "PUSH",
									"source": 15,
									"value": "22"
								},
								{
									"begin": 2151,
									"end": 2152,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 2144,
									"end": 2159,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 2178,
									"end": 2182,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 2175,
									"end": 2176,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2168,
									"end": 2183,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "tag",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2239,
									"end": 2245,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2276,
									"end": 2277,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 2270,
									"end": 2274,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2266,
									"end": 2278,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 2256,
									"end": 2278,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2256,
									"end": 2278,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2323,
									"end": 2324,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 2317,
									"end": 2321,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2313,
									"end": 2325,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2344,
									"end": 2362,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "95"
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "PUSH",
									"source": 15,
									"value": "7F"
								},
								{
									"begin": 2392,
									"end": 2398,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2388,
									"end": 2405,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 2378,
									"end": 2405,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2378,
									"end": 2405,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "tag",
									"source": 15,
									"value": "95"
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2462,
									"end": 2464,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2451,
									"end": 2465,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 2431,
									"end": 2449,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "96"
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "97"
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "52"
								},
								{
									"begin": 2481,
									"end": 2499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "tag",
									"source": 15,
									"value": "97"
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "tag",
									"source": 15,
									"value": "96"
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2246,
									"end": 2515,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2195,
									"end": 2515,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "tag",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2570,
									"end": 2574,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2593,
									"end": 2596,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2585,
									"end": 2596,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2585,
									"end": 2596,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2616,
									"end": 2619,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 2613,
									"end": 2614,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2606,
									"end": 2620,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 2650,
									"end": 2654,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2647,
									"end": 2648,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "KECCAK256",
									"source": 15
								},
								{
									"begin": 2629,
									"end": 2655,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2629,
									"end": 2655,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2521,
									"end": 2662,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "tag",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2705,
									"end": 2711,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2752,
									"end": 2754,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 2747,
									"end": 2749,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 2740,
									"end": 2745,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2736,
									"end": 2750,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 2732,
									"end": 2755,
									"name": "DIV",
									"source": 15
								},
								{
									"begin": 2722,
									"end": 2755,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2722,
									"end": 2755,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2668,
									"end": 2761,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "tag",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2811,
									"end": 2819,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2861,
									"end": 2866,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2855,
									"end": 2859,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 2851,
									"end": 2867,
									"name": "SHL",
									"source": 15
								},
								{
									"begin": 2830,
									"end": 2867,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 2830,
									"end": 2867,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2767,
									"end": 2874,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "tag",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 2949,
									"end": 2955,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 2999,
									"end": 3000,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 2987,
									"end": 2997,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 2983,
									"end": 3001,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "102"
								},
								{
									"begin": 3052,
									"end": 3118,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3041,
									"end": 3050,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 3022,
									"end": 3119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "tag",
									"source": 15,
									"value": "102"
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "103"
								},
								{
									"begin": 3170,
									"end": 3178,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "55"
								},
								{
									"begin": 3140,
									"end": 3179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "tag",
									"source": 15,
									"value": "103"
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3128,
									"end": 3179,
									"name": "SWAP6",
									"source": 15
								},
								{
									"begin": 3128,
									"end": 3179,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3212,
									"end": 3216,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3208,
									"end": 3217,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 3201,
									"end": 3206,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3197,
									"end": 3218,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 3188,
									"end": 3218,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 3188,
									"end": 3218,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3261,
									"end": 3265,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 3251,
									"end": 3259,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 3247,
									"end": 3266,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 3240,
									"end": 3245,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3237,
									"end": 3267,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2956,
									"end": 3273,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2956,
									"end": 3273,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "SWAP4",
									"source": 15
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 2880,
									"end": 3273,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "tag",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3307,
									"end": 3310,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3328,
									"end": 3333,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3321,
									"end": 3333,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3321,
									"end": 3333,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3279,
									"end": 3339,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "tag",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3395,
									"end": 3404,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "106"
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "107"
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "108"
								},
								{
									"begin": 3473,
									"end": 3478,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 3455,
									"end": 3479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "tag",
									"source": 15,
									"value": "108"
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "57"
								},
								{
									"begin": 3446,
									"end": 3480,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "tag",
									"source": 15,
									"value": "107"
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "47"
								},
								{
									"begin": 3428,
									"end": 3481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "tag",
									"source": 15,
									"value": "106"
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3415,
									"end": 3481,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3415,
									"end": 3481,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3345,
									"end": 3487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "tag",
									"source": 15,
									"value": "59"
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3536,
									"end": 3539,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3557,
									"end": 3562,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 3550,
									"end": 3562,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3550,
									"end": 3562,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3493,
									"end": 3568,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "tag",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "111"
								},
								{
									"begin": 3715,
									"end": 3722,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "58"
								},
								{
									"begin": 3684,
									"end": 3723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "tag",
									"source": 15,
									"value": "111"
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "112"
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "113"
								},
								{
									"begin": 3818,
									"end": 3834,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "59"
								},
								{
									"begin": 3794,
									"end": 3835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "tag",
									"source": 15,
									"value": "113"
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3786,
									"end": 3792,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3779,
									"end": 3783,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 3773,
									"end": 3784,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "56"
								},
								{
									"begin": 3745,
									"end": 3836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "tag",
									"source": 15,
									"value": "112"
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3739,
									"end": 3743,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 3732,
									"end": 3837,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 3650,
									"end": 3843,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3574,
									"end": 3843,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "tag",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3894,
									"end": 3897,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 3849,
									"end": 3922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "tag",
									"source": 15,
									"value": "62"
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "116"
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "61"
								},
								{
									"begin": 4005,
									"end": 4037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "tag",
									"source": 15,
									"value": "116"
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "117"
								},
								{
									"begin": 4104,
									"end": 4110,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4096,
									"end": 4102,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4090,
									"end": 4094,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "60"
								},
								{
									"begin": 4046,
									"end": 4111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "tag",
									"source": 15,
									"value": "117"
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 3981,
									"end": 4117,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 3928,
									"end": 4117,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "tag",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "tag",
									"source": 15,
									"value": "119"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4200,
									"end": 4203,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4193,
									"end": 4198,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4190,
									"end": 4204,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "121"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "122"
								},
								{
									"begin": 4291,
									"end": 4292,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4284,
									"end": 4289,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "62"
								},
								{
									"begin": 4254,
									"end": 4293,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "tag",
									"source": 15,
									"value": "122"
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4227,
									"end": 4228,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 4220,
									"end": 4225,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4216,
									"end": 4229,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4207,
									"end": 4229,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4207,
									"end": 4229,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "119"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "tag",
									"source": 15,
									"value": "121"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4123,
									"end": 4309,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "tag",
									"source": 15,
									"value": "64"
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4416,
									"end": 4418,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 4411,
									"end": 4414,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4408,
									"end": 4419,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "124"
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "125"
								},
								{
									"begin": 4482,
									"end": 4487,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 4450,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "tag",
									"source": 15,
									"value": "125"
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "126"
								},
								{
									"begin": 4552,
									"end": 4562,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 4534,
									"end": 4563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "tag",
									"source": 15,
									"value": "126"
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4524,
									"end": 4532,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4520,
									"end": 4564,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4717,
									"end": 4719,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 4705,
									"end": 4715,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4702,
									"end": 4720,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "127"
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 4738,
									"end": 4746,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 4723,
									"end": 4746,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4723,
									"end": 4746,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "tag",
									"source": 15,
									"value": "127"
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "128"
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "129"
								},
								{
									"begin": 4835,
									"end": 4838,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "54"
								},
								{
									"begin": 4817,
									"end": 4839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "tag",
									"source": 15,
									"value": "129"
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4807,
									"end": 4815,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 4803,
									"end": 4840,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 4790,
									"end": 4801,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "63"
								},
								{
									"begin": 4761,
									"end": 4841,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "tag",
									"source": 15,
									"value": "128"
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4420,
									"end": 4851,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4420,
									"end": 4851,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "tag",
									"source": 15,
									"value": "124"
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4315,
									"end": 4858,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "tag",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 4918,
									"end": 4926,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 4968,
									"end": 4973,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4962,
									"end": 4966,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 4958,
									"end": 4974,
									"name": "SHR",
									"source": 15
								},
								{
									"begin": 4937,
									"end": 4974,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 4937,
									"end": 4974,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4864,
									"end": 4981,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "tag",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5031,
									"end": 5037,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "132"
								},
								{
									"begin": 5112,
									"end": 5113,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5108,
									"end": 5114,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 5100,
									"end": 5105,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 5097,
									"end": 5098,
									"name": "PUSH",
									"source": 15,
									"value": "8"
								},
								{
									"begin": 5093,
									"end": 5106,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "65"
								},
								{
									"begin": 5064,
									"end": 5115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "tag",
									"source": 15,
									"value": "132"
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5060,
									"end": 5116,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 5145,
									"end": 5149,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 5139,
									"end": 5143,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5135,
									"end": 5150,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 5125,
									"end": 5150,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5125,
									"end": 5150,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5038,
									"end": 5156,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 4987,
									"end": 5156,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "tag",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5237,
									"end": 5241,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "134"
								},
								{
									"begin": 5408,
									"end": 5411,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5402,
									"end": 5406,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 5383,
									"end": 5412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "tag",
									"source": 15,
									"value": "134"
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5375,
									"end": 5412,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5375,
									"end": 5412,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5445,
									"end": 5448,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5442,
									"end": 5443,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 5438,
									"end": 5449,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 5432,
									"end": 5436,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5429,
									"end": 5450,
									"name": "OR",
									"source": 15
								},
								{
									"begin": 5421,
									"end": 5450,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5421,
									"end": 5450,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "SWAP3",
									"source": 15
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5161,
									"end": 5456,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "tag",
									"source": 15,
									"value": "25"
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "136"
								},
								{
									"begin": 5611,
									"end": 5614,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "50"
								},
								{
									"begin": 5578,
									"end": 5615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "tag",
									"source": 15,
									"value": "136"
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5680,
									"end": 5698,
									"name": "PUSH",
									"source": 15,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5672,
									"end": 5678,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5669,
									"end": 5699,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "137"
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "138"
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "51"
								},
								{
									"begin": 5702,
									"end": 5720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "tag",
									"source": 15,
									"value": "138"
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "tag",
									"source": 15,
									"value": "137"
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "139"
								},
								{
									"begin": 5778,
									"end": 5782,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5772,
									"end": 5783,
									"name": "SLOAD",
									"source": 15
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "33"
								},
								{
									"begin": 5746,
									"end": 5784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "tag",
									"source": 15,
									"value": "139"
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "140"
								},
								{
									"begin": 5891,
									"end": 5897,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5883,
									"end": 5889,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 5877,
									"end": 5881,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "64"
								},
								{
									"begin": 5831,
									"end": 5898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "tag",
									"source": 15,
									"value": "140"
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5925,
									"end": 5926,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 5949,
									"end": 5953,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 5936,
									"end": 5953,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 5936,
									"end": 5953,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5981,
									"end": 5983,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 5973,
									"end": 5979,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 5970,
									"end": 5984,
									"name": "GT",
									"source": 15
								},
								{
									"begin": 5998,
									"end": 5999,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "142"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6655,
									"end": 6656,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6678,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "143"
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6721,
									"end": 6730,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6716,
									"end": 6719,
									"name": "DUP8",
									"source": 15
								},
								{
									"begin": 6712,
									"end": 6731,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6706,
									"end": 6732,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 6697,
									"end": 6732,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6697,
									"end": 6732,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "tag",
									"source": 15,
									"value": "143"
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "144"
								},
								{
									"begin": 6832,
									"end": 6838,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "67"
								},
								{
									"begin": 6772,
									"end": 6839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "tag",
									"source": 15,
									"value": "144"
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6766,
									"end": 6770,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 6759,
									"end": 6840,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 6628,
									"end": 6850,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "141"
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "tag",
									"source": 15,
									"value": "142"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6045,
									"end": 6049,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 6041,
									"end": 6050,
									"name": "NOT",
									"source": 15
								},
								{
									"begin": 6033,
									"end": 6039,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6029,
									"end": 6051,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "145"
								},
								{
									"begin": 6111,
									"end": 6115,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "53"
								},
								{
									"begin": 6079,
									"end": 6116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "tag",
									"source": 15,
									"value": "145"
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6138,
									"end": 6139,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "tag",
									"source": 15,
									"value": "146"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6166,
									"end": 6173,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6163,
									"end": 6164,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6160,
									"end": 6174,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "148"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6245,
									"end": 6254,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6240,
									"end": 6243,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 6236,
									"end": 6255,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6230,
									"end": 6256,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 6222,
									"end": 6228,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6215,
									"end": 6257,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 6296,
									"end": 6297,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 6288,
									"end": 6294,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6284,
									"end": 6298,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6274,
									"end": 6298,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 6274,
									"end": 6298,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6343,
									"end": 6345,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 6332,
									"end": 6341,
									"name": "DUP6",
									"source": 15
								},
								{
									"begin": 6328,
									"end": 6346,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6315,
									"end": 6346,
									"name": "SWAP5",
									"source": 15
								},
								{
									"begin": 6315,
									"end": 6346,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6189,
									"end": 6193,
									"name": "PUSH",
									"source": 15,
									"value": "20"
								},
								{
									"begin": 6186,
									"end": 6187,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 6182,
									"end": 6194,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6177,
									"end": 6194,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 6177,
									"end": 6194,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "146"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "tag",
									"source": 15,
									"value": "148"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6388,
									"end": 6394,
									"name": "DUP7",
									"source": 15
								},
								{
									"begin": 6379,
									"end": 6386,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 6376,
									"end": 6395,
									"name": "LT",
									"source": 15
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "149"
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 6446,
									"end": 6455,
									"name": "DUP5",
									"source": 15
								},
								{
									"begin": 6441,
									"end": 6444,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 6437,
									"end": 6456,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6431,
									"end": 6457,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "150"
								},
								{
									"begin": 6531,
									"end": 6535,
									"name": "PUSH",
									"source": 15,
									"value": "1F"
								},
								{
									"begin": 6523,
									"end": 6529,
									"name": "DUP10",
									"source": 15
								},
								{
									"begin": 6519,
									"end": 6536,
									"name": "AND",
									"source": 15
								},
								{
									"begin": 6508,
									"end": 6517,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "66"
								},
								{
									"begin": 6489,
									"end": 6537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "tag",
									"source": 15,
									"value": "150"
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6481,
									"end": 6487,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 6474,
									"end": 6538,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 6396,
									"end": 6552,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "tag",
									"source": 15,
									"value": "149"
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 6598,
									"end": 6599,
									"name": "PUSH",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 6594,
									"end": 6595,
									"name": "PUSH",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 6586,
									"end": 6592,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 6582,
									"end": 6596,
									"name": "MUL",
									"source": 15
								},
								{
									"begin": 6578,
									"end": 6600,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 6572,
									"end": 6576,
									"name": "DUP9",
									"source": 15
								},
								{
									"begin": 6565,
									"end": 6601,
									"name": "SSTORE",
									"source": 15
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "tag",
									"source": 15,
									"value": "141"
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 5461,
									"end": 6856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "tag",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 862,
									"end": 11700,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dd175e72649fc590c32e72ba343166cecec776c9b550f6f852b852cdffb2987d64736f6c63430008120033",
									".code": [
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "80FAA57D"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "CA1D209D"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "D1AF0C7D"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "D1AF0C7D"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "DF136D65"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "EBE2B12B"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "CA1D209D"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "CC1A378F"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "CD3DAF9D"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "8B876347"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "8B876347"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "C6E79B91"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "C8F33C91"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "80FAA57D"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "880B0E43"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "8980F11F"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "58341922"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "72F702F3"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "7B0A47EE"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "58341922"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "5C975ABB"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "6C11FE9B"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "8CC262"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "700037D"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "1C1F78EB"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "386A9525"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "4E71D92D"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "529D6CCF"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 862,
											"end": 11700,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 11095,
											"end": 11194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 11095,
											"end": 11194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 11095,
											"end": 11194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 2365,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2365,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 2365,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 11274,
											"end": 11384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 11274,
											"end": 11384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 1973,
											"end": 2012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1973,
											"end": 2012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 6964,
											"end": 7239,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 6964,
											"end": 7239,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6964,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 6964,
											"end": 7239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 6964,
											"end": 7239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6964,
											"end": 7239,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 6964,
											"end": 7239,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6964,
											"end": 7239,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 11587,
											"end": 11697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 11587,
											"end": 11697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 11587,
											"end": 11697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10302,
											"end": 10392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 10302,
											"end": 10392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 6291,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 6291,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 10496,
											"end": 10599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 10496,
											"end": 10599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 10496,
											"end": 10599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 1701,
											"end": 1727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 1701,
											"end": 1727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1907,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1907,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 10721,
											"end": 10834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 10721,
											"end": 10834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 5437,
											"end": 5998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 5437,
											"end": 5998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 5437,
											"end": 5998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 8801,
											"end": 9105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 8801,
											"end": 9105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 2236,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 2236,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 2236,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1623,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 1297,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1297,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 1297,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 1297,
											"end": 1623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1297,
											"end": 1623,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 1297,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1297,
											"end": 1623,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 2062,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 2062,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 7531,
											"end": 8560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 7531,
											"end": 8560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 4935,
											"end": 5157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 4935,
											"end": 5157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 10907,
											"end": 11000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 10907,
											"end": 11000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 1771,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 1771,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 2130,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 2130,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 1855,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "tag",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1855,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11151,
											"end": 11158,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 11181,
											"end": 11188,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11173,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 11173,
											"end": 11189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11166,
											"end": 11189,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11166,
											"end": 11189,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11095,
											"end": 11194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11329,
											"end": 11336,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11364,
											"end": 11379,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 11364,
											"end": 11379,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11351,
											"end": 11361,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 11351,
											"end": 11361,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11351,
											"end": 11379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 11351,
											"end": 11379,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11351,
											"end": 11379,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11351,
											"end": 11379,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 11351,
											"end": 11379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11351,
											"end": 11379,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 11351,
											"end": 11379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11344,
											"end": 11379,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11344,
											"end": 11379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11274,
											"end": 11384,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11274,
											"end": 11384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2012,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1973,
											"end": 2012,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6964,
											"end": 7239,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 6964,
											"end": 7239,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7038,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3912,
											"end": 3929,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 3912,
											"end": 3927,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 3912,
											"end": 3929,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3912,
											"end": 3929,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 3912,
											"end": 3929,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3909,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 3889,
											"end": 3929,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3929,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3929,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3929,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3952,
											"end": 3979,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 3952,
											"end": 3977,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 3952,
											"end": 3979,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3952,
											"end": 3979,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 3952,
											"end": 3979,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3935,
											"end": 3949,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 3935,
											"end": 3979,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3935,
											"end": 3979,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3935,
											"end": 3979,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3935,
											"end": 3979,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4008,
											"end": 4009,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4010,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3989,
											"end": 4010,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3989,
											"end": 3996,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3989,
											"end": 4010,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3989,
											"end": 4010,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3989,
											"end": 4010,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3985,
											"end": 4128,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 3985,
											"end": 4128,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4057,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 4049,
											"end": 4056,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4048,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 4041,
											"end": 4057,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4057,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 4041,
											"end": 4057,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4029,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4037,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4057,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4057,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4057,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4057,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4101,
											"end": 4121,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 4101,
											"end": 4121,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4089,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4097,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4121,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4121,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4121,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4121,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3985,
											"end": 4128,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 3985,
											"end": 4128,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7046,
											"end": 7060,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7063,
											"end": 7070,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 7063,
											"end": 7082,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7071,
											"end": 7081,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7063,
											"end": 7082,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7063,
											"end": 7082,
											"modifierDepth": 3,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7063,
											"end": 7082,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7063,
											"end": 7082,
											"modifierDepth": 3,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7063,
											"end": 7082,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7063,
											"end": 7082,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7063,
											"end": 7082,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7063,
											"end": 7082,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7063,
											"end": 7082,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7063,
											"end": 7082,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7063,
											"end": 7082,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7063,
											"end": 7082,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7063,
											"end": 7082,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7063,
											"end": 7082,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7063,
											"end": 7082,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7063,
											"end": 7082,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7046,
											"end": 7082,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7046,
											"end": 7082,
											"modifierDepth": 3,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7101,
											"end": 7102,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7092,
											"end": 7098,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7092,
											"end": 7102,
											"modifierDepth": 3,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7088,
											"end": 7235,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7088,
											"end": 7235,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 7088,
											"end": 7235,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7134,
											"end": 7135,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7112,
											"end": 7119,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 7112,
											"end": 7131,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7120,
											"end": 7130,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7131,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7112,
											"end": 7131,
											"modifierDepth": 3,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7131,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7112,
											"end": 7131,
											"modifierDepth": 3,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7131,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7131,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7131,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7112,
											"end": 7131,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7131,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7131,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7131,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7131,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7112,
											"end": 7131,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7131,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7112,
											"end": 7131,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7135,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7135,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7135,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 7112,
											"end": 7135,
											"modifierDepth": 3,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7143,
											"end": 7188,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 7169,
											"end": 7179,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7181,
											"end": 7187,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7143,
											"end": 7155,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 7143,
											"end": 7155,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7143,
											"end": 7155,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7143,
											"end": 7155,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7143,
											"end": 7155,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7143,
											"end": 7155,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 7143,
											"end": 7155,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 7143,
											"end": 7155,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7143,
											"end": 7155,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 7143,
											"end": 7155,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7143,
											"end": 7155,
											"modifierDepth": 3,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7143,
											"end": 7168,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7143,
											"end": 7168,
											"modifierDepth": 3,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7143,
											"end": 7168,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 7143,
											"end": 7168,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7143,
											"end": 7188,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7143,
											"end": 7188,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7143,
											"end": 7188,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7143,
											"end": 7188,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7143,
											"end": 7188,
											"modifierDepth": 3,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7143,
											"end": 7188,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7143,
											"end": 7188,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 7143,
											"end": 7188,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7209,
											"end": 7219,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 3,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "D8138F8A3F377C5259CA548E70E4C2DE94F129F5A11036A15B69513CBA2B426A"
										},
										{
											"begin": 7221,
											"end": 7227,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 7201,
											"end": 7228,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 7088,
											"end": 7235,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 7088,
											"end": 7235,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7040,
											"end": 7239,
											"modifierDepth": 3,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1269,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6964,
											"end": 7239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11647,
											"end": 11651,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11670,
											"end": 11683,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11684,
											"end": 11689,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10354,
											"end": 10361,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10376,
											"end": 10387,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 10376,
											"end": 10387,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10369,
											"end": 10387,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10369,
											"end": 10387,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10302,
											"end": 10392,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10302,
											"end": 10392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6552,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6559,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6505,
											"end": 6523,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6505,
											"end": 6530,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6505,
											"end": 6559,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6505,
											"end": 6619,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6505,
											"end": 6619,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6505,
											"end": 6619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 6505,
											"end": 6619,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6505,
											"end": 6619,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6604,
											"end": 6612,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6604,
											"end": 6619,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6593,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6600,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6575,
											"end": 6619,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6505,
											"end": 6619,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 6505,
											"end": 6619,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 6484,
											"end": 6673,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 6484,
											"end": 6673,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6683,
											"end": 6839,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 6683,
											"end": 6839,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6707,
											"end": 6725,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6707,
											"end": 6732,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6703,
											"end": 6704,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6703,
											"end": 6732,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6683,
											"end": 6839,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6683,
											"end": 6839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 6683,
											"end": 6839,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6753,
											"end": 6828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 6770,
											"end": 6788,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6789,
											"end": 6790,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6791,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6791,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6791,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6791,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6791,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 6770,
											"end": 6791,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6791,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 6770,
											"end": 6791,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 6770,
											"end": 6791,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6791,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 6770,
											"end": 6791,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6791,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 6770,
											"end": 6791,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6770,
											"end": 6791,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6770,
											"end": 6791,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6791,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6791,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6793,
											"end": 6811,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6812,
											"end": 6813,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6793,
											"end": 6814,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6793,
											"end": 6814,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6793,
											"end": 6814,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6793,
											"end": 6814,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6793,
											"end": 6814,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 6793,
											"end": 6814,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6793,
											"end": 6814,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 6793,
											"end": 6814,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 6793,
											"end": 6814,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6793,
											"end": 6814,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 6793,
											"end": 6814,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6793,
											"end": 6814,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 6793,
											"end": 6814,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6793,
											"end": 6814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6793,
											"end": 6814,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6793,
											"end": 6814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6793,
											"end": 6814,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6793,
											"end": 6814,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6793,
											"end": 6814,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6824,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6825,
											"end": 6826,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6827,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6827,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6827,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 6816,
											"end": 6827,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 6816,
											"end": 6827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 6816,
											"end": 6827,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6827,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 6816,
											"end": 6827,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6827,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 6816,
											"end": 6827,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6816,
											"end": 6827,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6816,
											"end": 6827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6827,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6816,
											"end": 6827,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6753,
											"end": 6769,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 6753,
											"end": 6828,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6753,
											"end": 6828,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 6753,
											"end": 6828,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6753,
											"end": 6828,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6734,
											"end": 6737,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6734,
											"end": 6737,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6734,
											"end": 6737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 6734,
											"end": 6737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6734,
											"end": 6737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 6734,
											"end": 6737,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6734,
											"end": 6737,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 6734,
											"end": 6737,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6734,
											"end": 6737,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6734,
											"end": 6737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6734,
											"end": 6737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6683,
											"end": 6839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 6683,
											"end": 6839,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6683,
											"end": 6839,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 6683,
											"end": 6839,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6683,
											"end": 6839,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6291,
											"end": 6845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10555,
											"end": 10562,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10577,
											"end": 10585,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 10577,
											"end": 10594,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10586,
											"end": 10593,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10577,
											"end": 10594,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10577,
											"end": 10594,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10577,
											"end": 10594,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10577,
											"end": 10594,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10577,
											"end": 10594,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10577,
											"end": 10594,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10577,
											"end": 10594,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10577,
											"end": 10594,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10577,
											"end": 10594,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10577,
											"end": 10594,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10577,
											"end": 10594,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10577,
											"end": 10594,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10577,
											"end": 10594,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10577,
											"end": 10594,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10577,
											"end": 10594,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10577,
											"end": 10594,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10570,
											"end": 10594,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10570,
											"end": 10594,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10496,
											"end": 10599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "tag",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1907,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10780,
											"end": 10787,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10802,
											"end": 10829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 10802,
											"end": 10827,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 10802,
											"end": 10829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10802,
											"end": 10829,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 10802,
											"end": 10829,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10795,
											"end": 10829,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10795,
											"end": 10829,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10834,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10721,
											"end": 10834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5631,
											"end": 5636,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5620,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3912,
											"end": 3929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 3912,
											"end": 3927,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 3912,
											"end": 3929,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3912,
											"end": 3929,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 3912,
											"end": 3929,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 3889,
											"end": 3929,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3929,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3929,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3952,
											"end": 3979,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 3952,
											"end": 3977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 3952,
											"end": 3979,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3952,
											"end": 3979,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 3952,
											"end": 3979,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3935,
											"end": 3949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 3935,
											"end": 3979,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3935,
											"end": 3979,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3935,
											"end": 3979,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3935,
											"end": 3979,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4008,
											"end": 4009,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3989,
											"end": 4010,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3989,
											"end": 3996,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3989,
											"end": 4010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3989,
											"end": 4010,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3989,
											"end": 4010,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3985,
											"end": 4128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 3985,
											"end": 4128,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4057,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 4049,
											"end": 4056,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4048,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 4041,
											"end": 4057,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4057,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 4041,
											"end": 4057,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4037,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4057,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4057,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4057,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4057,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4101,
											"end": 4121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 4101,
											"end": 4121,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4089,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4097,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4121,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4121,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4121,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4121,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3985,
											"end": 4128,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 3985,
											"end": 4128,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5663,
											"end": 5664,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5659,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5652,
											"end": 5664,
											"modifierDepth": 2,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5648,
											"end": 5710,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 5648,
											"end": 5710,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5687,
											"end": 5699,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1F2A200500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5687,
											"end": 5699,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5699,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5687,
											"end": 5699,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5687,
											"end": 5699,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5699,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5699,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5699,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5699,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5699,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5648,
											"end": 5710,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 5648,
											"end": 5710,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5719,
											"end": 5739,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 263,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 13,
											"value": "800"
										},
										{
											"begin": 5742,
											"end": 5769,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5742,
											"end": 5769,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5769,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "54B826F5"
										},
										{
											"begin": 5770,
											"end": 5780,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5782,
											"end": 5799,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5801,
											"end": 5818,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5820,
											"end": 5827,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 5742,
											"end": 5828,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5742,
											"end": 5828,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 5742,
											"end": 5828,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 5742,
											"end": 5828,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5719,
											"end": 5828,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5719,
											"end": 5828,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5866,
											"end": 5873,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5852,
											"end": 5863,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 5852,
											"end": 5863,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5852,
											"end": 5873,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 5852,
											"end": 5873,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5852,
											"end": 5873,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5852,
											"end": 5873,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 5852,
											"end": 5873,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5852,
											"end": 5873,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 5852,
											"end": 5873,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5838,
											"end": 5849,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 5838,
											"end": 5873,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5838,
											"end": 5873,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5838,
											"end": 5873,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5838,
											"end": 5873,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5907,
											"end": 5914,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5891,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 5883,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5892,
											"end": 5902,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5883,
											"end": 5903,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5883,
											"end": 5903,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5903,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5903,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5883,
											"end": 5903,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5903,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5903,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5903,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5883,
											"end": 5903,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5883,
											"end": 5903,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5903,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5883,
											"end": 5914,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5914,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5914,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5914,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 5883,
											"end": 5914,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5914,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5914,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 5883,
											"end": 5914,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5914,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 5883,
											"end": 5914,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5914,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5914,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5914,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5914,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5914,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5914,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5914,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5940,
											"end": 5950,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5929,
											"end": 5960,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5929,
											"end": 5960,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5929,
											"end": 5960,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "DA5C3D1021415BB27AA0917EAAAFC6EE7C358A2A436D70208004073F6109EC0"
										},
										{
											"begin": 5952,
											"end": 5959,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5929,
											"end": 5960,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5929,
											"end": 5960,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5929,
											"end": 5960,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 5929,
											"end": 5960,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5929,
											"end": 5960,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5929,
											"end": 5960,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 5929,
											"end": 5960,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5929,
											"end": 5960,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 5929,
											"end": 5960,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5929,
											"end": 5960,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5929,
											"end": 5960,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5929,
											"end": 5960,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5929,
											"end": 5960,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5929,
											"end": 5960,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5929,
											"end": 5960,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5929,
											"end": 5960,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 5977,
											"end": 5991,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5970,
											"end": 5991,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5970,
											"end": 5991,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5970,
											"end": 5991,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1269,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5437,
											"end": 5998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8931,
											"end": 8943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8931,
											"end": 8943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8931,
											"end": 8943,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8931,
											"end": 8943,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8931,
											"end": 8943,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8931,
											"end": 8943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 8931,
											"end": 8943,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 8931,
											"end": 8943,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8931,
											"end": 8943,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8931,
											"end": 8943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8931,
											"end": 8943,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8907,
											"end": 8944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8907,
											"end": 8944,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8907,
											"end": 8919,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8907,
											"end": 8944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8907,
											"end": 8944,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8907,
											"end": 8944,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8903,
											"end": 8993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 8903,
											"end": 8993,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8961,
											"end": 8986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8961,
											"end": 8986,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8961,
											"end": 8986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "43FC58F100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8961,
											"end": 8986,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8961,
											"end": 8986,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8961,
											"end": 8986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8961,
											"end": 8986,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8961,
											"end": 8986,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8961,
											"end": 8986,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8961,
											"end": 8986,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8961,
											"end": 8986,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8961,
											"end": 8986,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8961,
											"end": 8986,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8961,
											"end": 8986,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8903,
											"end": 8993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 8903,
											"end": 8993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8998,
											"end": 9053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 9032,
											"end": 9039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 9032,
											"end": 9037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 9032,
											"end": 9039,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9032,
											"end": 9039,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 9032,
											"end": 9039,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9041,
											"end": 9052,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9005,
											"end": 9017,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8998,
											"end": 9031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8998,
											"end": 9031,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8998,
											"end": 9031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 8998,
											"end": 9031,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8998,
											"end": 9053,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8998,
											"end": 9053,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8998,
											"end": 9053,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8998,
											"end": 9053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8998,
											"end": 9053,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8998,
											"end": 9053,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8998,
											"end": 9053,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 8998,
											"end": 9053,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9064,
											"end": 9100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C1256B8896378CD5044F80C202F9772B9D77DC85C8A6EB51967210B09BFAA28"
										},
										{
											"begin": 9074,
											"end": 9086,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9088,
											"end": 9099,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9064,
											"end": 9100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9064,
											"end": 9100,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9064,
											"end": 9100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 9064,
											"end": 9100,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9064,
											"end": 9100,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9064,
											"end": 9100,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9064,
											"end": 9100,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 9064,
											"end": 9100,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9064,
											"end": 9100,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 9064,
											"end": 9100,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9064,
											"end": 9100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9064,
											"end": 9100,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9064,
											"end": 9100,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9064,
											"end": 9100,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9064,
											"end": 9100,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9064,
											"end": 9100,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9064,
											"end": 9100,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 9105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8801,
											"end": 9105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2236,
											"end": 2293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1623,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 1297,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1348,
											"end": 1360,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 221,
											"end": 263,
											"name": "PUSH",
											"source": 13,
											"value": "800"
										},
										{
											"begin": 1363,
											"end": 1387,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1363,
											"end": 1387,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1387,
											"name": "PUSH",
											"source": 12,
											"value": "B6039895"
										},
										{
											"begin": 1401,
											"end": 1411,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1425,
											"end": 1442,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1456,
											"end": 1470,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 1363,
											"end": 1480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 1363,
											"end": 1480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 1363,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1348,
											"end": 1480,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1348,
											"end": 1480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1498,
											"end": 1505,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 1490,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1585,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1553,
											"end": 1566,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1553,
											"end": 1578,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1577,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1578,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1553,
											"end": 1578,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1578,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1553,
											"end": 1578,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1578,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1578,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1578,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1553,
											"end": 1578,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1578,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1578,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1578,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1578,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1553,
											"end": 1578,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1578,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1578,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1578,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1553,
											"end": 1585,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1338,
											"end": 1623,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1297,
											"end": 1623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2091,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2062,
											"end": 2091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7621,
											"end": 7622,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 3929,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 3912,
											"end": 3927,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 3912,
											"end": 3929,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3912,
											"end": 3929,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 3912,
											"end": 3929,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3909,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 3889,
											"end": 3929,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3929,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3929,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3929,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3952,
											"end": 3979,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 3952,
											"end": 3977,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 3952,
											"end": 3979,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3952,
											"end": 3979,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 3952,
											"end": 3979,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3935,
											"end": 3949,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 3935,
											"end": 3979,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3935,
											"end": 3979,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3935,
											"end": 3979,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3935,
											"end": 3979,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4008,
											"end": 4009,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4010,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3989,
											"end": 4010,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3989,
											"end": 3996,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3989,
											"end": 4010,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3989,
											"end": 4010,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3989,
											"end": 4010,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3985,
											"end": 4128,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 3985,
											"end": 4128,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4057,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 4049,
											"end": 4056,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4048,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 4041,
											"end": 4057,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4041,
											"end": 4057,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 4041,
											"end": 4057,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4029,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4037,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4022,
											"end": 4038,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4057,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4057,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4057,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4022,
											"end": 4057,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4101,
											"end": 4121,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 4101,
											"end": 4121,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4089,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4097,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4067,
											"end": 4098,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4121,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4121,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4121,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4067,
											"end": 4121,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3985,
											"end": 4128,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 3985,
											"end": 4128,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7654,
											"end": 7666,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 7654,
											"end": 7666,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7635,
											"end": 7650,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 7635,
											"end": 7666,
											"modifierDepth": 3,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7631,
											"end": 7898,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 7631,
											"end": 7898,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7698,
											"end": 7713,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 7698,
											"end": 7713,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7689,
											"end": 7695,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7689,
											"end": 7713,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 7689,
											"end": 7713,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7689,
											"end": 7713,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7689,
											"end": 7713,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 7689,
											"end": 7713,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7689,
											"end": 7713,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 7689,
											"end": 7713,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7676,
											"end": 7686,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 7676,
											"end": 7713,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7676,
											"end": 7713,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7676,
											"end": 7713,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 7676,
											"end": 7713,
											"modifierDepth": 3,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7631,
											"end": 7898,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 7631,
											"end": 7898,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7631,
											"end": 7898,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 7631,
											"end": 7898,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7734,
											"end": 7751,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7769,
											"end": 7784,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 7754,
											"end": 7766,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 7754,
											"end": 7766,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7754,
											"end": 7784,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 7754,
											"end": 7784,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7754,
											"end": 7784,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7754,
											"end": 7784,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 7754,
											"end": 7784,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7754,
											"end": 7784,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 7754,
											"end": 7784,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7734,
											"end": 7784,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7734,
											"end": 7784,
											"modifierDepth": 3,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7792,
											"end": 7808,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7823,
											"end": 7833,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 7823,
											"end": 7833,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 7820,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 7833,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 7811,
											"end": 7833,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 7833,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 7833,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 7811,
											"end": 7833,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 7833,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 7811,
											"end": 7833,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7792,
											"end": 7833,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7792,
											"end": 7833,
											"modifierDepth": 3,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7876,
											"end": 7891,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 7876,
											"end": 7891,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7864,
											"end": 7872,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7855,
											"end": 7861,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7855,
											"end": 7872,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 7855,
											"end": 7872,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7855,
											"end": 7872,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7855,
											"end": 7872,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 7855,
											"end": 7872,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7855,
											"end": 7872,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 7855,
											"end": 7872,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7854,
											"end": 7891,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 7854,
											"end": 7891,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7854,
											"end": 7891,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7854,
											"end": 7891,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 7854,
											"end": 7891,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7854,
											"end": 7891,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 7854,
											"end": 7891,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7841,
											"end": 7851,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 7841,
											"end": 7891,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7841,
											"end": 7891,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7841,
											"end": 7891,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 7841,
											"end": 7891,
											"modifierDepth": 3,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7726,
											"end": 7898,
											"modifierDepth": 3,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7726,
											"end": 7898,
											"modifierDepth": 3,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7631,
											"end": 7898,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 7631,
											"end": 7898,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8225,
											"end": 8289,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 8255,
											"end": 8265,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 8275,
											"end": 8279,
											"modifierDepth": 3,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 8282,
											"end": 8288,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8225,
											"end": 8237,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 8225,
											"end": 8237,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8225,
											"end": 8237,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8225,
											"end": 8237,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8225,
											"end": 8237,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8225,
											"end": 8237,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 8225,
											"end": 8237,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 8225,
											"end": 8237,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8225,
											"end": 8237,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8225,
											"end": 8237,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8225,
											"end": 8237,
											"modifierDepth": 3,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8225,
											"end": 8254,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8225,
											"end": 8254,
											"modifierDepth": 3,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8225,
											"end": 8254,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 8225,
											"end": 8254,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8225,
											"end": 8289,
											"modifierDepth": 3,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8225,
											"end": 8289,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8225,
											"end": 8289,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8225,
											"end": 8289,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8225,
											"end": 8289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8225,
											"end": 8289,
											"modifierDepth": 3,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8225,
											"end": 8289,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8225,
											"end": 8289,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 8225,
											"end": 8289,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8295,
											"end": 8310,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8313,
											"end": 8325,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 8313,
											"end": 8325,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8313,
											"end": 8325,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8325,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8325,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8325,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 8313,
											"end": 8325,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8325,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8325,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8325,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8313,
											"end": 8325,
											"modifierDepth": 3,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8335,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8313,
											"end": 8335,
											"modifierDepth": 3,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8335,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 8344,
											"end": 8348,
											"modifierDepth": 3,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 8313,
											"end": 8350,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8313,
											"end": 8350,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 8313,
											"end": 8350,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 8313,
											"end": 8350,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8295,
											"end": 8350,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8295,
											"end": 8350,
											"modifierDepth": 3,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8383,
											"end": 8398,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 8383,
											"end": 8398,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8373,
											"end": 8380,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8373,
											"end": 8398,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 8373,
											"end": 8398,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8373,
											"end": 8398,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8373,
											"end": 8398,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 8373,
											"end": 8398,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8373,
											"end": 8398,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 8373,
											"end": 8398,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8360,
											"end": 8370,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 8360,
											"end": 8370,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8360,
											"end": 8398,
											"modifierDepth": 3,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8356,
											"end": 8437,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8356,
											"end": 8437,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 8356,
											"end": 8437,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8415,
											"end": 8430,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8415,
											"end": 8430,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8415,
											"end": 8430,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "7F5E85A600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8415,
											"end": 8430,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8415,
											"end": 8430,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8415,
											"end": 8430,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8415,
											"end": 8430,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8415,
											"end": 8430,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8415,
											"end": 8430,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8415,
											"end": 8430,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8415,
											"end": 8430,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8415,
											"end": 8430,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8415,
											"end": 8430,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8415,
											"end": 8430,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8356,
											"end": 8437,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 8356,
											"end": 8437,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8460,
											"end": 8475,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 8443,
											"end": 8457,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 8443,
											"end": 8475,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8443,
											"end": 8475,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8443,
											"end": 8475,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 8443,
											"end": 8475,
											"modifierDepth": 3,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8514,
											"end": 8529,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 8514,
											"end": 8529,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8496,
											"end": 8511,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 8496,
											"end": 8529,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 8496,
											"end": 8529,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8496,
											"end": 8529,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8496,
											"end": 8529,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 8496,
											"end": 8529,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8496,
											"end": 8529,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 8496,
											"end": 8529,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8481,
											"end": 8493,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 8481,
											"end": 8529,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8481,
											"end": 8529,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8481,
											"end": 8529,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 8481,
											"end": 8529,
											"modifierDepth": 3,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8541,
											"end": 8555,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "C4C14883AE9FD8E26D5D59E3485ED29FD126D781D7E498A4CA5C54C8268E4936"
										},
										{
											"begin": 8548,
											"end": 8554,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8541,
											"end": 8555,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8541,
											"end": 8555,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8541,
											"end": 8555,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 8541,
											"end": 8555,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8541,
											"end": 8555,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8541,
											"end": 8555,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 8541,
											"end": 8555,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8541,
											"end": 8555,
											"modifierDepth": 3,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 8541,
											"end": 8555,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8541,
											"end": 8555,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8541,
											"end": 8555,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8541,
											"end": 8555,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8541,
											"end": 8555,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8541,
											"end": 8555,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8541,
											"end": 8555,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8541,
											"end": 8555,
											"modifierDepth": 3,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 7625,
											"end": 8560,
											"modifierDepth": 3,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1269,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7531,
											"end": 8560,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7531,
											"end": 8560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5028,
											"end": 5040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 5028,
											"end": 5040,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5010,
											"end": 5025,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 5010,
											"end": 5040,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5006,
											"end": 5078,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5006,
											"end": 5078,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 5006,
											"end": 5078,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5057,
											"end": 5071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5057,
											"end": 5071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "38E3211200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5057,
											"end": 5071,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5057,
											"end": 5071,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5057,
											"end": 5071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5057,
											"end": 5071,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5057,
											"end": 5071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5057,
											"end": 5071,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5057,
											"end": 5071,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5057,
											"end": 5071,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5057,
											"end": 5071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5057,
											"end": 5071,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5006,
											"end": 5078,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 5006,
											"end": 5078,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5101,
											"end": 5109,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5083,
											"end": 5098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 5083,
											"end": 5109,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5083,
											"end": 5109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5083,
											"end": 5109,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5083,
											"end": 5109,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5120,
											"end": 5152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FB46CA5A5E06D4540D6387B930A7C978BCE0DB5F449EC6B3F5D07C6E1D44F2D3"
										},
										{
											"begin": 5143,
											"end": 5151,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5120,
											"end": 5152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5120,
											"end": 5152,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5120,
											"end": 5152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 5120,
											"end": 5152,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5120,
											"end": 5152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5120,
											"end": 5152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 5120,
											"end": 5152,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5120,
											"end": 5152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 5120,
											"end": 5152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5120,
											"end": 5152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5120,
											"end": 5152,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5120,
											"end": 5152,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5120,
											"end": 5152,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5120,
											"end": 5152,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5120,
											"end": 5152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5120,
											"end": 5152,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 5157,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4935,
											"end": 5157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10956,
											"end": 10963,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 10978,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 10978,
											"end": 10995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 10978,
											"end": 10995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10971,
											"end": 10995,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10971,
											"end": 10995,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11000,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1771,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2165,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1882,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1855,
											"end": 1882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2182,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2154,
											"end": 2227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9786,
											"end": 9997,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 9786,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9843,
											"end": 9850,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9976,
											"end": 9983,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 9976,
											"end": 9992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9984,
											"end": 9991,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 9992,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9976,
											"end": 9992,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 9992,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9976,
											"end": 9992,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 9992,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 9992,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 9992,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9976,
											"end": 9992,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 9992,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 9992,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 9992,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 9992,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9976,
											"end": 9992,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 9992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9976,
											"end": 9992,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 9992,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9963,
											"end": 9967,
											"name": "PUSH",
											"source": 12,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9921,
											"end": 9943,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 9921,
											"end": 9952,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9944,
											"end": 9951,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9921,
											"end": 9952,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9921,
											"end": 9952,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9921,
											"end": 9952,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9921,
											"end": 9952,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9921,
											"end": 9952,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9921,
											"end": 9952,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9921,
											"end": 9952,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9921,
											"end": 9952,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9921,
											"end": 9952,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9921,
											"end": 9952,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9921,
											"end": 9952,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9921,
											"end": 9952,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9921,
											"end": 9952,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9921,
											"end": 9952,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9921,
											"end": 9952,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9921,
											"end": 9952,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9901,
											"end": 9918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 9901,
											"end": 9916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 9901,
											"end": 9918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9901,
											"end": 9918,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 9901,
											"end": 9918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9901,
											"end": 9952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 9901,
											"end": 9952,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9901,
											"end": 9952,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9901,
											"end": 9952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 9901,
											"end": 9952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9901,
											"end": 9952,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 9901,
											"end": 9952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9872,
											"end": 9880,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 9872,
											"end": 9889,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9881,
											"end": 9888,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9872,
											"end": 9889,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9872,
											"end": 9889,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9872,
											"end": 9889,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9872,
											"end": 9889,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9872,
											"end": 9889,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9872,
											"end": 9889,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9872,
											"end": 9889,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9872,
											"end": 9889,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9872,
											"end": 9889,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9872,
											"end": 9889,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9872,
											"end": 9889,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9872,
											"end": 9889,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9872,
											"end": 9889,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9872,
											"end": 9889,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9872,
											"end": 9889,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9872,
											"end": 9889,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9872,
											"end": 9953,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 9872,
											"end": 9953,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9872,
											"end": 9953,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9872,
											"end": 9953,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 9872,
											"end": 9953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9872,
											"end": 9953,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 9872,
											"end": 9953,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9871,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 9871,
											"end": 9967,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9871,
											"end": 9967,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9871,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 9871,
											"end": 9967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9871,
											"end": 9967,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 9871,
											"end": 9967,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9871,
											"end": 9992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 9871,
											"end": 9992,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9871,
											"end": 9992,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9871,
											"end": 9992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 9871,
											"end": 9992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9871,
											"end": 9992,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 9871,
											"end": 9992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9858,
											"end": 9992,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9858,
											"end": 9992,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9786,
											"end": 9997,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9786,
											"end": 9997,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9786,
											"end": 9997,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9786,
											"end": 9997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9513,
											"end": 9782,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 9513,
											"end": 9782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9563,
											"end": 9570,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9597,
											"end": 9598,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9582,
											"end": 9593,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 9582,
											"end": 9593,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9582,
											"end": 9598,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9578,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 9578,
											"end": 9642,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9615,
											"end": 9635,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 9615,
											"end": 9635,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9608,
											"end": 9635,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9608,
											"end": 9635,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9608,
											"end": 9635,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 9608,
											"end": 9635,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9578,
											"end": 9642,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 9578,
											"end": 9642,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9766,
											"end": 9777,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 9766,
											"end": 9777,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9752,
											"end": 9756,
											"name": "PUSH",
											"source": 12,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9739,
											"end": 9749,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 9739,
											"end": 9749,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9721,
											"end": 9735,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 9721,
											"end": 9735,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 9691,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 9691,
											"end": 9718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9718,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 9691,
											"end": 9718,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 9691,
											"end": 9735,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9735,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9735,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 9691,
											"end": 9735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9691,
											"end": 9735,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 9691,
											"end": 9735,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9690,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 9690,
											"end": 9749,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9690,
											"end": 9749,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9690,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 9690,
											"end": 9749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9690,
											"end": 9749,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 9690,
											"end": 9749,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9690,
											"end": 9756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 9690,
											"end": 9756,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9690,
											"end": 9756,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9690,
											"end": 9756,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 9690,
											"end": 9756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9690,
											"end": 9756,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 9690,
											"end": 9756,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9689,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 9689,
											"end": 9777,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9689,
											"end": 9777,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9689,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 9689,
											"end": 9777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9689,
											"end": 9777,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 9689,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9660,
											"end": 9680,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 9660,
											"end": 9680,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 9660,
											"end": 9777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9647,
											"end": 9777,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9647,
											"end": 9777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9513,
											"end": 9782,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 9513,
											"end": 9782,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9513,
											"end": 9782,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9513,
											"end": 9782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9509,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 9359,
											"end": 9509,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9419,
											"end": 9426,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9459,
											"end": 9471,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 9459,
											"end": 9471,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9441,
											"end": 9456,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 9441,
											"end": 9471,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9441,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 9441,
											"end": 9504,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9492,
											"end": 9504,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 9492,
											"end": 9504,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9441,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 9441,
											"end": 9504,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9441,
											"end": 9504,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 9441,
											"end": 9504,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9474,
											"end": 9489,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 9441,
											"end": 9504,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 9441,
											"end": 9504,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9434,
											"end": 9504,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9434,
											"end": 9504,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9509,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9359,
											"end": 9509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1100,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 1050,
											"end": 1108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1108,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 1023,
											"end": 1109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 1023,
											"end": 1109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 1116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 941,
											"end": 1116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2597,
											"end": 2605,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2595,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 1475,
											"end": 1480,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1505,
											"end": 1532,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 1534,
											"end": 1538,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1542,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1549,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 1482,
											"end": 1550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1482,
											"end": 1550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1455,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 1455,
											"end": 1551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 1455,
											"end": 1551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1558,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5815,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 5173,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5615,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 5646,
											"end": 5650,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 5,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5626,
											"end": 5631,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5645,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5618,
											"end": 5645,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 5618,
											"end": 5645,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 5618,
											"end": 5687,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5687,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5687,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5726,
											"end": 5727,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5705,
											"end": 5715,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5705,
											"end": 5722,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5705,
											"end": 5727,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5705,
											"end": 5761,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5705,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 5705,
											"end": 5761,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5705,
											"end": 5761,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5742,
											"end": 5752,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 5731,
											"end": 5761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 5731,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5705,
											"end": 5761,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 5705,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 5697,
											"end": 5808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 5697,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5243,
											"end": 5815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5815,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4241,
											"end": 4253,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 4294,
											"end": 4300,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4302,
											"end": 4306,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4308,
											"end": 4309,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4323,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 4272,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 4272,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4324,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4108,
											"end": 4331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5330,
											"end": 5342,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5387,
											"end": 5392,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5383,
											"name": "SELFBALANCE",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5362,
											"end": 5392,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 5354,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 5354,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5446,
											"end": 5458,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5483,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5487,
											"end": 5498,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5511,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5517,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 5487,
											"end": 5518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5487,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5445,
											"end": 5518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 5562,
											"end": 5568,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5570,
											"end": 5577,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5579,
											"end": 5589,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5591,
											"end": 5603,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5535,
											"end": 5561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 5535,
											"end": 5604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 5535,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5604,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5165,
											"end": 5611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7851,
											"end": 7863,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7879,
											"end": 7886,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7916,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7923,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7906,
											"end": 7928,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 8132,
											"end": 8138,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8121,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 8121,
											"end": 8139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 8113,
											"end": 8173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 8113,
											"end": 8173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 7902,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8208,
											"end": 8218,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 8201,
											"end": 8218,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 7875,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 8257,
											"end": 8267,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8269,
											"end": 8281,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8249,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 8249,
											"end": 8282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 8249,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7671,
											"end": 8299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 8821,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9000,
											"end": 9001,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8980,
											"end": 8990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8980,
											"end": 8997,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8980,
											"end": 9001,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9208,
											"end": 9218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9202,
											"end": 9219,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9264,
											"end": 9279,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9251,
											"end": 9261,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9247,
											"end": 9249,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9243,
											"end": 9262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9280,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 8976,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9331,
											"end": 9343,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 9324,
											"end": 9344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9324,
											"end": 9344,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 15,
											"value": "440"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 15,
											"value": "442"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 15,
											"value": "443"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "358"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 15,
											"value": "445"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 15,
											"value": "38"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 15,
											"value": "448"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 15,
											"value": "447"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 15,
											"value": "449"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 15,
											"value": "452"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 15,
											"value": "454"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "tag",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1645,
											"end": 1652,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1681,
											"end": 1694,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1674,
											"end": 1695,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1611,
											"end": 1701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "tag",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 1803,
											"end": 1808,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 1788,
											"end": 1809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "tag",
											"source": 15,
											"value": "457"
										},
										{
											"begin": 1788,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1783,
											"end": 1786,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1776,
											"end": 1810,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1707,
											"end": 1816,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1707,
											"end": 1816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "tag",
											"source": 15,
											"value": "58"
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1909,
											"end": 1913,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1949,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1932,
											"end": 1950,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1924,
											"end": 1950,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1924,
											"end": 1950,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2007,
											"end": 2024,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "363"
										},
										{
											"begin": 1960,
											"end": 2025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "tag",
											"source": 15,
											"value": "459"
										},
										{
											"begin": 1960,
											"end": 2025,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1822,
											"end": 2032,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1822,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2038,
											"end": 2155,
											"name": "tag",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 2038,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2147,
											"end": 2148,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2145,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2137,
											"end": 2149,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2161,
											"end": 2263,
											"name": "tag",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 2161,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2202,
											"end": 2208,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2253,
											"end": 2255,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2249,
											"end": 2256,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 2244,
											"end": 2246,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2242,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2233,
											"end": 2247,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2229,
											"end": 2257,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2219,
											"end": 2257,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2161,
											"end": 2263,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2161,
											"end": 2263,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2161,
											"end": 2263,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2161,
											"end": 2263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2269,
											"end": 2449,
											"name": "tag",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 2269,
											"end": 2449,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2317,
											"end": 2394,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2314,
											"end": 2315,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2395,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2414,
											"end": 2418,
											"name": "PUSH",
											"source": 15,
											"value": "41"
										},
										{
											"begin": 2411,
											"end": 2412,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2404,
											"end": 2419,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2438,
											"end": 2442,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2428,
											"end": 2443,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2455,
											"end": 2736,
											"name": "tag",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 2455,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2538,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 2560,
											"end": 2564,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2538,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 2538,
											"end": 2565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2538,
											"end": 2565,
											"name": "tag",
											"source": 15,
											"value": "464"
										},
										{
											"begin": 2538,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2530,
											"end": 2536,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2526,
											"end": 2566,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2668,
											"end": 2674,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2656,
											"end": 2666,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2653,
											"end": 2675,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2632,
											"end": 2650,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2620,
											"end": 2630,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2617,
											"end": 2651,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2614,
											"end": 2676,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 2611,
											"end": 2699,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2611,
											"end": 2699,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 2611,
											"end": 2699,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 2679,
											"end": 2697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "tag",
											"source": 15,
											"value": "466"
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2611,
											"end": 2699,
											"name": "tag",
											"source": 15,
											"value": "465"
										},
										{
											"begin": 2611,
											"end": 2699,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2719,
											"end": 2729,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2715,
											"end": 2717,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2708,
											"end": 2730,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2498,
											"end": 2736,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2455,
											"end": 2736,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2455,
											"end": 2736,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2455,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2742,
											"end": 2871,
											"name": "tag",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 2742,
											"end": 2871,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2776,
											"end": 2782,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2803,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 2803,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "353"
										},
										{
											"begin": 2803,
											"end": 2823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2803,
											"end": 2823,
											"name": "tag",
											"source": 15,
											"value": "468"
										},
										{
											"begin": 2803,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2793,
											"end": 2823,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2793,
											"end": 2823,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2832,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 2860,
											"end": 2864,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2832,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "367"
										},
										{
											"begin": 2832,
											"end": 2865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2832,
											"end": 2865,
											"name": "tag",
											"source": 15,
											"value": "469"
										},
										{
											"begin": 2832,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2742,
											"end": 2871,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2742,
											"end": 2871,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2742,
											"end": 2871,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2742,
											"end": 2871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2877,
											"end": 3198,
											"name": "tag",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 2877,
											"end": 3198,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2964,
											"end": 2968,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3072,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3046,
											"end": 3052,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3043,
											"end": 3073,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3040,
											"end": 3096,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3040,
											"end": 3096,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 3040,
											"end": 3096,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 3076,
											"end": 3094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "tag",
											"source": 15,
											"value": "472"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3040,
											"end": 3096,
											"name": "tag",
											"source": 15,
											"value": "471"
										},
										{
											"begin": 3040,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3126,
											"end": 3130,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3124,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3114,
											"end": 3131,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 3106,
											"end": 3131,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3106,
											"end": 3131,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3186,
											"end": 3190,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3180,
											"end": 3184,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3176,
											"end": 3191,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3168,
											"end": 3191,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3168,
											"end": 3191,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2877,
											"end": 3198,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2877,
											"end": 3198,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2877,
											"end": 3198,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2877,
											"end": 3198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3204,
											"end": 3321,
											"name": "tag",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 3204,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3313,
											"end": 3314,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3311,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3303,
											"end": 3315,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3327,
											"end": 3444,
											"name": "tag",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 3327,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3436,
											"end": 3437,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3434,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3426,
											"end": 3438,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 3450,
											"end": 3758,
											"name": "tag",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 3450,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3512,
											"end": 3516,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3602,
											"end": 3620,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3594,
											"end": 3600,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3591,
											"end": 3621,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3588,
											"end": 3644,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3588,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 3588,
											"end": 3644,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3624,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 3624,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 3624,
											"end": 3642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3624,
											"end": 3642,
											"name": "tag",
											"source": 15,
											"value": "477"
										},
										{
											"begin": 3624,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3588,
											"end": 3644,
											"name": "tag",
											"source": 15,
											"value": "476"
										},
										{
											"begin": 3588,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3662,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3662,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 3662,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3662,
											"end": 3691,
											"name": "tag",
											"source": 15,
											"value": "478"
										},
										{
											"begin": 3662,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3654,
											"end": 3691,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3654,
											"end": 3691,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3746,
											"end": 3750,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3744,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3736,
											"end": 3751,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3728,
											"end": 3751,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3728,
											"end": 3751,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3450,
											"end": 3758,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3450,
											"end": 3758,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3450,
											"end": 3758,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3450,
											"end": 3758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3764,
											"end": 3910,
											"name": "tag",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 3764,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3861,
											"end": 3867,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3856,
											"end": 3859,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3851,
											"end": 3854,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3838,
											"end": 3868,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 3902,
											"end": 3903,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3893,
											"end": 3899,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3888,
											"end": 3891,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3884,
											"end": 3900,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3877,
											"end": 3904,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3764,
											"end": 3910,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3764,
											"end": 3910,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3764,
											"end": 3910,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3764,
											"end": 3910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3916,
											"end": 4341,
											"name": "tag",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 3916,
											"end": 4341,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3994,
											"end": 3999,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4019,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 4035,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 4077,
											"end": 4083,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4035,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "372"
										},
										{
											"begin": 4035,
											"end": 4084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4035,
											"end": 4084,
											"name": "tag",
											"source": 15,
											"value": "482"
										},
										{
											"begin": 4035,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 4019,
											"end": 4085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4085,
											"name": "tag",
											"source": 15,
											"value": "481"
										},
										{
											"begin": 4019,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4010,
											"end": 4085,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4010,
											"end": 4085,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4108,
											"end": 4114,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4101,
											"end": 4106,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4094,
											"end": 4115,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4146,
											"end": 4150,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4144,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4135,
											"end": 4151,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4184,
											"end": 4187,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4175,
											"end": 4181,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4170,
											"end": 4173,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4166,
											"end": 4182,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4163,
											"end": 4188,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 4160,
											"end": 4272,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4160,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 4160,
											"end": 4272,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "371"
										},
										{
											"begin": 4191,
											"end": 4270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "tag",
											"source": 15,
											"value": "484"
										},
										{
											"begin": 4191,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4160,
											"end": 4272,
											"name": "tag",
											"source": 15,
											"value": "483"
										},
										{
											"begin": 4160,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4281,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 4328,
											"end": 4334,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4323,
											"end": 4326,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4318,
											"end": 4321,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 4281,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "373"
										},
										{
											"begin": 4281,
											"end": 4335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4281,
											"end": 4335,
											"name": "tag",
											"source": 15,
											"value": "485"
										},
										{
											"begin": 4281,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4000,
											"end": 4341,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3916,
											"end": 4341,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 3916,
											"end": 4341,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3916,
											"end": 4341,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3916,
											"end": 4341,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3916,
											"end": 4341,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3916,
											"end": 4341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4701,
											"name": "tag",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 4361,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4417,
											"end": 4422,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4466,
											"end": 4469,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4459,
											"end": 4463,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 4451,
											"end": 4457,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4447,
											"end": 4464,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4443,
											"end": 4470,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 4433,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 4433,
											"end": 4555,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4474,
											"end": 4553,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 4474,
											"end": 4553,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 4474,
											"end": 4553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4474,
											"end": 4553,
											"name": "tag",
											"source": 15,
											"value": "488"
										},
										{
											"begin": 4474,
											"end": 4553,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4433,
											"end": 4555,
											"name": "tag",
											"source": 15,
											"value": "487"
										},
										{
											"begin": 4433,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4591,
											"end": 4597,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4578,
											"end": 4598,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 4616,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "489"
										},
										{
											"begin": 4691,
											"end": 4694,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4683,
											"end": 4689,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4676,
											"end": 4680,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4668,
											"end": 4674,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4664,
											"end": 4681,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4616,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "374"
										},
										{
											"begin": 4616,
											"end": 4695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4616,
											"end": 4695,
											"name": "tag",
											"source": 15,
											"value": "489"
										},
										{
											"begin": 4616,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4607,
											"end": 4695,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4607,
											"end": 4695,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4423,
											"end": 4701,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4701,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4701,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4701,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4701,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4361,
											"end": 4701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4723,
											"end": 5668,
											"name": "tag",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 4723,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4829,
											"end": 4834,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 4870,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 4937,
											"end": 4943,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 4870,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "369"
										},
										{
											"begin": 4870,
											"end": 4944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4870,
											"end": 4944,
											"name": "tag",
											"source": 15,
											"value": "492"
										},
										{
											"begin": 4870,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4854,
											"end": 4945,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 4854,
											"end": 4945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4854,
											"end": 4945,
											"name": "tag",
											"source": 15,
											"value": "491"
										},
										{
											"begin": 4854,
											"end": 4945,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4845,
											"end": 4945,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4845,
											"end": 4945,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4965,
											"end": 4970,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4994,
											"end": 5000,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 4987,
											"end": 4992,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4980,
											"end": 5001,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5028,
											"end": 5032,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5021,
											"end": 5026,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5010,
											"end": 5033,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5010,
											"end": 5033,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5081,
											"end": 5085,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5073,
											"end": 5079,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 5069,
											"end": 5086,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 5061,
											"end": 5067,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5057,
											"end": 5087,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5110,
											"end": 5113,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5102,
											"end": 5108,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5099,
											"end": 5114,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5096,
											"end": 5218,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5096,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 5096,
											"end": 5218,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5129,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 5129,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 5129,
											"end": 5208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5129,
											"end": 5208,
											"name": "tag",
											"source": 15,
											"value": "494"
										},
										{
											"begin": 5129,
											"end": 5208,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5096,
											"end": 5218,
											"name": "tag",
											"source": 15,
											"value": "493"
										},
										{
											"begin": 5096,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5244,
											"end": 5250,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5662,
											"name": "tag",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 5227,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5261,
											"end": 5267,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5256,
											"end": 5259,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5253,
											"end": 5268,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5662,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 5227,
											"end": 5662,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5350,
											"end": 5353,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5337,
											"end": 5354,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5373,
											"end": 5384,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5370,
											"end": 5405,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5367,
											"end": 5489,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5367,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 5367,
											"end": 5489,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5408,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 5408,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 5408,
											"end": 5487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5408,
											"end": 5487,
											"name": "tag",
											"source": 15,
											"value": "499"
										},
										{
											"begin": 5408,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5367,
											"end": 5489,
											"name": "tag",
											"source": 15,
											"value": "498"
										},
										{
											"begin": 5367,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5532,
											"end": 5543,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5524,
											"end": 5530,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5520,
											"end": 5544,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5570,
											"end": 5617,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 5613,
											"end": 5616,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5570,
											"end": 5617,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 5570,
											"end": 5617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5570,
											"end": 5617,
											"name": "tag",
											"source": 15,
											"value": "500"
										},
										{
											"begin": 5570,
											"end": 5617,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5565,
											"end": 5568,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5558,
											"end": 5618,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5647,
											"end": 5651,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5645,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 5638,
											"end": 5652,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5631,
											"end": 5652,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 5631,
											"end": 5652,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5303,
											"end": 5662,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5303,
											"end": 5662,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5287,
											"end": 5291,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5285,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5278,
											"end": 5292,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5271,
											"end": 5292,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5271,
											"end": 5292,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5662,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "495"
										},
										{
											"begin": 5227,
											"end": 5662,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5662,
											"name": "tag",
											"source": 15,
											"value": "497"
										},
										{
											"begin": 5227,
											"end": 5662,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5231,
											"end": 5252,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4835,
											"end": 5668,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4835,
											"end": 5668,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4723,
											"end": 5668,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 4723,
											"end": 5668,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 4723,
											"end": 5668,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4723,
											"end": 5668,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4723,
											"end": 5668,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4723,
											"end": 5668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5690,
											"end": 6080,
											"name": "tag",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 5690,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5771,
											"end": 5776,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5823,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5813,
											"end": 5817,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5805,
											"end": 5811,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5801,
											"end": 5818,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5797,
											"end": 5824,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 5787,
											"end": 5909,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 5787,
											"end": 5909,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5828,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 5828,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 5828,
											"end": 5907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5828,
											"end": 5907,
											"name": "tag",
											"source": 15,
											"value": "503"
										},
										{
											"begin": 5828,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5787,
											"end": 5909,
											"name": "tag",
											"source": 15,
											"value": "502"
										},
										{
											"begin": 5787,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5945,
											"end": 5951,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5932,
											"end": 5952,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 5970,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 6070,
											"end": 6073,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6062,
											"end": 6068,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6055,
											"end": 6059,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6047,
											"end": 6053,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 6043,
											"end": 6060,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5970,
											"end": 6074,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "376"
										},
										{
											"begin": 5970,
											"end": 6074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5970,
											"end": 6074,
											"name": "tag",
											"source": 15,
											"value": "504"
										},
										{
											"begin": 5970,
											"end": 6074,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5961,
											"end": 6074,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5961,
											"end": 6074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5777,
											"end": 6080,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5690,
											"end": 6080,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5690,
											"end": 6080,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5690,
											"end": 6080,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5690,
											"end": 6080,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5690,
											"end": 6080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6086,
											"end": 6397,
											"name": "tag",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 6086,
											"end": 6397,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6163,
											"end": 6167,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6271,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6245,
											"end": 6251,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6242,
											"end": 6272,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 6239,
											"end": 6295,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 6239,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 6239,
											"end": 6295,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6275,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 6275,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "366"
										},
										{
											"begin": 6275,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6275,
											"end": 6293,
											"name": "tag",
											"source": 15,
											"value": "507"
										},
										{
											"begin": 6275,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6239,
											"end": 6295,
											"name": "tag",
											"source": 15,
											"value": "506"
										},
										{
											"begin": 6239,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6325,
											"end": 6329,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6317,
											"end": 6323,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6313,
											"end": 6330,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6305,
											"end": 6330,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6385,
											"end": 6389,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6379,
											"end": 6383,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6375,
											"end": 6390,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6367,
											"end": 6390,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6367,
											"end": 6390,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6086,
											"end": 6397,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6086,
											"end": 6397,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6086,
											"end": 6397,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6086,
											"end": 6397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6403,
											"end": 6525,
											"name": "tag",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 6403,
											"end": 6525,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6476,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 6494,
											"end": 6499,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6476,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 6476,
											"end": 6500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6476,
											"end": 6500,
											"name": "tag",
											"source": 15,
											"value": "509"
										},
										{
											"begin": 6476,
											"end": 6500,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6469,
											"end": 6474,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6466,
											"end": 6501,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 6456,
											"end": 6519,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 6456,
											"end": 6519,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6512,
											"end": 6513,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6505,
											"end": 6517,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 6456,
											"end": 6519,
											"name": "tag",
											"source": 15,
											"value": "510"
										},
										{
											"begin": 6456,
											"end": 6519,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6403,
											"end": 6525,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6403,
											"end": 6525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6531,
											"end": 6670,
											"name": "tag",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 6531,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6577,
											"end": 6582,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6615,
											"end": 6621,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6602,
											"end": 6622,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 6593,
											"end": 6622,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6593,
											"end": 6622,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6631,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 6658,
											"end": 6663,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 6631,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 6631,
											"end": 6664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6631,
											"end": 6664,
											"name": "tag",
											"source": 15,
											"value": "512"
										},
										{
											"begin": 6631,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6531,
											"end": 6670,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6531,
											"end": 6670,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 6531,
											"end": 6670,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6531,
											"end": 6670,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6531,
											"end": 6670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6693,
											"end": 7403,
											"name": "tag",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 6693,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6789,
											"end": 6794,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 6814,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 6830,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 6887,
											"end": 6893,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 6830,
											"end": 6894,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "378"
										},
										{
											"begin": 6830,
											"end": 6894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6830,
											"end": 6894,
											"name": "tag",
											"source": 15,
											"value": "515"
										},
										{
											"begin": 6830,
											"end": 6894,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6814,
											"end": 6895,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "368"
										},
										{
											"begin": 6814,
											"end": 6895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6814,
											"end": 6895,
											"name": "tag",
											"source": 15,
											"value": "514"
										},
										{
											"begin": 6814,
											"end": 6895,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 6805,
											"end": 6895,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6805,
											"end": 6895,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6915,
											"end": 6920,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 6944,
											"end": 6950,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 6937,
											"end": 6942,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6930,
											"end": 6951,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 6978,
											"end": 6982,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 6971,
											"end": 6976,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 6967,
											"end": 6983,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 6960,
											"end": 6983,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 6960,
											"end": 6983,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7031,
											"end": 7035,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7023,
											"end": 7029,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7019,
											"end": 7036,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 7011,
											"end": 7017,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7007,
											"end": 7037,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7060,
											"end": 7063,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 7052,
											"end": 7058,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7049,
											"end": 7064,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7079,
											"end": 7158,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 7079,
											"end": 7158,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "370"
										},
										{
											"begin": 7079,
											"end": 7158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7079,
											"end": 7158,
											"name": "tag",
											"source": 15,
											"value": "517"
										},
										{
											"begin": 7079,
											"end": 7158,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "tag",
											"source": 15,
											"value": "516"
										},
										{
											"begin": 7046,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7194,
											"end": 7200,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7177,
											"end": 7397,
											"name": "tag",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 7177,
											"end": 7397,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7211,
											"end": 7217,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7206,
											"end": 7209,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7203,
											"end": 7218,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 7177,
											"end": 7397,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 7177,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 7177,
											"end": 7397,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7286,
											"end": 7289,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7315,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 7348,
											"end": 7351,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 7336,
											"end": 7346,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7315,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 7315,
											"end": 7352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7315,
											"end": 7352,
											"name": "tag",
											"source": 15,
											"value": "521"
										},
										{
											"begin": 7315,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7310,
											"end": 7313,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7303,
											"end": 7353,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 7382,
											"end": 7386,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7377,
											"end": 7380,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7373,
											"end": 7387,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7366,
											"end": 7387,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 7366,
											"end": 7387,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7253,
											"end": 7397,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7237,
											"end": 7241,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7232,
											"end": 7235,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7228,
											"end": 7242,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7221,
											"end": 7242,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 7221,
											"end": 7242,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7177,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "518"
										},
										{
											"begin": 7177,
											"end": 7397,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7177,
											"end": 7397,
											"name": "tag",
											"source": 15,
											"value": "520"
										},
										{
											"begin": 7177,
											"end": 7397,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7181,
											"end": 7202,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6795,
											"end": 7403,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6795,
											"end": 7403,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6693,
											"end": 7403,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 6693,
											"end": 7403,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 6693,
											"end": 7403,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6693,
											"end": 7403,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6693,
											"end": 7403,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 6693,
											"end": 7403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7426,
											"end": 7796,
											"name": "tag",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 7426,
											"end": 7796,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7497,
											"end": 7502,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7546,
											"end": 7549,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7539,
											"end": 7543,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 7531,
											"end": 7537,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 7527,
											"end": 7544,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7523,
											"end": 7550,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 7513,
											"end": 7635,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 7513,
											"end": 7635,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 7554,
											"end": 7633,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 7554,
											"end": 7633,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "364"
										},
										{
											"begin": 7554,
											"end": 7633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7554,
											"end": 7633,
											"name": "tag",
											"source": 15,
											"value": "524"
										},
										{
											"begin": 7554,
											"end": 7633,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7513,
											"end": 7635,
											"name": "tag",
											"source": 15,
											"value": "523"
										},
										{
											"begin": 7513,
											"end": 7635,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7671,
											"end": 7677,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 7658,
											"end": 7678,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 7696,
											"end": 7790,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 7786,
											"end": 7789,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 7778,
											"end": 7784,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 7771,
											"end": 7775,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 7763,
											"end": 7769,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 7759,
											"end": 7776,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 7696,
											"end": 7790,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "381"
										},
										{
											"begin": 7696,
											"end": 7790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7696,
											"end": 7790,
											"name": "tag",
											"source": 15,
											"value": "525"
										},
										{
											"begin": 7696,
											"end": 7790,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7687,
											"end": 7790,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7687,
											"end": 7790,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7503,
											"end": 7796,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7426,
											"end": 7796,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7426,
											"end": 7796,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 7426,
											"end": 7796,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7426,
											"end": 7796,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7426,
											"end": 7796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 7802,
											"end": 9091,
											"name": "tag",
											"source": 15,
											"value": "67"
										},
										{
											"begin": 7802,
											"end": 9091,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 7974,
											"end": 7980,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 7982,
											"end": 7988,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 7990,
											"end": 7996,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8039,
											"end": 8041,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 8027,
											"end": 8036,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8018,
											"end": 8025,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8014,
											"end": 8037,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 8010,
											"end": 8042,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 8007,
											"end": 8126,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8007,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 8007,
											"end": 8126,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8045,
											"end": 8124,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "528"
										},
										{
											"begin": 8045,
											"end": 8124,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 8045,
											"end": 8124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8045,
											"end": 8124,
											"name": "tag",
											"source": 15,
											"value": "528"
										},
										{
											"begin": 8045,
											"end": 8124,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8007,
											"end": 8126,
											"name": "tag",
											"source": 15,
											"value": "527"
										},
										{
											"begin": 8007,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8193,
											"end": 8194,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 8182,
											"end": 8191,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8178,
											"end": 8195,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8165,
											"end": 8196,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8223,
											"end": 8241,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8215,
											"end": 8221,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8212,
											"end": 8242,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8209,
											"end": 8326,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8209,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 8209,
											"end": 8326,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8245,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 8245,
											"end": 8324,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 8245,
											"end": 8324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8245,
											"end": 8324,
											"name": "tag",
											"source": 15,
											"value": "530"
										},
										{
											"begin": 8245,
											"end": 8324,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8209,
											"end": 8326,
											"name": "tag",
											"source": 15,
											"value": "529"
										},
										{
											"begin": 8209,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8350,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 8430,
											"end": 8437,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8421,
											"end": 8427,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8410,
											"end": 8419,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 8406,
											"end": 8428,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8350,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 8350,
											"end": 8438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8350,
											"end": 8438,
											"name": "tag",
											"source": 15,
											"value": "531"
										},
										{
											"begin": 8350,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8340,
											"end": 8438,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 8340,
											"end": 8438,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8136,
											"end": 8448,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8515,
											"end": 8517,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 8504,
											"end": 8513,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8500,
											"end": 8518,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8487,
											"end": 8519,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8546,
											"end": 8564,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8538,
											"end": 8544,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8535,
											"end": 8565,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8532,
											"end": 8649,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8532,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 8532,
											"end": 8649,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8568,
											"end": 8647,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 8568,
											"end": 8647,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 8568,
											"end": 8647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8568,
											"end": 8647,
											"name": "tag",
											"source": 15,
											"value": "533"
										},
										{
											"begin": 8568,
											"end": 8647,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8532,
											"end": 8649,
											"name": "tag",
											"source": 15,
											"value": "532"
										},
										{
											"begin": 8532,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8673,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 8753,
											"end": 8760,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 8744,
											"end": 8750,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 8733,
											"end": 8742,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 8729,
											"end": 8751,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8673,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "377"
										},
										{
											"begin": 8673,
											"end": 8761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8673,
											"end": 8761,
											"name": "tag",
											"source": 15,
											"value": "534"
										},
										{
											"begin": 8673,
											"end": 8761,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8663,
											"end": 8761,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 8663,
											"end": 8761,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8458,
											"end": 8771,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8838,
											"end": 8840,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 8827,
											"end": 8836,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 8823,
											"end": 8841,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8810,
											"end": 8842,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 8869,
											"end": 8887,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8861,
											"end": 8867,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 8858,
											"end": 8888,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 8855,
											"end": 8972,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 8855,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 8855,
											"end": 8972,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 8891,
											"end": 8970,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 8891,
											"end": 8970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8891,
											"end": 8970,
											"name": "tag",
											"source": 15,
											"value": "536"
										},
										{
											"begin": 8891,
											"end": 8970,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8855,
											"end": 8972,
											"name": "tag",
											"source": 15,
											"value": "535"
										},
										{
											"begin": 8855,
											"end": 8972,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8996,
											"end": 9074,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 9066,
											"end": 9073,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 9057,
											"end": 9063,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9046,
											"end": 9055,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 9042,
											"end": 9064,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 8996,
											"end": 9074,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "382"
										},
										{
											"begin": 8996,
											"end": 9074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 8996,
											"end": 9074,
											"name": "tag",
											"source": 15,
											"value": "537"
										},
										{
											"begin": 8996,
											"end": 9074,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 8986,
											"end": 9074,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 8986,
											"end": 9074,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 8781,
											"end": 9084,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7802,
											"end": 9091,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7802,
											"end": 9091,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7802,
											"end": 9091,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7802,
											"end": 9091,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 7802,
											"end": 9091,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 7802,
											"end": 9091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9097,
											"end": 9157,
											"name": "tag",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 9097,
											"end": 9157,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9125,
											"end": 9128,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9146,
											"end": 9151,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9139,
											"end": 9151,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9139,
											"end": 9151,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9097,
											"end": 9157,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9097,
											"end": 9157,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9097,
											"end": 9157,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9097,
											"end": 9157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9163,
											"end": 9305,
											"name": "tag",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 9163,
											"end": 9305,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9213,
											"end": 9222,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9246,
											"end": 9299,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 9264,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 9273,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 9291,
											"end": 9296,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9273,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 9273,
											"end": 9297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9273,
											"end": 9297,
											"name": "tag",
											"source": 15,
											"value": "542"
										},
										{
											"begin": 9273,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9264,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "383"
										},
										{
											"begin": 9264,
											"end": 9298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9264,
											"end": 9298,
											"name": "tag",
											"source": 15,
											"value": "541"
										},
										{
											"begin": 9264,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9246,
											"end": 9299,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "356"
										},
										{
											"begin": 9246,
											"end": 9299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9246,
											"end": 9299,
											"name": "tag",
											"source": 15,
											"value": "540"
										},
										{
											"begin": 9246,
											"end": 9299,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9233,
											"end": 9299,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9233,
											"end": 9299,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9163,
											"end": 9305,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9163,
											"end": 9305,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9163,
											"end": 9305,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9163,
											"end": 9305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9311,
											"end": 9437,
											"name": "tag",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 9311,
											"end": 9437,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9361,
											"end": 9370,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9394,
											"end": 9431,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 9425,
											"end": 9430,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9394,
											"end": 9431,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "384"
										},
										{
											"begin": 9394,
											"end": 9431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9394,
											"end": 9431,
											"name": "tag",
											"source": 15,
											"value": "544"
										},
										{
											"begin": 9394,
											"end": 9431,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9381,
											"end": 9431,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9381,
											"end": 9431,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9311,
											"end": 9437,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9311,
											"end": 9437,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9311,
											"end": 9437,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9311,
											"end": 9437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9443,
											"end": 9583,
											"name": "tag",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 9443,
											"end": 9583,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9507,
											"end": 9516,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 9571,
											"end": 9576,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9540,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "385"
										},
										{
											"begin": 9540,
											"end": 9577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9540,
											"end": 9577,
											"name": "tag",
											"source": 15,
											"value": "546"
										},
										{
											"begin": 9540,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9527,
											"end": 9577,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9527,
											"end": 9577,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9443,
											"end": 9583,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9443,
											"end": 9583,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9443,
											"end": 9583,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9443,
											"end": 9583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9589,
											"end": 9748,
											"name": "tag",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 9589,
											"end": 9748,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 9735,
											"end": 9740,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "386"
										},
										{
											"begin": 9690,
											"end": 9741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9690,
											"end": 9741,
											"name": "tag",
											"source": 15,
											"value": "548"
										},
										{
											"begin": 9690,
											"end": 9741,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9685,
											"end": 9688,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9678,
											"end": 9742,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 9589,
											"end": 9748,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9589,
											"end": 9748,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9589,
											"end": 9748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9754,
											"end": 10004,
											"name": "tag",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 9754,
											"end": 10004,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9861,
											"end": 9865,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9899,
											"end": 9901,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 9888,
											"end": 9897,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 9884,
											"end": 9902,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9876,
											"end": 9902,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 9876,
											"end": 9902,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9912,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 9994,
											"end": 9995,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 9983,
											"end": 9992,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 9979,
											"end": 9996,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 9970,
											"end": 9976,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 9912,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "387"
										},
										{
											"begin": 9912,
											"end": 9997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 9912,
											"end": 9997,
											"name": "tag",
											"source": 15,
											"value": "550"
										},
										{
											"begin": 9912,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 9754,
											"end": 10004,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 9754,
											"end": 10004,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 9754,
											"end": 10004,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9754,
											"end": 10004,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 9754,
											"end": 10004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10010,
											"end": 10989,
											"name": "tag",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 10010,
											"end": 10989,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10107,
											"end": 10113,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10115,
											"end": 10121,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 10123,
											"end": 10129,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10172,
											"end": 10174,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 10160,
											"end": 10169,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10151,
											"end": 10158,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10147,
											"end": 10170,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 10143,
											"end": 10175,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 10140,
											"end": 10259,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10140,
											"end": 10259,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 10140,
											"end": 10259,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10178,
											"end": 10257,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 10178,
											"end": 10257,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 10178,
											"end": 10257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10178,
											"end": 10257,
											"name": "tag",
											"source": 15,
											"value": "553"
										},
										{
											"begin": 10178,
											"end": 10257,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10140,
											"end": 10259,
											"name": "tag",
											"source": 15,
											"value": "552"
										},
										{
											"begin": 10140,
											"end": 10259,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10326,
											"end": 10327,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 10315,
											"end": 10324,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10311,
											"end": 10328,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10298,
											"end": 10329,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 10356,
											"end": 10374,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10348,
											"end": 10354,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10345,
											"end": 10375,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10342,
											"end": 10459,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10342,
											"end": 10459,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 10342,
											"end": 10459,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10378,
											"end": 10457,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 10378,
											"end": 10457,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 10378,
											"end": 10457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10378,
											"end": 10457,
											"name": "tag",
											"source": 15,
											"value": "555"
										},
										{
											"begin": 10378,
											"end": 10457,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10342,
											"end": 10459,
											"name": "tag",
											"source": 15,
											"value": "554"
										},
										{
											"begin": 10342,
											"end": 10459,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10483,
											"end": 10546,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 10538,
											"end": 10545,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10529,
											"end": 10535,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10518,
											"end": 10527,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 10514,
											"end": 10536,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10483,
											"end": 10546,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 10483,
											"end": 10546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10483,
											"end": 10546,
											"name": "tag",
											"source": 15,
											"value": "556"
										},
										{
											"begin": 10483,
											"end": 10546,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10473,
											"end": 10546,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 10473,
											"end": 10546,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10269,
											"end": 10556,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10623,
											"end": 10625,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 10612,
											"end": 10621,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 10608,
											"end": 10626,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10595,
											"end": 10627,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 10654,
											"end": 10672,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10646,
											"end": 10652,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 10643,
											"end": 10673,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 10640,
											"end": 10757,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 10640,
											"end": 10757,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 10640,
											"end": 10757,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 10676,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 10676,
											"end": 10755,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "355"
										},
										{
											"begin": 10676,
											"end": 10755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10676,
											"end": 10755,
											"name": "tag",
											"source": 15,
											"value": "558"
										},
										{
											"begin": 10676,
											"end": 10755,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10640,
											"end": 10757,
											"name": "tag",
											"source": 15,
											"value": "557"
										},
										{
											"begin": 10640,
											"end": 10757,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10781,
											"end": 10844,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 10836,
											"end": 10843,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10827,
											"end": 10833,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10816,
											"end": 10825,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 10812,
											"end": 10834,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10781,
											"end": 10844,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "375"
										},
										{
											"begin": 10781,
											"end": 10844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10781,
											"end": 10844,
											"name": "tag",
											"source": 15,
											"value": "559"
										},
										{
											"begin": 10781,
											"end": 10844,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10771,
											"end": 10844,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10771,
											"end": 10844,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10566,
											"end": 10854,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10893,
											"end": 10895,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 10919,
											"end": 10972,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 10964,
											"end": 10971,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 10955,
											"end": 10961,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 10944,
											"end": 10953,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 10940,
											"end": 10962,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 10919,
											"end": 10972,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 10919,
											"end": 10972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10919,
											"end": 10972,
											"name": "tag",
											"source": 15,
											"value": "560"
										},
										{
											"begin": 10919,
											"end": 10972,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 10909,
											"end": 10972,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10909,
											"end": 10972,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10864,
											"end": 10982,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10010,
											"end": 10989,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10010,
											"end": 10989,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10010,
											"end": 10989,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10010,
											"end": 10989,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10010,
											"end": 10989,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 10010,
											"end": 10989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 10995,
											"end": 11085,
											"name": "tag",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 10995,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11030,
											"end": 11037,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11073,
											"end": 11078,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11070,
											"end": 11071,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 11059,
											"end": 11079,
											"name": "SIGNEXTEND",
											"source": 15
										},
										{
											"begin": 11048,
											"end": 11079,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11048,
											"end": 11079,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10995,
											"end": 11085,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 10995,
											"end": 11085,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 10995,
											"end": 11085,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 10995,
											"end": 11085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11091,
											"end": 11203,
											"name": "tag",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 11091,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11174,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "563"
										},
										{
											"begin": 11190,
											"end": 11195,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11174,
											"end": 11196,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 11174,
											"end": 11196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11174,
											"end": 11196,
											"name": "tag",
											"source": 15,
											"value": "563"
										},
										{
											"begin": 11174,
											"end": 11196,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11169,
											"end": 11172,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11162,
											"end": 11197,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11091,
											"end": 11203,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11091,
											"end": 11203,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11091,
											"end": 11203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11209,
											"end": 11423,
											"name": "tag",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 11209,
											"end": 11423,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11298,
											"end": 11302,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11336,
											"end": 11338,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11325,
											"end": 11334,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11321,
											"end": 11339,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11313,
											"end": 11339,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11313,
											"end": 11339,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11349,
											"end": 11416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 11413,
											"end": 11414,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11402,
											"end": 11411,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11398,
											"end": 11415,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11389,
											"end": 11395,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 11349,
											"end": 11416,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "389"
										},
										{
											"begin": 11349,
											"end": 11416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11349,
											"end": 11416,
											"name": "tag",
											"source": 15,
											"value": "565"
										},
										{
											"begin": 11349,
											"end": 11416,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11209,
											"end": 11423,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11209,
											"end": 11423,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11209,
											"end": 11423,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11209,
											"end": 11423,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11209,
											"end": 11423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11429,
											"end": 11903,
											"name": "tag",
											"source": 15,
											"value": "93"
										},
										{
											"begin": 11429,
											"end": 11903,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11497,
											"end": 11503,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11505,
											"end": 11511,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 11554,
											"end": 11556,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 11542,
											"end": 11551,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 11533,
											"end": 11540,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11529,
											"end": 11552,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 11525,
											"end": 11557,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 11522,
											"end": 11641,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 11522,
											"end": 11641,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 11522,
											"end": 11641,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 11560,
											"end": 11639,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "568"
										},
										{
											"begin": 11560,
											"end": 11639,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 11560,
											"end": 11639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11560,
											"end": 11639,
											"name": "tag",
											"source": 15,
											"value": "568"
										},
										{
											"begin": 11560,
											"end": 11639,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11522,
											"end": 11641,
											"name": "tag",
											"source": 15,
											"value": "567"
										},
										{
											"begin": 11522,
											"end": 11641,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11680,
											"end": 11681,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 11705,
											"end": 11758,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 11750,
											"end": 11757,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11741,
											"end": 11747,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11730,
											"end": 11739,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11726,
											"end": 11748,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11705,
											"end": 11758,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "359"
										},
										{
											"begin": 11705,
											"end": 11758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11705,
											"end": 11758,
											"name": "tag",
											"source": 15,
											"value": "569"
										},
										{
											"begin": 11705,
											"end": 11758,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11695,
											"end": 11758,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11695,
											"end": 11758,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11651,
											"end": 11768,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11807,
											"end": 11809,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 11833,
											"end": 11886,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 11878,
											"end": 11885,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 11869,
											"end": 11875,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11858,
											"end": 11867,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 11854,
											"end": 11876,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 11833,
											"end": 11886,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 11833,
											"end": 11886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11833,
											"end": 11886,
											"name": "tag",
											"source": 15,
											"value": "570"
										},
										{
											"begin": 11833,
											"end": 11886,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11823,
											"end": 11886,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 11823,
											"end": 11886,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11778,
											"end": 11896,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11429,
											"end": 11903,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11429,
											"end": 11903,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11429,
											"end": 11903,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 11429,
											"end": 11903,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 11429,
											"end": 11903,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11429,
											"end": 11903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11909,
											"end": 12027,
											"name": "tag",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 11909,
											"end": 12027,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11996,
											"end": 12020,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "572"
										},
										{
											"begin": 12014,
											"end": 12019,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 11996,
											"end": 12020,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "357"
										},
										{
											"begin": 11996,
											"end": 12020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 11996,
											"end": 12020,
											"name": "tag",
											"source": 15,
											"value": "572"
										},
										{
											"begin": 11996,
											"end": 12020,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 11991,
											"end": 11994,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 11984,
											"end": 12021,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 11909,
											"end": 12027,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11909,
											"end": 12027,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 11909,
											"end": 12027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12033,
											"end": 12255,
											"name": "tag",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 12033,
											"end": 12255,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12126,
											"end": 12130,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12164,
											"end": 12166,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12153,
											"end": 12162,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12149,
											"end": 12167,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12141,
											"end": 12167,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 12141,
											"end": 12167,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12177,
											"end": 12248,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 12245,
											"end": 12246,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12234,
											"end": 12243,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12230,
											"end": 12247,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12221,
											"end": 12227,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12177,
											"end": 12248,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 12177,
											"end": 12248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12177,
											"end": 12248,
											"name": "tag",
											"source": 15,
											"value": "574"
										},
										{
											"begin": 12177,
											"end": 12248,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12033,
											"end": 12255,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12033,
											"end": 12255,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12033,
											"end": 12255,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12033,
											"end": 12255,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12033,
											"end": 12255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12261,
											"end": 12590,
											"name": "tag",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 12261,
											"end": 12590,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12320,
											"end": 12326,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12369,
											"end": 12371,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 12357,
											"end": 12366,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12348,
											"end": 12355,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12344,
											"end": 12367,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 12340,
											"end": 12372,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 12337,
											"end": 12456,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 12337,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 12337,
											"end": 12456,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 12375,
											"end": 12454,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "577"
										},
										{
											"begin": 12375,
											"end": 12454,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 12375,
											"end": 12454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12375,
											"end": 12454,
											"name": "tag",
											"source": 15,
											"value": "577"
										},
										{
											"begin": 12375,
											"end": 12454,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12337,
											"end": 12456,
											"name": "tag",
											"source": 15,
											"value": "576"
										},
										{
											"begin": 12337,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12495,
											"end": 12496,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12520,
											"end": 12573,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 12565,
											"end": 12572,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 12556,
											"end": 12562,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12545,
											"end": 12554,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 12541,
											"end": 12563,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 12520,
											"end": 12573,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "380"
										},
										{
											"begin": 12520,
											"end": 12573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12520,
											"end": 12573,
											"name": "tag",
											"source": 15,
											"value": "578"
										},
										{
											"begin": 12520,
											"end": 12573,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12510,
											"end": 12573,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12510,
											"end": 12573,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12466,
											"end": 12583,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12261,
											"end": 12590,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12261,
											"end": 12590,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12261,
											"end": 12590,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12261,
											"end": 12590,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12261,
											"end": 12590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12596,
											"end": 12776,
											"name": "tag",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 12596,
											"end": 12776,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12644,
											"end": 12721,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12641,
											"end": 12642,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12634,
											"end": 12722,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12741,
											"end": 12745,
											"name": "PUSH",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 12738,
											"end": 12739,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 12731,
											"end": 12746,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 12765,
											"end": 12769,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 12762,
											"end": 12763,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12755,
											"end": 12770,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 12782,
											"end": 13192,
											"name": "tag",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 12782,
											"end": 13192,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12822,
											"end": 12829,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 12845,
											"end": 12865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 12863,
											"end": 12864,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12845,
											"end": 12865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 12845,
											"end": 12865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12845,
											"end": 12865,
											"name": "tag",
											"source": 15,
											"value": "581"
										},
										{
											"begin": 12845,
											"end": 12865,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12840,
											"end": 12865,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12840,
											"end": 12865,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12879,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "582"
										},
										{
											"begin": 12897,
											"end": 12898,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 12879,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 12879,
											"end": 12899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12879,
											"end": 12899,
											"name": "tag",
											"source": 15,
											"value": "582"
										},
										{
											"begin": 12879,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12874,
											"end": 12899,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12874,
											"end": 12899,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12934,
											"end": 12935,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12931,
											"end": 12932,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 12927,
											"end": 12936,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 12956,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "583"
										},
										{
											"begin": 12974,
											"end": 12985,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 12956,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 12956,
											"end": 12986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 12956,
											"end": 12986,
											"name": "tag",
											"source": 15,
											"value": "583"
										},
										{
											"begin": 12956,
											"end": 12986,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12945,
											"end": 12986,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12945,
											"end": 12986,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13135,
											"end": 13136,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13126,
											"end": 13133,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13122,
											"end": 13137,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 13119,
											"end": 13120,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 13116,
											"end": 13138,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 13096,
											"end": 13097,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13089,
											"end": 13098,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 13069,
											"end": 13152,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 13046,
											"end": 13185,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "584"
										},
										{
											"begin": 13046,
											"end": 13185,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 13165,
											"end": 13183,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "585"
										},
										{
											"begin": 13165,
											"end": 13183,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 13165,
											"end": 13183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13165,
											"end": 13183,
											"name": "tag",
											"source": 15,
											"value": "585"
										},
										{
											"begin": 13165,
											"end": 13183,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13046,
											"end": 13185,
											"name": "tag",
											"source": 15,
											"value": "584"
										},
										{
											"begin": 13046,
											"end": 13185,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 12830,
											"end": 13192,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12782,
											"end": 13192,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 12782,
											"end": 13192,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 12782,
											"end": 13192,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12782,
											"end": 13192,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 12782,
											"end": 13192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13198,
											"end": 13367,
											"name": "tag",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 13198,
											"end": 13367,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13282,
											"end": 13293,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13316,
											"end": 13322,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13311,
											"end": 13314,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13304,
											"end": 13323,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13356,
											"end": 13360,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13351,
											"end": 13354,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13347,
											"end": 13361,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13332,
											"end": 13361,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13332,
											"end": 13361,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13198,
											"end": 13367,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 13198,
											"end": 13367,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13198,
											"end": 13367,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13198,
											"end": 13367,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13198,
											"end": 13367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13373,
											"end": 13551,
											"name": "tag",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 13373,
											"end": 13551,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13513,
											"end": 13543,
											"name": "PUSH",
											"source": 15,
											"value": "496E70757420617272617973206C656E677468206D69736D6174636800000000"
										},
										{
											"begin": 13509,
											"end": 13510,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13501,
											"end": 13507,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13497,
											"end": 13511,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13490,
											"end": 13544,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 13373,
											"end": 13551,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13373,
											"end": 13551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13557,
											"end": 13923,
											"name": "tag",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 13557,
											"end": 13923,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13699,
											"end": 13702,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 13720,
											"end": 13787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "589"
										},
										{
											"begin": 13784,
											"end": 13786,
											"name": "PUSH",
											"source": 15,
											"value": "1C"
										},
										{
											"begin": 13779,
											"end": 13782,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 13720,
											"end": 13787,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 13720,
											"end": 13787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13720,
											"end": 13787,
											"name": "tag",
											"source": 15,
											"value": "589"
										},
										{
											"begin": 13720,
											"end": 13787,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13713,
											"end": 13787,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13713,
											"end": 13787,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13796,
											"end": 13889,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "590"
										},
										{
											"begin": 13885,
											"end": 13888,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13796,
											"end": 13889,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "393"
										},
										{
											"begin": 13796,
											"end": 13889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13796,
											"end": 13889,
											"name": "tag",
											"source": 15,
											"value": "590"
										},
										{
											"begin": 13796,
											"end": 13889,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 13914,
											"end": 13916,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 13909,
											"end": 13912,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 13905,
											"end": 13917,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 13898,
											"end": 13917,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13898,
											"end": 13917,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13557,
											"end": 13923,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13557,
											"end": 13923,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13557,
											"end": 13923,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13557,
											"end": 13923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 13929,
											"end": 14348,
											"name": "tag",
											"source": 15,
											"value": "165"
										},
										{
											"begin": 13929,
											"end": 14348,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14095,
											"end": 14099,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14133,
											"end": 14135,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 14122,
											"end": 14131,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14118,
											"end": 14136,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14110,
											"end": 14136,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14110,
											"end": 14136,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14182,
											"end": 14191,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14176,
											"end": 14180,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14172,
											"end": 14192,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14168,
											"end": 14169,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14157,
											"end": 14166,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14153,
											"end": 14170,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14146,
											"end": 14193,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14210,
											"end": 14341,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "592"
										},
										{
											"begin": 14336,
											"end": 14340,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14210,
											"end": 14341,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "394"
										},
										{
											"begin": 14210,
											"end": 14341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14210,
											"end": 14341,
											"name": "tag",
											"source": 15,
											"value": "592"
										},
										{
											"begin": 14210,
											"end": 14341,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14202,
											"end": 14341,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14202,
											"end": 14341,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13929,
											"end": 14348,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 13929,
											"end": 14348,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 13929,
											"end": 14348,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 13929,
											"end": 14348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14354,
											"end": 14534,
											"name": "tag",
											"source": 15,
											"value": "172"
										},
										{
											"begin": 14354,
											"end": 14534,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14402,
											"end": 14479,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14399,
											"end": 14400,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14392,
											"end": 14480,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14499,
											"end": 14503,
											"name": "PUSH",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 14496,
											"end": 14497,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 14489,
											"end": 14504,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14523,
											"end": 14527,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 14520,
											"end": 14521,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14513,
											"end": 14528,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 14540,
											"end": 14773,
											"name": "tag",
											"source": 15,
											"value": "178"
										},
										{
											"begin": 14540,
											"end": 14773,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14579,
											"end": 14582,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14602,
											"end": 14626,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "595"
										},
										{
											"begin": 14620,
											"end": 14625,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14602,
											"end": 14626,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 14602,
											"end": 14626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14602,
											"end": 14626,
											"name": "tag",
											"source": 15,
											"value": "595"
										},
										{
											"begin": 14602,
											"end": 14626,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14593,
											"end": 14626,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14593,
											"end": 14626,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14648,
											"end": 14714,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14641,
											"end": 14646,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14638,
											"end": 14715,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 14635,
											"end": 14738,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "596"
										},
										{
											"begin": 14635,
											"end": 14738,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 14718,
											"end": 14736,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "597"
										},
										{
											"begin": 14718,
											"end": 14736,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 14718,
											"end": 14736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14718,
											"end": 14736,
											"name": "tag",
											"source": 15,
											"value": "597"
										},
										{
											"begin": 14718,
											"end": 14736,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14635,
											"end": 14738,
											"name": "tag",
											"source": 15,
											"value": "596"
										},
										{
											"begin": 14635,
											"end": 14738,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14765,
											"end": 14766,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 14758,
											"end": 14763,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 14754,
											"end": 14767,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14747,
											"end": 14767,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14747,
											"end": 14767,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14540,
											"end": 14773,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14540,
											"end": 14773,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14540,
											"end": 14773,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14540,
											"end": 14773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14779,
											"end": 14878,
											"name": "tag",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 14779,
											"end": 14878,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14831,
											"end": 14837,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14865,
											"end": 14870,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14859,
											"end": 14871,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 14849,
											"end": 14871,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14849,
											"end": 14871,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14779,
											"end": 14878,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 14779,
											"end": 14878,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14779,
											"end": 14878,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14779,
											"end": 14878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14884,
											"end": 15130,
											"name": "tag",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 14884,
											"end": 15130,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14965,
											"end": 14966,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 14975,
											"end": 15088,
											"name": "tag",
											"source": 15,
											"value": "600"
										},
										{
											"begin": 14975,
											"end": 15088,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 14989,
											"end": 14995,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 14986,
											"end": 14987,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 14983,
											"end": 14996,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 14975,
											"end": 15088,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 14975,
											"end": 15088,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "602"
										},
										{
											"begin": 14975,
											"end": 15088,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 15074,
											"end": 15075,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 15069,
											"end": 15072,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15065,
											"end": 15076,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15059,
											"end": 15077,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 15055,
											"end": 15056,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15050,
											"end": 15053,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15046,
											"end": 15057,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15039,
											"end": 15078,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15011,
											"end": 15013,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15008,
											"end": 15009,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15004,
											"end": 15014,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 14999,
											"end": 15014,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 14999,
											"end": 15014,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14975,
											"end": 15088,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "600"
										},
										{
											"begin": 14975,
											"end": 15088,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 14975,
											"end": 15088,
											"name": "tag",
											"source": 15,
											"value": "602"
										},
										{
											"begin": 14975,
											"end": 15088,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15122,
											"end": 15123,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15113,
											"end": 15119,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15108,
											"end": 15111,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15104,
											"end": 15120,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15097,
											"end": 15124,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 14946,
											"end": 15130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14884,
											"end": 15130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14884,
											"end": 15130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14884,
											"end": 15130,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 14884,
											"end": 15130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15136,
											"end": 15513,
											"name": "tag",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 15136,
											"end": 15513,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15224,
											"end": 15227,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15252,
											"end": 15291,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 15285,
											"end": 15290,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15252,
											"end": 15291,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "395"
										},
										{
											"begin": 15252,
											"end": 15291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15252,
											"end": 15291,
											"name": "tag",
											"source": 15,
											"value": "604"
										},
										{
											"begin": 15252,
											"end": 15291,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15307,
											"end": 15378,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "605"
										},
										{
											"begin": 15371,
											"end": 15377,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15366,
											"end": 15369,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15307,
											"end": 15378,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 15307,
											"end": 15378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15307,
											"end": 15378,
											"name": "tag",
											"source": 15,
											"value": "605"
										},
										{
											"begin": 15307,
											"end": 15378,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15300,
											"end": 15378,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 15300,
											"end": 15378,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15387,
											"end": 15452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 15445,
											"end": 15451,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15440,
											"end": 15443,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 15433,
											"end": 15437,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15426,
											"end": 15431,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 15422,
											"end": 15438,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15387,
											"end": 15452,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 15387,
											"end": 15452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15387,
											"end": 15452,
											"name": "tag",
											"source": 15,
											"value": "606"
										},
										{
											"begin": 15387,
											"end": 15452,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15477,
											"end": 15506,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "607"
										},
										{
											"begin": 15499,
											"end": 15505,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15477,
											"end": 15506,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "365"
										},
										{
											"begin": 15477,
											"end": 15506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15477,
											"end": 15506,
											"name": "tag",
											"source": 15,
											"value": "607"
										},
										{
											"begin": 15477,
											"end": 15506,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15472,
											"end": 15475,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 15468,
											"end": 15507,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15461,
											"end": 15507,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15461,
											"end": 15507,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15228,
											"end": 15513,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15136,
											"end": 15513,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 15136,
											"end": 15513,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 15136,
											"end": 15513,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15136,
											"end": 15513,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15136,
											"end": 15513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15519,
											"end": 16254,
											"name": "tag",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 15519,
											"end": 16254,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15736,
											"end": 15740,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15774,
											"end": 15777,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 15763,
											"end": 15772,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 15759,
											"end": 15778,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15751,
											"end": 15778,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15751,
											"end": 15778,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15788,
											"end": 15859,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 15856,
											"end": 15857,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 15845,
											"end": 15854,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15841,
											"end": 15858,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15832,
											"end": 15838,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 15788,
											"end": 15859,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 15788,
											"end": 15859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15788,
											"end": 15859,
											"name": "tag",
											"source": 15,
											"value": "609"
										},
										{
											"begin": 15788,
											"end": 15859,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15906,
											"end": 15915,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15900,
											"end": 15904,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15896,
											"end": 15916,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 15891,
											"end": 15893,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 15880,
											"end": 15889,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 15876,
											"end": 15894,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 15869,
											"end": 15917,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 15934,
											"end": 16012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 16007,
											"end": 16011,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 15998,
											"end": 16004,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 15934,
											"end": 16012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 15934,
											"end": 16012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 15934,
											"end": 16012,
											"name": "tag",
											"source": 15,
											"value": "610"
										},
										{
											"begin": 15934,
											"end": 16012,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15926,
											"end": 16012,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 15926,
											"end": 16012,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16059,
											"end": 16068,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16053,
											"end": 16057,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16049,
											"end": 16069,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 16044,
											"end": 16046,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 16033,
											"end": 16042,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16029,
											"end": 16047,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16022,
											"end": 16070,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 16087,
											"end": 16165,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "611"
										},
										{
											"begin": 16160,
											"end": 16164,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16151,
											"end": 16157,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16087,
											"end": 16165,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 16087,
											"end": 16165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16087,
											"end": 16165,
											"name": "tag",
											"source": 15,
											"value": "611"
										},
										{
											"begin": 16087,
											"end": 16165,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16079,
											"end": 16165,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16079,
											"end": 16165,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16175,
											"end": 16247,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "612"
										},
										{
											"begin": 16243,
											"end": 16245,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 16232,
											"end": 16241,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16228,
											"end": 16246,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16219,
											"end": 16225,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16175,
											"end": 16247,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 16175,
											"end": 16247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16175,
											"end": 16247,
											"name": "tag",
											"source": 15,
											"value": "612"
										},
										{
											"begin": 16175,
											"end": 16247,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 15519,
											"end": 16254,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 15519,
											"end": 16254,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 15519,
											"end": 16254,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15519,
											"end": 16254,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15519,
											"end": 16254,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15519,
											"end": 16254,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15519,
											"end": 16254,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 15519,
											"end": 16254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16260,
											"end": 16378,
											"name": "tag",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 16260,
											"end": 16378,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16331,
											"end": 16353,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "614"
										},
										{
											"begin": 16347,
											"end": 16352,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16331,
											"end": 16353,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "388"
										},
										{
											"begin": 16331,
											"end": 16353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16331,
											"end": 16353,
											"name": "tag",
											"source": 15,
											"value": "614"
										},
										{
											"begin": 16331,
											"end": 16353,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16324,
											"end": 16329,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16321,
											"end": 16354,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 16311,
											"end": 16372,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "615"
										},
										{
											"begin": 16311,
											"end": 16372,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16368,
											"end": 16369,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16365,
											"end": 16366,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 16358,
											"end": 16370,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 16311,
											"end": 16372,
											"name": "tag",
											"source": 15,
											"value": "615"
										},
										{
											"begin": 16311,
											"end": 16372,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16260,
											"end": 16378,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16260,
											"end": 16378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16384,
											"end": 16523,
											"name": "tag",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 16384,
											"end": 16523,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16439,
											"end": 16444,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16470,
											"end": 16476,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16464,
											"end": 16477,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 16455,
											"end": 16477,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 16455,
											"end": 16477,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16486,
											"end": 16517,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "617"
										},
										{
											"begin": 16511,
											"end": 16516,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 16486,
											"end": 16517,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "398"
										},
										{
											"begin": 16486,
											"end": 16517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16486,
											"end": 16517,
											"name": "tag",
											"source": 15,
											"value": "617"
										},
										{
											"begin": 16486,
											"end": 16517,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16384,
											"end": 16523,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16384,
											"end": 16523,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16384,
											"end": 16523,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16384,
											"end": 16523,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16384,
											"end": 16523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16529,
											"end": 16876,
											"name": "tag",
											"source": 15,
											"value": "202"
										},
										{
											"begin": 16529,
											"end": 16876,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16597,
											"end": 16603,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16646,
											"end": 16648,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 16634,
											"end": 16643,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16625,
											"end": 16632,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16621,
											"end": 16644,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 16617,
											"end": 16649,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 16614,
											"end": 16733,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 16614,
											"end": 16733,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "619"
										},
										{
											"begin": 16614,
											"end": 16733,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 16652,
											"end": 16731,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "620"
										},
										{
											"begin": 16652,
											"end": 16731,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 16652,
											"end": 16731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16652,
											"end": 16731,
											"name": "tag",
											"source": 15,
											"value": "620"
										},
										{
											"begin": 16652,
											"end": 16731,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16614,
											"end": 16733,
											"name": "tag",
											"source": 15,
											"value": "619"
										},
										{
											"begin": 16614,
											"end": 16733,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16772,
											"end": 16773,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16797,
											"end": 16859,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "621"
										},
										{
											"begin": 16851,
											"end": 16858,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 16842,
											"end": 16848,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16831,
											"end": 16840,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 16827,
											"end": 16849,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 16797,
											"end": 16859,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "399"
										},
										{
											"begin": 16797,
											"end": 16859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16797,
											"end": 16859,
											"name": "tag",
											"source": 15,
											"value": "621"
										},
										{
											"begin": 16797,
											"end": 16859,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16787,
											"end": 16859,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16787,
											"end": 16859,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16743,
											"end": 16869,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16529,
											"end": 16876,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16529,
											"end": 16876,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16529,
											"end": 16876,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16529,
											"end": 16876,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16529,
											"end": 16876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16882,
											"end": 17073,
											"name": "tag",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 16882,
											"end": 17073,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16922,
											"end": 16925,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 16941,
											"end": 16961,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "623"
										},
										{
											"begin": 16959,
											"end": 16960,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 16941,
											"end": 16961,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 16941,
											"end": 16961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16941,
											"end": 16961,
											"name": "tag",
											"source": 15,
											"value": "623"
										},
										{
											"begin": 16941,
											"end": 16961,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16936,
											"end": 16961,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16936,
											"end": 16961,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16975,
											"end": 16995,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "624"
										},
										{
											"begin": 16993,
											"end": 16994,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 16975,
											"end": 16995,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 16975,
											"end": 16995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 16975,
											"end": 16995,
											"name": "tag",
											"source": 15,
											"value": "624"
										},
										{
											"begin": 16975,
											"end": 16995,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16970,
											"end": 16995,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16970,
											"end": 16995,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17018,
											"end": 17019,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17015,
											"end": 17016,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17011,
											"end": 17020,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17004,
											"end": 17020,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17004,
											"end": 17020,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17039,
											"end": 17042,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 17036,
											"end": 17037,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17033,
											"end": 17043,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 17030,
											"end": 17066,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 17030,
											"end": 17066,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "625"
										},
										{
											"begin": 17030,
											"end": 17066,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 17046,
											"end": 17064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "626"
										},
										{
											"begin": 17046,
											"end": 17064,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 17046,
											"end": 17064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17046,
											"end": 17064,
											"name": "tag",
											"source": 15,
											"value": "626"
										},
										{
											"begin": 17046,
											"end": 17064,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17030,
											"end": 17066,
											"name": "tag",
											"source": 15,
											"value": "625"
										},
										{
											"begin": 17030,
											"end": 17066,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 16882,
											"end": 17073,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 16882,
											"end": 17073,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 16882,
											"end": 17073,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16882,
											"end": 17073,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 16882,
											"end": 17073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17079,
											"end": 17411,
											"name": "tag",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 17079,
											"end": 17411,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17200,
											"end": 17204,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17238,
											"end": 17240,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 17227,
											"end": 17236,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17215,
											"end": 17241,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17215,
											"end": 17241,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17251,
											"end": 17322,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "628"
										},
										{
											"begin": 17319,
											"end": 17320,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17308,
											"end": 17317,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17304,
											"end": 17321,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17295,
											"end": 17301,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 17251,
											"end": 17322,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 17251,
											"end": 17322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17251,
											"end": 17322,
											"name": "tag",
											"source": 15,
											"value": "628"
										},
										{
											"begin": 17251,
											"end": 17322,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17332,
											"end": 17404,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "629"
										},
										{
											"begin": 17400,
											"end": 17402,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17389,
											"end": 17398,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 17385,
											"end": 17403,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17376,
											"end": 17382,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 17332,
											"end": 17404,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 17332,
											"end": 17404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17332,
											"end": 17404,
											"name": "tag",
											"source": 15,
											"value": "629"
										},
										{
											"begin": 17332,
											"end": 17404,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17079,
											"end": 17411,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 17079,
											"end": 17411,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17079,
											"end": 17411,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17079,
											"end": 17411,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17079,
											"end": 17411,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17079,
											"end": 17411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17417,
											"end": 17535,
											"name": "tag",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 17417,
											"end": 17535,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17488,
											"end": 17494,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17522,
											"end": 17527,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17516,
											"end": 17528,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 17506,
											"end": 17528,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17506,
											"end": 17528,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17417,
											"end": 17535,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17417,
											"end": 17535,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17417,
											"end": 17535,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17417,
											"end": 17535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17541,
											"end": 17735,
											"name": "tag",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 17541,
											"end": 17735,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17650,
											"end": 17661,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17684,
											"end": 17690,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17679,
											"end": 17682,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17672,
											"end": 17691,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17724,
											"end": 17728,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17719,
											"end": 17722,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 17715,
											"end": 17729,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 17700,
											"end": 17729,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17700,
											"end": 17729,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17541,
											"end": 17735,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 17541,
											"end": 17735,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17541,
											"end": 17735,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17541,
											"end": 17735,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17541,
											"end": 17735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17741,
											"end": 17904,
											"name": "tag",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 17741,
											"end": 17904,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17812,
											"end": 17816,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17835,
											"end": 17838,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17827,
											"end": 17838,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17827,
											"end": 17838,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17858,
											"end": 17861,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 17855,
											"end": 17856,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17848,
											"end": 17862,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 17892,
											"end": 17896,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 17889,
											"end": 17890,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17879,
											"end": 17897,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 17871,
											"end": 17897,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17871,
											"end": 17897,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17741,
											"end": 17904,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 17741,
											"end": 17904,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 17741,
											"end": 17904,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 17741,
											"end": 17904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 17910,
											"end": 18090,
											"name": "tag",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 17910,
											"end": 18090,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 17958,
											"end": 18035,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17955,
											"end": 17956,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 17948,
											"end": 18036,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18055,
											"end": 18059,
											"name": "PUSH",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 18052,
											"end": 18053,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 18045,
											"end": 18060,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18079,
											"end": 18083,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 18076,
											"end": 18077,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18069,
											"end": 18084,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 18096,
											"end": 18416,
											"name": "tag",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 18096,
											"end": 18416,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18140,
											"end": 18146,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18177,
											"end": 18178,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 18171,
											"end": 18175,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18167,
											"end": 18179,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 18157,
											"end": 18179,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18157,
											"end": 18179,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18224,
											"end": 18225,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 18218,
											"end": 18222,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18214,
											"end": 18226,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 18245,
											"end": 18263,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 18235,
											"end": 18316,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "635"
										},
										{
											"begin": 18235,
											"end": 18316,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18301,
											"end": 18305,
											"name": "PUSH",
											"source": 15,
											"value": "7F"
										},
										{
											"begin": 18293,
											"end": 18299,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18289,
											"end": 18306,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 18279,
											"end": 18306,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18279,
											"end": 18306,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18235,
											"end": 18316,
											"name": "tag",
											"source": 15,
											"value": "635"
										},
										{
											"begin": 18235,
											"end": 18316,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18363,
											"end": 18365,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18355,
											"end": 18361,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18352,
											"end": 18366,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 18332,
											"end": 18350,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18329,
											"end": 18367,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 18326,
											"end": 18410,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "636"
										},
										{
											"begin": 18326,
											"end": 18410,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 18382,
											"end": 18400,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "637"
										},
										{
											"begin": 18382,
											"end": 18400,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "403"
										},
										{
											"begin": 18382,
											"end": 18400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18382,
											"end": 18400,
											"name": "tag",
											"source": 15,
											"value": "637"
										},
										{
											"begin": 18382,
											"end": 18400,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18326,
											"end": 18410,
											"name": "tag",
											"source": 15,
											"value": "636"
										},
										{
											"begin": 18326,
											"end": 18410,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18147,
											"end": 18416,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18096,
											"end": 18416,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18096,
											"end": 18416,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18096,
											"end": 18416,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18096,
											"end": 18416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18422,
											"end": 18581,
											"name": "tag",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 18422,
											"end": 18581,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18496,
											"end": 18507,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18530,
											"end": 18536,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18525,
											"end": 18528,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18518,
											"end": 18537,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18570,
											"end": 18574,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18565,
											"end": 18568,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 18561,
											"end": 18575,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 18546,
											"end": 18575,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18546,
											"end": 18575,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18422,
											"end": 18581,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 18422,
											"end": 18581,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18422,
											"end": 18581,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18422,
											"end": 18581,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18422,
											"end": 18581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18587,
											"end": 18728,
											"name": "tag",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 18587,
											"end": 18728,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18636,
											"end": 18640,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18659,
											"end": 18662,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18651,
											"end": 18662,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18651,
											"end": 18662,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18682,
											"end": 18685,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18679,
											"end": 18680,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18672,
											"end": 18686,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 18716,
											"end": 18720,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 18713,
											"end": 18714,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18703,
											"end": 18721,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 18695,
											"end": 18721,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18695,
											"end": 18721,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18587,
											"end": 18728,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18587,
											"end": 18728,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 18587,
											"end": 18728,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18587,
											"end": 18728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18758,
											"end": 19569,
											"name": "tag",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 18758,
											"end": 19569,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18833,
											"end": 18836,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 18870,
											"end": 18875,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18864,
											"end": 18876,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 18899,
											"end": 18935,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "641"
										},
										{
											"begin": 18925,
											"end": 18934,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 18899,
											"end": 18935,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "404"
										},
										{
											"begin": 18899,
											"end": 18935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18899,
											"end": 18935,
											"name": "tag",
											"source": 15,
											"value": "641"
										},
										{
											"begin": 18899,
											"end": 18935,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18951,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "642"
										},
										{
											"begin": 19005,
											"end": 19011,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19000,
											"end": 19003,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 18951,
											"end": 19012,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "405"
										},
										{
											"begin": 18951,
											"end": 19012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 18951,
											"end": 19012,
											"name": "tag",
											"source": 15,
											"value": "642"
										},
										{
											"begin": 18951,
											"end": 19012,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 18944,
											"end": 19012,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 18944,
											"end": 19012,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19043,
											"end": 19044,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 19032,
											"end": 19041,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19028,
											"end": 19045,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 19059,
											"end": 19060,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19054,
											"end": 19218,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19054,
											"end": 19218,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 19054,
											"end": 19218,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "644"
										},
										{
											"begin": 19054,
											"end": 19218,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 19232,
											"end": 19233,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 19227,
											"end": 19563,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19227,
											"end": 19563,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 19227,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "645"
										},
										{
											"begin": 19227,
											"end": 19563,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 19021,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "643"
										},
										{
											"begin": 19021,
											"end": 19563,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19054,
											"end": 19218,
											"name": "tag",
											"source": 15,
											"value": "644"
										},
										{
											"begin": 19054,
											"end": 19218,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19138,
											"end": 19142,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 19134,
											"end": 19143,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 19123,
											"end": 19132,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19119,
											"end": 19144,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 19114,
											"end": 19117,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 19107,
											"end": 19145,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19198,
											"end": 19204,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19191,
											"end": 19205,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 19184,
											"end": 19206,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 19178,
											"end": 19182,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19174,
											"end": 19207,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 19169,
											"end": 19172,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 19165,
											"end": 19208,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19158,
											"end": 19208,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 19158,
											"end": 19208,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19054,
											"end": 19218,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "643"
										},
										{
											"begin": 19054,
											"end": 19218,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19227,
											"end": 19563,
											"name": "tag",
											"source": 15,
											"value": "645"
										},
										{
											"begin": 19227,
											"end": 19563,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19294,
											"end": 19332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "646"
										},
										{
											"begin": 19326,
											"end": 19331,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 19294,
											"end": 19332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "406"
										},
										{
											"begin": 19294,
											"end": 19332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19294,
											"end": 19332,
											"name": "tag",
											"source": 15,
											"value": "646"
										},
										{
											"begin": 19294,
											"end": 19332,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19354,
											"end": 19355,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19368,
											"end": 19522,
											"name": "tag",
											"source": 15,
											"value": "647"
										},
										{
											"begin": 19368,
											"end": 19522,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19382,
											"end": 19388,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19379,
											"end": 19380,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19376,
											"end": 19389,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 19368,
											"end": 19522,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 19368,
											"end": 19522,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "649"
										},
										{
											"begin": 19368,
											"end": 19522,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 19456,
											"end": 19463,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19450,
											"end": 19464,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 19446,
											"end": 19447,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19441,
											"end": 19444,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 19437,
											"end": 19448,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19430,
											"end": 19465,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 19506,
											"end": 19507,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 19497,
											"end": 19504,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19493,
											"end": 19508,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19482,
											"end": 19508,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19482,
											"end": 19508,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19404,
											"end": 19408,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 19401,
											"end": 19402,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 19397,
											"end": 19409,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19392,
											"end": 19409,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19392,
											"end": 19409,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19368,
											"end": 19522,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "647"
										},
										{
											"begin": 19368,
											"end": 19522,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19368,
											"end": 19522,
											"name": "tag",
											"source": 15,
											"value": "649"
										},
										{
											"begin": 19368,
											"end": 19522,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19551,
											"end": 19552,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 19546,
											"end": 19549,
											"name": "DUP9",
											"source": 15
										},
										{
											"begin": 19542,
											"end": 19553,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19535,
											"end": 19553,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 19535,
											"end": 19553,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19234,
											"end": 19563,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19234,
											"end": 19563,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19021,
											"end": 19563,
											"name": "tag",
											"source": 15,
											"value": "643"
										},
										{
											"begin": 19021,
											"end": 19563,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19021,
											"end": 19563,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18837,
											"end": 19569,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18837,
											"end": 19569,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18758,
											"end": 19569,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 18758,
											"end": 19569,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 18758,
											"end": 19569,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18758,
											"end": 19569,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 18758,
											"end": 19569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19575,
											"end": 19765,
											"name": "tag",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 19575,
											"end": 19765,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19661,
											"end": 19671,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19696,
											"end": 19759,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "651"
										},
										{
											"begin": 19755,
											"end": 19758,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19747,
											"end": 19753,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 19696,
											"end": 19759,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "407"
										},
										{
											"begin": 19696,
											"end": 19759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19696,
											"end": 19759,
											"name": "tag",
											"source": 15,
											"value": "651"
										},
										{
											"begin": 19696,
											"end": 19759,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19682,
											"end": 19759,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19682,
											"end": 19759,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19575,
											"end": 19765,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19575,
											"end": 19765,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19575,
											"end": 19765,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19575,
											"end": 19765,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19575,
											"end": 19765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19771,
											"end": 19888,
											"name": "tag",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 19771,
											"end": 19888,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 19845,
											"end": 19849,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 19877,
											"end": 19881,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 19872,
											"end": 19875,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 19868,
											"end": 19882,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 19860,
											"end": 19882,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19860,
											"end": 19882,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19771,
											"end": 19888,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19771,
											"end": 19888,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 19771,
											"end": 19888,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19771,
											"end": 19888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 19922,
											"end": 20879,
											"name": "tag",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 19922,
											"end": 20879,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20055,
											"end": 20058,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20084,
											"end": 20142,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "654"
										},
										{
											"begin": 20136,
											"end": 20141,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20084,
											"end": 20142,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "400"
										},
										{
											"begin": 20084,
											"end": 20142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20084,
											"end": 20142,
											"name": "tag",
											"source": 15,
											"value": "654"
										},
										{
											"begin": 20084,
											"end": 20142,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20158,
											"end": 20254,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "655"
										},
										{
											"begin": 20247,
											"end": 20253,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20242,
											"end": 20245,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 20158,
											"end": 20254,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "401"
										},
										{
											"begin": 20158,
											"end": 20254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20158,
											"end": 20254,
											"name": "tag",
											"source": 15,
											"value": "655"
										},
										{
											"begin": 20158,
											"end": 20254,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20151,
											"end": 20254,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 20151,
											"end": 20254,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20280,
											"end": 20283,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20325,
											"end": 20329,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20317,
											"end": 20323,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20313,
											"end": 20330,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 20308,
											"end": 20311,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 20304,
											"end": 20331,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20355,
											"end": 20415,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "656"
										},
										{
											"begin": 20409,
											"end": 20414,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 20355,
											"end": 20415,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "402"
										},
										{
											"begin": 20355,
											"end": 20415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20355,
											"end": 20415,
											"name": "tag",
											"source": 15,
											"value": "656"
										},
										{
											"begin": 20355,
											"end": 20415,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20438,
											"end": 20445,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 20469,
											"end": 20470,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 20454,
											"end": 20834,
											"name": "tag",
											"source": 15,
											"value": "657"
										},
										{
											"begin": 20454,
											"end": 20834,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20479,
											"end": 20485,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 20476,
											"end": 20477,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20473,
											"end": 20486,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 20454,
											"end": 20834,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 20454,
											"end": 20834,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "659"
										},
										{
											"begin": 20454,
											"end": 20834,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 20550,
											"end": 20559,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 20544,
											"end": 20548,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 20540,
											"end": 20560,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 20535,
											"end": 20538,
											"name": "DUP10",
											"source": 15
										},
										{
											"begin": 20528,
											"end": 20561,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 20595,
											"end": 20601,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20622,
											"end": 20703,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "660"
										},
										{
											"begin": 20698,
											"end": 20702,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 20683,
											"end": 20696,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20622,
											"end": 20703,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "408"
										},
										{
											"begin": 20622,
											"end": 20703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20622,
											"end": 20703,
											"name": "tag",
											"source": 15,
											"value": "660"
										},
										{
											"begin": 20622,
											"end": 20703,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20614,
											"end": 20703,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 20614,
											"end": 20703,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20726,
											"end": 20790,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "661"
										},
										{
											"begin": 20783,
											"end": 20789,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 20726,
											"end": 20790,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "409"
										},
										{
											"begin": 20726,
											"end": 20790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20726,
											"end": 20790,
											"name": "tag",
											"source": 15,
											"value": "661"
										},
										{
											"begin": 20726,
											"end": 20790,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20716,
											"end": 20790,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 20716,
											"end": 20790,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20819,
											"end": 20823,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 20814,
											"end": 20817,
											"name": "DUP11",
											"source": 15
										},
										{
											"begin": 20810,
											"end": 20824,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20803,
											"end": 20824,
											"name": "SWAP10",
											"source": 15
										},
										{
											"begin": 20803,
											"end": 20824,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20514,
											"end": 20834,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20501,
											"end": 20502,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 20498,
											"end": 20499,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 20494,
											"end": 20503,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 20489,
											"end": 20503,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 20489,
											"end": 20503,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20454,
											"end": 20834,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "657"
										},
										{
											"begin": 20454,
											"end": 20834,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20454,
											"end": 20834,
											"name": "tag",
											"source": 15,
											"value": "659"
										},
										{
											"begin": 20454,
											"end": 20834,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 20458,
											"end": 20472,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20850,
											"end": 20854,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 20843,
											"end": 20854,
											"name": "SWAP8",
											"source": 15
										},
										{
											"begin": 20843,
											"end": 20854,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20870,
											"end": 20873,
											"name": "DUP8",
											"source": 15
										},
										{
											"begin": 20863,
											"end": 20873,
											"name": "SWAP6",
											"source": 15
										},
										{
											"begin": 20863,
											"end": 20873,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20060,
											"end": 20879,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20060,
											"end": 20879,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20060,
											"end": 20879,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20060,
											"end": 20879,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20060,
											"end": 20879,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19922,
											"end": 20879,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 19922,
											"end": 20879,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 19922,
											"end": 20879,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19922,
											"end": 20879,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 19922,
											"end": 20879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 20885,
											"end": 21506,
											"name": "tag",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 20885,
											"end": 21506,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21098,
											"end": 21102,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21136,
											"end": 21138,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 21125,
											"end": 21134,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21121,
											"end": 21139,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21113,
											"end": 21139,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21113,
											"end": 21139,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21149,
											"end": 21220,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "663"
										},
										{
											"begin": 21217,
											"end": 21218,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21206,
											"end": 21215,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 21202,
											"end": 21219,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21193,
											"end": 21199,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 21149,
											"end": 21220,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 21149,
											"end": 21220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21149,
											"end": 21220,
											"name": "tag",
											"source": 15,
											"value": "663"
										},
										{
											"begin": 21149,
											"end": 21220,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21230,
											"end": 21302,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "664"
										},
										{
											"begin": 21298,
											"end": 21300,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21287,
											"end": 21296,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 21283,
											"end": 21301,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21274,
											"end": 21280,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 21230,
											"end": 21302,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 21230,
											"end": 21302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21230,
											"end": 21302,
											"name": "tag",
											"source": 15,
											"value": "664"
										},
										{
											"begin": 21230,
											"end": 21302,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21349,
											"end": 21358,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21343,
											"end": 21347,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21339,
											"end": 21359,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 21334,
											"end": 21336,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 21323,
											"end": 21332,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 21319,
											"end": 21337,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 21312,
											"end": 21360,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 21377,
											"end": 21499,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "665"
										},
										{
											"begin": 21494,
											"end": 21498,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21485,
											"end": 21491,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 21377,
											"end": 21499,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "410"
										},
										{
											"begin": 21377,
											"end": 21499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21377,
											"end": 21499,
											"name": "tag",
											"source": 15,
											"value": "665"
										},
										{
											"begin": 21377,
											"end": 21499,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21369,
											"end": 21499,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21369,
											"end": 21499,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20885,
											"end": 21506,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 20885,
											"end": 21506,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 20885,
											"end": 21506,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20885,
											"end": 21506,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20885,
											"end": 21506,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20885,
											"end": 21506,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 20885,
											"end": 21506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21512,
											"end": 21628,
											"name": "tag",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 21512,
											"end": 21628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21582,
											"end": 21603,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "667"
										},
										{
											"begin": 21597,
											"end": 21602,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21582,
											"end": 21603,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "362"
										},
										{
											"begin": 21582,
											"end": 21603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21582,
											"end": 21603,
											"name": "tag",
											"source": 15,
											"value": "667"
										},
										{
											"begin": 21582,
											"end": 21603,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21575,
											"end": 21580,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21572,
											"end": 21604,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 21562,
											"end": 21622,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "668"
										},
										{
											"begin": 21562,
											"end": 21622,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 21618,
											"end": 21619,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21615,
											"end": 21616,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 21608,
											"end": 21620,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 21562,
											"end": 21622,
											"name": "tag",
											"source": 15,
											"value": "668"
										},
										{
											"begin": 21562,
											"end": 21622,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21512,
											"end": 21628,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21512,
											"end": 21628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21634,
											"end": 21771,
											"name": "tag",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 21634,
											"end": 21771,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21688,
											"end": 21693,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21719,
											"end": 21725,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21713,
											"end": 21726,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 21704,
											"end": 21726,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 21704,
											"end": 21726,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21735,
											"end": 21765,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "670"
										},
										{
											"begin": 21759,
											"end": 21764,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 21735,
											"end": 21765,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "411"
										},
										{
											"begin": 21735,
											"end": 21765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21735,
											"end": 21765,
											"name": "tag",
											"source": 15,
											"value": "670"
										},
										{
											"begin": 21735,
											"end": 21765,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21634,
											"end": 21771,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21634,
											"end": 21771,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21634,
											"end": 21771,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21634,
											"end": 21771,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21634,
											"end": 21771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21777,
											"end": 22122,
											"name": "tag",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 21777,
											"end": 22122,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21844,
											"end": 21850,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 21893,
											"end": 21895,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 21881,
											"end": 21890,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 21872,
											"end": 21879,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 21868,
											"end": 21891,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 21864,
											"end": 21896,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 21861,
											"end": 21980,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 21861,
											"end": 21980,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "672"
										},
										{
											"begin": 21861,
											"end": 21980,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 21899,
											"end": 21978,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "673"
										},
										{
											"begin": 21899,
											"end": 21978,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 21899,
											"end": 21978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 21899,
											"end": 21978,
											"name": "tag",
											"source": 15,
											"value": "673"
										},
										{
											"begin": 21899,
											"end": 21978,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 21861,
											"end": 21980,
											"name": "tag",
											"source": 15,
											"value": "672"
										},
										{
											"begin": 21861,
											"end": 21980,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22019,
											"end": 22020,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22044,
											"end": 22105,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "674"
										},
										{
											"begin": 22097,
											"end": 22104,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 22088,
											"end": 22094,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22077,
											"end": 22086,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 22073,
											"end": 22095,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22044,
											"end": 22105,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "412"
										},
										{
											"begin": 22044,
											"end": 22105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22044,
											"end": 22105,
											"name": "tag",
											"source": 15,
											"value": "674"
										},
										{
											"begin": 22044,
											"end": 22105,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22034,
											"end": 22105,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22034,
											"end": 22105,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21990,
											"end": 22115,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21777,
											"end": 22122,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 21777,
											"end": 22122,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 21777,
											"end": 22122,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21777,
											"end": 22122,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 21777,
											"end": 22122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22128,
											"end": 22348,
											"name": "tag",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 22128,
											"end": 22348,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22268,
											"end": 22302,
											"name": "PUSH",
											"source": 15,
											"value": "4661696C656420746F20617070726F76652064656C6567617465206D6574686F"
										},
										{
											"begin": 22264,
											"end": 22265,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22256,
											"end": 22262,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22252,
											"end": 22266,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22245,
											"end": 22303,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22337,
											"end": 22340,
											"name": "PUSH",
											"source": 15,
											"value": "6400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22332,
											"end": 22334,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22324,
											"end": 22330,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22320,
											"end": 22335,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22313,
											"end": 22341,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 22128,
											"end": 22348,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22128,
											"end": 22348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22354,
											"end": 22720,
											"name": "tag",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 22354,
											"end": 22720,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22496,
											"end": 22499,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22517,
											"end": 22584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "677"
										},
										{
											"begin": 22581,
											"end": 22583,
											"name": "PUSH",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 22576,
											"end": 22579,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22517,
											"end": 22584,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 22517,
											"end": 22584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22517,
											"end": 22584,
											"name": "tag",
											"source": 15,
											"value": "677"
										},
										{
											"begin": 22517,
											"end": 22584,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22510,
											"end": 22584,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22510,
											"end": 22584,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22593,
											"end": 22686,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "678"
										},
										{
											"begin": 22682,
											"end": 22685,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22593,
											"end": 22686,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "413"
										},
										{
											"begin": 22593,
											"end": 22686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22593,
											"end": 22686,
											"name": "tag",
											"source": 15,
											"value": "678"
										},
										{
											"begin": 22593,
											"end": 22686,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22711,
											"end": 22713,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 22706,
											"end": 22709,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22702,
											"end": 22714,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22695,
											"end": 22714,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22695,
											"end": 22714,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22354,
											"end": 22720,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22354,
											"end": 22720,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22354,
											"end": 22720,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22354,
											"end": 22720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 22726,
											"end": 23145,
											"name": "tag",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 22726,
											"end": 23145,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22892,
											"end": 22896,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22930,
											"end": 22932,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 22919,
											"end": 22928,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 22915,
											"end": 22933,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22907,
											"end": 22933,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22907,
											"end": 22933,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22979,
											"end": 22988,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22973,
											"end": 22977,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 22969,
											"end": 22989,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 22965,
											"end": 22966,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 22954,
											"end": 22963,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 22950,
											"end": 22967,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 22943,
											"end": 22990,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23007,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "680"
										},
										{
											"begin": 23133,
											"end": 23137,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23007,
											"end": 23138,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "414"
										},
										{
											"begin": 23007,
											"end": 23138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23007,
											"end": 23138,
											"name": "tag",
											"source": 15,
											"value": "680"
										},
										{
											"begin": 23007,
											"end": 23138,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 22999,
											"end": 23138,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22999,
											"end": 23138,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22726,
											"end": 23145,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 22726,
											"end": 23145,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 22726,
											"end": 23145,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 22726,
											"end": 23145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23151,
											"end": 23331,
											"name": "tag",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 23151,
											"end": 23331,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23199,
											"end": 23276,
											"name": "PUSH",
											"source": 15,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23196,
											"end": 23197,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23189,
											"end": 23277,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23296,
											"end": 23300,
											"name": "PUSH",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 23293,
											"end": 23294,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 23286,
											"end": 23301,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 23320,
											"end": 23324,
											"name": "PUSH",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 23317,
											"end": 23318,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23310,
											"end": 23325,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 23337,
											"end": 23522,
											"name": "tag",
											"source": 15,
											"value": "238"
										},
										{
											"begin": 23337,
											"end": 23522,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23377,
											"end": 23378,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23394,
											"end": 23414,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "683"
										},
										{
											"begin": 23412,
											"end": 23413,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23394,
											"end": 23414,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 23394,
											"end": 23414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23394,
											"end": 23414,
											"name": "tag",
											"source": 15,
											"value": "683"
										},
										{
											"begin": 23394,
											"end": 23414,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23389,
											"end": 23414,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23389,
											"end": 23414,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23428,
											"end": 23448,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "684"
										},
										{
											"begin": 23446,
											"end": 23447,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23428,
											"end": 23448,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 23428,
											"end": 23448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23428,
											"end": 23448,
											"name": "tag",
											"source": 15,
											"value": "684"
										},
										{
											"begin": 23428,
											"end": 23448,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23423,
											"end": 23448,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23423,
											"end": 23448,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23467,
											"end": 23468,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23457,
											"end": 23492,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "685"
										},
										{
											"begin": 23457,
											"end": 23492,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 23472,
											"end": 23490,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "686"
										},
										{
											"begin": 23472,
											"end": 23490,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "415"
										},
										{
											"begin": 23472,
											"end": 23490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23472,
											"end": 23490,
											"name": "tag",
											"source": 15,
											"value": "686"
										},
										{
											"begin": 23472,
											"end": 23490,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23457,
											"end": 23492,
											"name": "tag",
											"source": 15,
											"value": "685"
										},
										{
											"begin": 23457,
											"end": 23492,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23514,
											"end": 23515,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23511,
											"end": 23512,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23507,
											"end": 23516,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 23502,
											"end": 23516,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23502,
											"end": 23516,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23337,
											"end": 23522,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23337,
											"end": 23522,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23337,
											"end": 23522,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23337,
											"end": 23522,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23337,
											"end": 23522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23528,
											"end": 23722,
											"name": "tag",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 23528,
											"end": 23722,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23568,
											"end": 23572,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23588,
											"end": 23608,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "688"
										},
										{
											"begin": 23606,
											"end": 23607,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23588,
											"end": 23608,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 23588,
											"end": 23608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23588,
											"end": 23608,
											"name": "tag",
											"source": 15,
											"value": "688"
										},
										{
											"begin": 23588,
											"end": 23608,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23583,
											"end": 23608,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23583,
											"end": 23608,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23622,
											"end": 23642,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "689"
										},
										{
											"begin": 23640,
											"end": 23641,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 23622,
											"end": 23642,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "360"
										},
										{
											"begin": 23622,
											"end": 23642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23622,
											"end": 23642,
											"name": "tag",
											"source": 15,
											"value": "689"
										},
										{
											"begin": 23622,
											"end": 23642,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23617,
											"end": 23642,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23666,
											"end": 23667,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23663,
											"end": 23664,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23659,
											"end": 23668,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 23651,
											"end": 23668,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23651,
											"end": 23668,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23690,
											"end": 23691,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23684,
											"end": 23688,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23681,
											"end": 23692,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 23678,
											"end": 23715,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 23678,
											"end": 23715,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "690"
										},
										{
											"begin": 23678,
											"end": 23715,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 23695,
											"end": 23713,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "691"
										},
										{
											"begin": 23695,
											"end": 23713,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "391"
										},
										{
											"begin": 23695,
											"end": 23713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23695,
											"end": 23713,
											"name": "tag",
											"source": 15,
											"value": "691"
										},
										{
											"begin": 23695,
											"end": 23713,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23678,
											"end": 23715,
											"name": "tag",
											"source": 15,
											"value": "690"
										},
										{
											"begin": 23678,
											"end": 23715,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23528,
											"end": 23722,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23528,
											"end": 23722,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23528,
											"end": 23722,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23528,
											"end": 23722,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23528,
											"end": 23722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23728,
											"end": 23871,
											"name": "tag",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 23728,
											"end": 23871,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23785,
											"end": 23790,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23816,
											"end": 23822,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23810,
											"end": 23823,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 23801,
											"end": 23823,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 23801,
											"end": 23823,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23832,
											"end": 23865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "693"
										},
										{
											"begin": 23859,
											"end": 23864,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 23832,
											"end": 23865,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "379"
										},
										{
											"begin": 23832,
											"end": 23865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23832,
											"end": 23865,
											"name": "tag",
											"source": 15,
											"value": "693"
										},
										{
											"begin": 23832,
											"end": 23865,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23728,
											"end": 23871,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23728,
											"end": 23871,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23728,
											"end": 23871,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23728,
											"end": 23871,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23728,
											"end": 23871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 23877,
											"end": 24228,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 23877,
											"end": 24228,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23947,
											"end": 23953,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 23996,
											"end": 23998,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 23984,
											"end": 23993,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 23975,
											"end": 23982,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 23971,
											"end": 23994,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 23967,
											"end": 23999,
											"name": "SLT",
											"source": 15
										},
										{
											"begin": 23964,
											"end": 24083,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 23964,
											"end": 24083,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "695"
										},
										{
											"begin": 23964,
											"end": 24083,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 24002,
											"end": 24081,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "696"
										},
										{
											"begin": 24002,
											"end": 24081,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "354"
										},
										{
											"begin": 24002,
											"end": 24081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24002,
											"end": 24081,
											"name": "tag",
											"source": 15,
											"value": "696"
										},
										{
											"begin": 24002,
											"end": 24081,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 23964,
											"end": 24083,
											"name": "tag",
											"source": 15,
											"value": "695"
										},
										{
											"begin": 23964,
											"end": 24083,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24122,
											"end": 24123,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24147,
											"end": 24211,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "697"
										},
										{
											"begin": 24203,
											"end": 24210,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 24194,
											"end": 24200,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24183,
											"end": 24192,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 24179,
											"end": 24201,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24147,
											"end": 24211,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "416"
										},
										{
											"begin": 24147,
											"end": 24211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24147,
											"end": 24211,
											"name": "tag",
											"source": 15,
											"value": "697"
										},
										{
											"begin": 24147,
											"end": 24211,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24137,
											"end": 24211,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 24137,
											"end": 24211,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24093,
											"end": 24221,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23877,
											"end": 24228,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 23877,
											"end": 24228,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 23877,
											"end": 24228,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23877,
											"end": 24228,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 23877,
											"end": 24228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24234,
											"end": 24459,
											"name": "tag",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 24234,
											"end": 24459,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24374,
											"end": 24408,
											"name": "PUSH",
											"source": 15,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 24370,
											"end": 24371,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24362,
											"end": 24368,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24358,
											"end": 24372,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24351,
											"end": 24409,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24443,
											"end": 24451,
											"name": "PUSH",
											"source": 15,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24438,
											"end": 24440,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 24430,
											"end": 24436,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24426,
											"end": 24441,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24419,
											"end": 24452,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 24234,
											"end": 24459,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24234,
											"end": 24459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24465,
											"end": 24831,
											"name": "tag",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 24465,
											"end": 24831,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24607,
											"end": 24610,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 24628,
											"end": 24695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "700"
										},
										{
											"begin": 24692,
											"end": 24694,
											"name": "PUSH",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 24687,
											"end": 24690,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 24628,
											"end": 24695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 24628,
											"end": 24695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24628,
											"end": 24695,
											"name": "tag",
											"source": 15,
											"value": "700"
										},
										{
											"begin": 24628,
											"end": 24695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24621,
											"end": 24695,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 24621,
											"end": 24695,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24704,
											"end": 24797,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "701"
										},
										{
											"begin": 24793,
											"end": 24796,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24704,
											"end": 24797,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "417"
										},
										{
											"begin": 24704,
											"end": 24797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24704,
											"end": 24797,
											"name": "tag",
											"source": 15,
											"value": "701"
										},
										{
											"begin": 24704,
											"end": 24797,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 24822,
											"end": 24824,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 24817,
											"end": 24820,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 24813,
											"end": 24825,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 24806,
											"end": 24825,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24806,
											"end": 24825,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24465,
											"end": 24831,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 24465,
											"end": 24831,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24465,
											"end": 24831,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24465,
											"end": 24831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 24837,
											"end": 25256,
											"name": "tag",
											"source": 15,
											"value": "268"
										},
										{
											"begin": 24837,
											"end": 25256,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25003,
											"end": 25007,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25041,
											"end": 25043,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 25030,
											"end": 25039,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25026,
											"end": 25044,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25018,
											"end": 25044,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25018,
											"end": 25044,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25090,
											"end": 25099,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25084,
											"end": 25088,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25080,
											"end": 25100,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 25076,
											"end": 25077,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25065,
											"end": 25074,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25061,
											"end": 25078,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25054,
											"end": 25101,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 25118,
											"end": 25249,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "703"
										},
										{
											"begin": 25244,
											"end": 25248,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 25118,
											"end": 25249,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "418"
										},
										{
											"begin": 25118,
											"end": 25249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25118,
											"end": 25249,
											"name": "tag",
											"source": 15,
											"value": "703"
										},
										{
											"begin": 25118,
											"end": 25249,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25110,
											"end": 25249,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25110,
											"end": 25249,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24837,
											"end": 25256,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 24837,
											"end": 25256,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 24837,
											"end": 25256,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 24837,
											"end": 25256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25262,
											"end": 25443,
											"name": "tag",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 25262,
											"end": 25443,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25402,
											"end": 25435,
											"name": "PUSH",
											"source": 15,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 25398,
											"end": 25399,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25390,
											"end": 25396,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25386,
											"end": 25400,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25379,
											"end": 25436,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 25262,
											"end": 25443,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25262,
											"end": 25443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25449,
											"end": 25815,
											"name": "tag",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 25449,
											"end": 25815,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25591,
											"end": 25594,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 25612,
											"end": 25679,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "706"
										},
										{
											"begin": 25676,
											"end": 25678,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 25671,
											"end": 25674,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 25612,
											"end": 25679,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 25612,
											"end": 25679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25612,
											"end": 25679,
											"name": "tag",
											"source": 15,
											"value": "706"
										},
										{
											"begin": 25612,
											"end": 25679,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25605,
											"end": 25679,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25605,
											"end": 25679,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25688,
											"end": 25781,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "707"
										},
										{
											"begin": 25777,
											"end": 25780,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25688,
											"end": 25781,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "419"
										},
										{
											"begin": 25688,
											"end": 25781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25688,
											"end": 25781,
											"name": "tag",
											"source": 15,
											"value": "707"
										},
										{
											"begin": 25688,
											"end": 25781,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25806,
											"end": 25808,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 25801,
											"end": 25804,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 25797,
											"end": 25809,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 25790,
											"end": 25809,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25790,
											"end": 25809,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25449,
											"end": 25815,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25449,
											"end": 25815,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25449,
											"end": 25815,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25449,
											"end": 25815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 25821,
											"end": 26240,
											"name": "tag",
											"source": 15,
											"value": "279"
										},
										{
											"begin": 25821,
											"end": 26240,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 25987,
											"end": 25991,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26025,
											"end": 26027,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26014,
											"end": 26023,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26010,
											"end": 26028,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26002,
											"end": 26028,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26002,
											"end": 26028,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26074,
											"end": 26083,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26068,
											"end": 26072,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26064,
											"end": 26084,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 26060,
											"end": 26061,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26049,
											"end": 26058,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26045,
											"end": 26062,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26038,
											"end": 26085,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 26102,
											"end": 26233,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "709"
										},
										{
											"begin": 26228,
											"end": 26232,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 26102,
											"end": 26233,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "420"
										},
										{
											"begin": 26102,
											"end": 26233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26102,
											"end": 26233,
											"name": "tag",
											"source": 15,
											"value": "709"
										},
										{
											"begin": 26102,
											"end": 26233,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26094,
											"end": 26233,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26094,
											"end": 26233,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25821,
											"end": 26240,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 25821,
											"end": 26240,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 25821,
											"end": 26240,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 25821,
											"end": 26240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26246,
											"end": 26412,
											"name": "tag",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 26246,
											"end": 26412,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26386,
											"end": 26404,
											"name": "PUSH",
											"source": 15,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 26382,
											"end": 26383,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26374,
											"end": 26380,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26370,
											"end": 26384,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26363,
											"end": 26405,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 26246,
											"end": 26412,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26246,
											"end": 26412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26418,
											"end": 26784,
											"name": "tag",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 26418,
											"end": 26784,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26560,
											"end": 26563,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26581,
											"end": 26648,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "712"
										},
										{
											"begin": 26645,
											"end": 26647,
											"name": "PUSH",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 26640,
											"end": 26643,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 26581,
											"end": 26648,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 26581,
											"end": 26648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26581,
											"end": 26648,
											"name": "tag",
											"source": 15,
											"value": "712"
										},
										{
											"begin": 26581,
											"end": 26648,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26574,
											"end": 26648,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26574,
											"end": 26648,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26657,
											"end": 26750,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "713"
										},
										{
											"begin": 26746,
											"end": 26749,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26657,
											"end": 26750,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "421"
										},
										{
											"begin": 26657,
											"end": 26750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26657,
											"end": 26750,
											"name": "tag",
											"source": 15,
											"value": "713"
										},
										{
											"begin": 26657,
											"end": 26750,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26775,
											"end": 26777,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26770,
											"end": 26773,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26766,
											"end": 26778,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26759,
											"end": 26778,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26759,
											"end": 26778,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26418,
											"end": 26784,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26418,
											"end": 26784,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26418,
											"end": 26784,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26418,
											"end": 26784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 26790,
											"end": 27209,
											"name": "tag",
											"source": 15,
											"value": "284"
										},
										{
											"begin": 26790,
											"end": 27209,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 26956,
											"end": 26960,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 26994,
											"end": 26996,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 26983,
											"end": 26992,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 26979,
											"end": 26997,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 26971,
											"end": 26997,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26971,
											"end": 26997,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27043,
											"end": 27052,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27037,
											"end": 27041,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27033,
											"end": 27053,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 27029,
											"end": 27030,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27018,
											"end": 27027,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27014,
											"end": 27031,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27007,
											"end": 27054,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 27071,
											"end": 27202,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "715"
										},
										{
											"begin": 27197,
											"end": 27201,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 27071,
											"end": 27202,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "422"
										},
										{
											"begin": 27071,
											"end": 27202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27071,
											"end": 27202,
											"name": "tag",
											"source": 15,
											"value": "715"
										},
										{
											"begin": 27071,
											"end": 27202,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27063,
											"end": 27202,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27063,
											"end": 27202,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26790,
											"end": 27209,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 26790,
											"end": 27209,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 26790,
											"end": 27209,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 26790,
											"end": 27209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27215,
											"end": 27397,
											"name": "tag",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 27215,
											"end": 27397,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27355,
											"end": 27389,
											"name": "PUSH",
											"source": 15,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 27351,
											"end": 27352,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27343,
											"end": 27349,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27339,
											"end": 27353,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27332,
											"end": 27390,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 27215,
											"end": 27397,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27215,
											"end": 27397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27403,
											"end": 27769,
											"name": "tag",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 27403,
											"end": 27769,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27545,
											"end": 27548,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27566,
											"end": 27633,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "718"
										},
										{
											"begin": 27630,
											"end": 27632,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 27625,
											"end": 27628,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27566,
											"end": 27633,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 27566,
											"end": 27633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27566,
											"end": 27633,
											"name": "tag",
											"source": 15,
											"value": "718"
										},
										{
											"begin": 27566,
											"end": 27633,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27559,
											"end": 27633,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27559,
											"end": 27633,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27642,
											"end": 27735,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "719"
										},
										{
											"begin": 27731,
											"end": 27734,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27642,
											"end": 27735,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "423"
										},
										{
											"begin": 27642,
											"end": 27735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27642,
											"end": 27735,
											"name": "tag",
											"source": 15,
											"value": "719"
										},
										{
											"begin": 27642,
											"end": 27735,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27760,
											"end": 27762,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 27755,
											"end": 27758,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27751,
											"end": 27763,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27744,
											"end": 27763,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27744,
											"end": 27763,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27403,
											"end": 27769,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27403,
											"end": 27769,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27403,
											"end": 27769,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27403,
											"end": 27769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 27775,
											"end": 28194,
											"name": "tag",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 27775,
											"end": 28194,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 27941,
											"end": 27945,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 27979,
											"end": 27981,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 27968,
											"end": 27977,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 27964,
											"end": 27982,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27956,
											"end": 27982,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27956,
											"end": 27982,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28028,
											"end": 28037,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28022,
											"end": 28026,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28018,
											"end": 28038,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 28014,
											"end": 28015,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28003,
											"end": 28012,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 27999,
											"end": 28016,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 27992,
											"end": 28039,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 28056,
											"end": 28187,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "721"
										},
										{
											"begin": 28182,
											"end": 28186,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 28056,
											"end": 28187,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "424"
										},
										{
											"begin": 28056,
											"end": 28187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28056,
											"end": 28187,
											"name": "tag",
											"source": 15,
											"value": "721"
										},
										{
											"begin": 28056,
											"end": 28187,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28048,
											"end": 28187,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28048,
											"end": 28187,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27775,
											"end": 28194,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 27775,
											"end": 28194,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 27775,
											"end": 28194,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 27775,
											"end": 28194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28200,
											"end": 28642,
											"name": "tag",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 28200,
											"end": 28642,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28349,
											"end": 28353,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28387,
											"end": 28389,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 28376,
											"end": 28385,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28372,
											"end": 28390,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28364,
											"end": 28390,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28364,
											"end": 28390,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28400,
											"end": 28471,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "723"
										},
										{
											"begin": 28468,
											"end": 28469,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28457,
											"end": 28466,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28453,
											"end": 28470,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28444,
											"end": 28450,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 28400,
											"end": 28471,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 28400,
											"end": 28471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28400,
											"end": 28471,
											"name": "tag",
											"source": 15,
											"value": "723"
										},
										{
											"begin": 28400,
											"end": 28471,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28481,
											"end": 28553,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "724"
										},
										{
											"begin": 28549,
											"end": 28551,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 28538,
											"end": 28547,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28534,
											"end": 28552,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28525,
											"end": 28531,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 28481,
											"end": 28553,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "390"
										},
										{
											"begin": 28481,
											"end": 28553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28481,
											"end": 28553,
											"name": "tag",
											"source": 15,
											"value": "724"
										},
										{
											"begin": 28481,
											"end": 28553,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28563,
											"end": 28635,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "725"
										},
										{
											"begin": 28631,
											"end": 28633,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 28620,
											"end": 28629,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 28616,
											"end": 28634,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28607,
											"end": 28613,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 28563,
											"end": 28635,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "361"
										},
										{
											"begin": 28563,
											"end": 28635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28563,
											"end": 28635,
											"name": "tag",
											"source": 15,
											"value": "725"
										},
										{
											"begin": 28563,
											"end": 28635,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28200,
											"end": 28642,
											"name": "SWAP5",
											"source": 15
										},
										{
											"begin": 28200,
											"end": 28642,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 28200,
											"end": 28642,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28200,
											"end": 28642,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28200,
											"end": 28642,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28200,
											"end": 28642,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28200,
											"end": 28642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28648,
											"end": 28877,
											"name": "tag",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 28648,
											"end": 28877,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 28788,
											"end": 28822,
											"name": "PUSH",
											"source": 15,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 28784,
											"end": 28785,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 28776,
											"end": 28782,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28772,
											"end": 28786,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28765,
											"end": 28823,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 28857,
											"end": 28869,
											"name": "PUSH",
											"source": 15,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 28852,
											"end": 28854,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 28844,
											"end": 28850,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 28840,
											"end": 28855,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 28833,
											"end": 28870,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 28648,
											"end": 28877,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28648,
											"end": 28877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 28883,
											"end": 29249,
											"name": "tag",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 28883,
											"end": 29249,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29025,
											"end": 29028,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29046,
											"end": 29113,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "728"
										},
										{
											"begin": 29110,
											"end": 29112,
											"name": "PUSH",
											"source": 15,
											"value": "2A"
										},
										{
											"begin": 29105,
											"end": 29108,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29046,
											"end": 29113,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 29046,
											"end": 29113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29046,
											"end": 29113,
											"name": "tag",
											"source": 15,
											"value": "728"
										},
										{
											"begin": 29046,
											"end": 29113,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29039,
											"end": 29113,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 29039,
											"end": 29113,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29122,
											"end": 29215,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "729"
										},
										{
											"begin": 29211,
											"end": 29214,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29122,
											"end": 29215,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "425"
										},
										{
											"begin": 29122,
											"end": 29215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29122,
											"end": 29215,
											"name": "tag",
											"source": 15,
											"value": "729"
										},
										{
											"begin": 29122,
											"end": 29215,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29240,
											"end": 29242,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 29235,
											"end": 29238,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29231,
											"end": 29243,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29224,
											"end": 29243,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29224,
											"end": 29243,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28883,
											"end": 29249,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 28883,
											"end": 29249,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 28883,
											"end": 29249,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 28883,
											"end": 29249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29255,
											"end": 29674,
											"name": "tag",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 29255,
											"end": 29674,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29421,
											"end": 29425,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29459,
											"end": 29461,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 29448,
											"end": 29457,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29444,
											"end": 29462,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29436,
											"end": 29462,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29436,
											"end": 29462,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29508,
											"end": 29517,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29502,
											"end": 29506,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29498,
											"end": 29518,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 29494,
											"end": 29495,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29483,
											"end": 29492,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 29479,
											"end": 29496,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29472,
											"end": 29519,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 29536,
											"end": 29667,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "731"
										},
										{
											"begin": 29662,
											"end": 29666,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 29536,
											"end": 29667,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "426"
										},
										{
											"begin": 29536,
											"end": 29667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29536,
											"end": 29667,
											"name": "tag",
											"source": 15,
											"value": "731"
										},
										{
											"begin": 29536,
											"end": 29667,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29528,
											"end": 29667,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29528,
											"end": 29667,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29255,
											"end": 29674,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 29255,
											"end": 29674,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29255,
											"end": 29674,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29255,
											"end": 29674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29680,
											"end": 29905,
											"name": "tag",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 29680,
											"end": 29905,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 29820,
											"end": 29854,
											"name": "PUSH",
											"source": 15,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 29816,
											"end": 29817,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 29808,
											"end": 29814,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29804,
											"end": 29818,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29797,
											"end": 29855,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 29889,
											"end": 29897,
											"name": "PUSH",
											"source": 15,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29884,
											"end": 29886,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 29876,
											"end": 29882,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 29872,
											"end": 29887,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 29865,
											"end": 29898,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 29680,
											"end": 29905,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29680,
											"end": 29905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 29911,
											"end": 30277,
											"name": "tag",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 29911,
											"end": 30277,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30053,
											"end": 30056,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30074,
											"end": 30141,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "734"
										},
										{
											"begin": 30138,
											"end": 30140,
											"name": "PUSH",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 30133,
											"end": 30136,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30074,
											"end": 30141,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 30074,
											"end": 30141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30074,
											"end": 30141,
											"name": "tag",
											"source": 15,
											"value": "734"
										},
										{
											"begin": 30074,
											"end": 30141,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30067,
											"end": 30141,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 30067,
											"end": 30141,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30150,
											"end": 30243,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "735"
										},
										{
											"begin": 30239,
											"end": 30242,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30150,
											"end": 30243,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "427"
										},
										{
											"begin": 30150,
											"end": 30243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30150,
											"end": 30243,
											"name": "tag",
											"source": 15,
											"value": "735"
										},
										{
											"begin": 30150,
											"end": 30243,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30268,
											"end": 30270,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 30263,
											"end": 30266,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30259,
											"end": 30271,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30252,
											"end": 30271,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30252,
											"end": 30271,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29911,
											"end": 30277,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 29911,
											"end": 30277,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 29911,
											"end": 30277,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 29911,
											"end": 30277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30283,
											"end": 30702,
											"name": "tag",
											"source": 15,
											"value": "328"
										},
										{
											"begin": 30283,
											"end": 30702,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30449,
											"end": 30453,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30487,
											"end": 30489,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 30476,
											"end": 30485,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 30472,
											"end": 30490,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30464,
											"end": 30490,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30464,
											"end": 30490,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30536,
											"end": 30545,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30530,
											"end": 30534,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30526,
											"end": 30546,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 30522,
											"end": 30523,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30511,
											"end": 30520,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 30507,
											"end": 30524,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 30500,
											"end": 30547,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 30564,
											"end": 30695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "737"
										},
										{
											"begin": 30690,
											"end": 30694,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30564,
											"end": 30695,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "428"
										},
										{
											"begin": 30564,
											"end": 30695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30564,
											"end": 30695,
											"name": "tag",
											"source": 15,
											"value": "737"
										},
										{
											"begin": 30564,
											"end": 30695,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30556,
											"end": 30695,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30556,
											"end": 30695,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30283,
											"end": 30702,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 30283,
											"end": 30702,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30283,
											"end": 30702,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30283,
											"end": 30702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30708,
											"end": 30806,
											"name": "tag",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 30708,
											"end": 30806,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30759,
											"end": 30765,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30793,
											"end": 30798,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30787,
											"end": 30799,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 30777,
											"end": 30799,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30777,
											"end": 30799,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30708,
											"end": 30806,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 30708,
											"end": 30806,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30708,
											"end": 30806,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30708,
											"end": 30806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30812,
											"end": 30959,
											"name": "tag",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 30812,
											"end": 30959,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 30913,
											"end": 30924,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 30950,
											"end": 30953,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 30935,
											"end": 30953,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 30935,
											"end": 30953,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30812,
											"end": 30959,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 30812,
											"end": 30959,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 30812,
											"end": 30959,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30812,
											"end": 30959,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30812,
											"end": 30959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 30965,
											"end": 31351,
											"name": "tag",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 30965,
											"end": 31351,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31069,
											"end": 31072,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31097,
											"end": 31135,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "741"
										},
										{
											"begin": 31129,
											"end": 31134,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31097,
											"end": 31135,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "429"
										},
										{
											"begin": 31097,
											"end": 31135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31097,
											"end": 31135,
											"name": "tag",
											"source": 15,
											"value": "741"
										},
										{
											"begin": 31097,
											"end": 31135,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31151,
											"end": 31239,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "742"
										},
										{
											"begin": 31232,
											"end": 31238,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31227,
											"end": 31230,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 31151,
											"end": 31239,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "430"
										},
										{
											"begin": 31151,
											"end": 31239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31151,
											"end": 31239,
											"name": "tag",
											"source": 15,
											"value": "742"
										},
										{
											"begin": 31151,
											"end": 31239,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31144,
											"end": 31239,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 31144,
											"end": 31239,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31248,
											"end": 31313,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "743"
										},
										{
											"begin": 31306,
											"end": 31312,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31301,
											"end": 31304,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 31294,
											"end": 31298,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 31287,
											"end": 31292,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 31283,
											"end": 31299,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31248,
											"end": 31313,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "396"
										},
										{
											"begin": 31248,
											"end": 31313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31248,
											"end": 31313,
											"name": "tag",
											"source": 15,
											"value": "743"
										},
										{
											"begin": 31248,
											"end": 31313,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31338,
											"end": 31344,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 31333,
											"end": 31336,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 31329,
											"end": 31345,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31322,
											"end": 31345,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 31322,
											"end": 31345,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31073,
											"end": 31351,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30965,
											"end": 31351,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 30965,
											"end": 31351,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 30965,
											"end": 31351,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30965,
											"end": 31351,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 30965,
											"end": 31351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31357,
											"end": 31628,
											"name": "tag",
											"source": 15,
											"value": "330"
										},
										{
											"begin": 31357,
											"end": 31628,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31487,
											"end": 31490,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31509,
											"end": 31602,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "745"
										},
										{
											"begin": 31598,
											"end": 31601,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31589,
											"end": 31595,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 31509,
											"end": 31602,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "431"
										},
										{
											"begin": 31509,
											"end": 31602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31509,
											"end": 31602,
											"name": "tag",
											"source": 15,
											"value": "745"
										},
										{
											"begin": 31509,
											"end": 31602,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31502,
											"end": 31602,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 31502,
											"end": 31602,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31619,
											"end": 31622,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 31612,
											"end": 31622,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31612,
											"end": 31622,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31357,
											"end": 31628,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 31357,
											"end": 31628,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 31357,
											"end": 31628,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31357,
											"end": 31628,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31357,
											"end": 31628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31634,
											"end": 31813,
											"name": "tag",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 31634,
											"end": 31813,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31774,
											"end": 31805,
											"name": "PUSH",
											"source": 15,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 31770,
											"end": 31771,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31762,
											"end": 31768,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 31758,
											"end": 31772,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 31751,
											"end": 31806,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 31634,
											"end": 31813,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31634,
											"end": 31813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31819,
											"end": 32185,
											"name": "tag",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 31819,
											"end": 32185,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31961,
											"end": 31964,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 31982,
											"end": 32049,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "748"
										},
										{
											"begin": 32046,
											"end": 32048,
											"name": "PUSH",
											"source": 15,
											"value": "1D"
										},
										{
											"begin": 32041,
											"end": 32044,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 31982,
											"end": 32049,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "392"
										},
										{
											"begin": 31982,
											"end": 32049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 31982,
											"end": 32049,
											"name": "tag",
											"source": 15,
											"value": "748"
										},
										{
											"begin": 31982,
											"end": 32049,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 31975,
											"end": 32049,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 31975,
											"end": 32049,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32058,
											"end": 32151,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "749"
										},
										{
											"begin": 32147,
											"end": 32150,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 32058,
											"end": 32151,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "432"
										},
										{
											"begin": 32058,
											"end": 32151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 32058,
											"end": 32151,
											"name": "tag",
											"source": 15,
											"value": "749"
										},
										{
											"begin": 32058,
											"end": 32151,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32176,
											"end": 32178,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 32171,
											"end": 32174,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 32167,
											"end": 32179,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 32160,
											"end": 32179,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 32160,
											"end": 32179,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31819,
											"end": 32185,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 31819,
											"end": 32185,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 31819,
											"end": 32185,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 31819,
											"end": 32185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 32191,
											"end": 32610,
											"name": "tag",
											"source": 15,
											"value": "343"
										},
										{
											"begin": 32191,
											"end": 32610,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32357,
											"end": 32361,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32395,
											"end": 32397,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 32384,
											"end": 32393,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 32380,
											"end": 32398,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 32372,
											"end": 32398,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 32372,
											"end": 32398,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32444,
											"end": 32453,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 32438,
											"end": 32442,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 32434,
											"end": 32454,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 32430,
											"end": 32431,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32419,
											"end": 32428,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 32415,
											"end": 32432,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 32408,
											"end": 32455,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 32472,
											"end": 32603,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "751"
										},
										{
											"begin": 32598,
											"end": 32602,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 32472,
											"end": 32603,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "433"
										},
										{
											"begin": 32472,
											"end": 32603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 32472,
											"end": 32603,
											"name": "tag",
											"source": 15,
											"value": "751"
										},
										{
											"begin": 32472,
											"end": 32603,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32464,
											"end": 32603,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 32464,
											"end": 32603,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32191,
											"end": 32610,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 32191,
											"end": 32610,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 32191,
											"end": 32610,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32191,
											"end": 32610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 32616,
											"end": 32929,
											"name": "tag",
											"source": 15,
											"value": "352"
										},
										{
											"begin": 32616,
											"end": 32929,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32729,
											"end": 32733,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32767,
											"end": 32769,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 32756,
											"end": 32765,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 32752,
											"end": 32770,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 32744,
											"end": 32770,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 32744,
											"end": 32770,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32816,
											"end": 32825,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 32810,
											"end": 32814,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 32806,
											"end": 32826,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 32802,
											"end": 32803,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 32791,
											"end": 32800,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 32787,
											"end": 32804,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 32780,
											"end": 32827,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 32844,
											"end": 32922,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "753"
										},
										{
											"begin": 32917,
											"end": 32921,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 32908,
											"end": 32914,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 32844,
											"end": 32922,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "397"
										},
										{
											"begin": 32844,
											"end": 32922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 32844,
											"end": 32922,
											"name": "tag",
											"source": 15,
											"value": "753"
										},
										{
											"begin": 32844,
											"end": 32922,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 32836,
											"end": 32922,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 32836,
											"end": 32922,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32616,
											"end": 32929,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 32616,
											"end": 32929,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 32616,
											"end": 32929,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32616,
											"end": 32929,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 32616,
											"end": 32929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										}
									]
								},
								"017E571B15BA8F3567BE32B8C9B4C10B5AEE7936471ACCDC36D1737426796A31": "2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c6567617465"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/Authorization.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/Distribution.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/GenericAuthorization.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/IRedelegationReward.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/Staking.sol",
								"gist-e259420aec8d85ea2219e4154536ad35/contracts/Types.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approveRequiredMethods()": "c6e79b91",
							"balanceOf(address)": "70a08231",
							"claim()": "4e71d92d",
							"earned(address)": "008cc262",
							"fund(uint256)": "ca1d209d",
							"getRewardForDuration()": "1c1f78eb",
							"isUserApproved(address)": "529d6ccf",
							"lastTimeRewardApplicable()": "80faa57d",
							"lastUpdateTime()": "c8f33c91",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"periodFinish()": "ebe2b12b",
							"recoverERC20(address,uint256)": "8980f11f",
							"redelegateTokens(string,string,uint256)": "880b0e43",
							"redelegateTokensMultiple(string[],string[],uint256[])": "6c11fe9b",
							"renounceOwnership()": "715018a6",
							"rewardPerToken()": "cd3daf9d",
							"rewardPerTokenStored()": "df136d65",
							"rewardRate()": "7b0a47ee",
							"rewards(address)": "0700037d",
							"rewardsDuration()": "386a9525",
							"rewardsToken()": "d1af0c7d",
							"setRewardsDuration(uint256)": "cc1a378f",
							"stakingToken()": "72f702f3",
							"totalSupplyLocked()": "58341922",
							"transferOwnership(address)": "f2fde38b",
							"userRewardPerTokenPaid(address)": "8b876347"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardsToken_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FailedToWithdrawStaking\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooHighReward\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WaitToFinish\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"CancelRedelegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Recovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Redelegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"RewardsDurationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"approveRequiredMethods\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardForDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isUserApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodFinish\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_srcValidatorAddr\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_dstValidatorAddr\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"redelegateTokens\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"_srcValidatorAddrs\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"_dstValidatorAddrs\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"redelegateTokensMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"setRewardsDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupplyLocked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"approveRequiredMethods()\":{\"details\":\"Approves the required transactions for delegation and withdrawal of staking rewards transactions.This creates a Cosmos Authorization Grants for the given methods.This emits an Approval event.\"},\"balanceOf(address)\":{\"params\":{\"account\":\"User address\"},\"returns\":{\"_0\":\"Returns balance of staked amount per user.\"}},\"claim()\":{\"details\":\"Callable only when unpaused\"},\"constructor\":{\"details\":\"Constructor\",\"params\":{\"duration\":\"Reward duration in seconds\",\"rewardsToken_\":\"Address to rewards ERC20 token\"}},\"earned(address)\":{\"params\":{\"account\":\"User address\"},\"returns\":{\"_0\":\"Returns earned rewards per user.\"}},\"fund(uint256)\":{\"details\":\"Callable only when unpaused and by owner\",\"params\":{\"reward\":\"Funding rewards token amount\"}},\"getRewardForDuration()\":{\"returns\":{\"_0\":\"Returns total rewards amount for current duration.\"}},\"isUserApproved(address)\":{\"details\":\"Checks if a user has executed the approveRequiredMethods function.\",\"params\":{\"_user\":\"The address of the user to check.\"},\"returns\":{\"_0\":\"A boolean indicating if the user is approved.\"}},\"lastTimeRewardApplicable()\":{\"returns\":{\"_0\":\"Returns last time to calculate rewards. If now is less than the last time, returns now.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"recoverERC20(address,uint256)\":{\"details\":\"Callable by owner\",\"params\":{\"tokenAddress\":\"Recovering token address\",\"tokenAmount\":\"Recovering token amount\"}},\"redelegateTokens(string,string,uint256)\":{\"details\":\"Redelegate the staked tokens from one validator to another\",\"params\":{\"_amount\":\"The amount of tokens to redelegate\",\"_dstValidatorAddr\":\"The address of the destination validator\",\"_srcValidatorAddr\":\"The address of the source validator\"}},\"redelegateTokensMultiple(string[],string[],uint256[])\":{\"details\":\"Redelegate the staked tokens from multiple validators to others\",\"params\":{\"_amounts\":\"The amounts of tokens to redelegate\",\"_dstValidatorAddrs\":\"The addresses of the destination validators\",\"_srcValidatorAddrs\":\"The addresses of the source validators\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"rewardPerToken()\":{\"returns\":{\"_0\":\"Returns total amount of calculated rewards.\"}},\"setRewardsDuration(uint256)\":{\"details\":\"Callable by owner\",\"params\":{\"duration\":\"New rewards duration\"}},\"totalSupplyLocked()\":{\"returns\":{\"_0\":\"Returns totalSupplyLocked\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"CancelRedelegate(address,uint256)\":{\"notice\":\"Emited when user unstakes his/her staked token\"},\"Claimed(address,uint256)\":{\"notice\":\"Emitted when user claim his/her rewards token\"},\"Funded(uint256)\":{\"notice\":\"Emitted when owner funds rewards token and restart rewarding session\"},\"Recovered(address,uint256)\":{\"notice\":\"Emitted when owner recovered tokens from this contract\"},\"Redelegate(address,uint256)\":{\"notice\":\"Emitted when user stakes staking token\"},\"RewardsDurationUpdated(uint256)\":{\"notice\":\"Emitted when rewards duration has been updated\"}},\"kind\":\"user\",\"methods\":{\"claim()\":{\"notice\":\"Claim rewards tokens, callable only when unpaused.\"},\"fund(uint256)\":{\"notice\":\"Fund rewards tokens and re-calculate rewards rate. Rewards rate will be calculated again from remaining distributable tokens and awarding rewards tokens.\"},\"recoverERC20(address,uint256)\":{\"notice\":\"Transfer ERC20 tokens back from this contract to the owner except staking token.\"},\"setRewardsDuration(uint256)\":{\"notice\":\"Set rewards duration, only available to set after finish of previous rewards period.\"}},\"notice\":\"Stakes tokens for a certain duration and gets rewards according to their staked shares\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":\"RedelegationReward\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://656cda26512ddd7373c2d5551c8fae759fc30f05b10f0fc2e738e9274199dbd4\",\"dweb:/ipfs/QmTSArSzQRFbQmHgq7U1PZXnsDFhvDZhKVu9CzMG4yo6Lx\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"gist-e259420aec8d85ea2219e4154536ad35/contracts/Authorization.sol\":{\"keccak256\":\"0xf77a5f9eb42b7f546d2beeb49e1c120f0491620fbf1402a687ac34a275c6cb05\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://166523692d8779b98a4963ab4a9f5a9aeb4ade68803051b88816de82496ffda7\",\"dweb:/ipfs/QmYCndS9oDJ3cF7A5admkYN2SyZzBg6129DBjvYKSd8Bnv\"]},\"gist-e259420aec8d85ea2219e4154536ad35/contracts/Distribution.sol\":{\"keccak256\":\"0x5250e099fd5d9f9c620639684f83f73279cf15324bd22d368d0c89405812a5f8\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://bec29684c2cc51f3a1f349f7a10507173af0e251edc49be0504def823f4bf547\",\"dweb:/ipfs/QmfFzvuE9vF5qcYvq9k44kyssvTibQg6dziuG818D2hVXA\"]},\"gist-e259420aec8d85ea2219e4154536ad35/contracts/GenericAuthorization.sol\":{\"keccak256\":\"0x43cd09da97b0a409dd0228e57192e7efd38b3f96a6811791483197544d0c318e\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://a32a8a36ca1b14cf5996eb8155576a4d88a2bfc9e8ec96adc75f5518a8d4903a\",\"dweb:/ipfs/QmWjr1J3yi7wdqGmnVccoMYmic6HgaiNUCQBUsaC1GfPqc\"]},\"gist-e259420aec8d85ea2219e4154536ad35/contracts/IRedelegationReward.sol\":{\"keccak256\":\"0x93f645b89674442a8cac93753dad5434877a93400d91c0595c8ba4eed171e953\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://57c6967357429e0c9722b11a6536f88c2c00731ff21e5d2441204fe40e927dd4\",\"dweb:/ipfs/QmZ67gX2YjFFP28cwD2FZFcWVxpgabQrYPQsUuXayyzdtg\"]},\"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol\":{\"keccak256\":\"0x37340ab20a9ddec6ce70337e0f06eca00be3de70161b1b3939f47650e765eaaa\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://faacc8ccc46134092369869957e3a6dfe9c3115a0b57d18996e0d090a4a68e07\",\"dweb:/ipfs/QmWZ8imoDTvP9c48d1iYXK2nEgW3QtBZXiA1dNFH9VeHGj\"]},\"gist-e259420aec8d85ea2219e4154536ad35/contracts/Staking.sol\":{\"keccak256\":\"0xb374184c61718f7fff601b0167dd98343ad4f093d98eaa3747f66394b479c9d3\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://fe08fb85de5fb7234b2fdddeb9edb0fb5aea8b1f707830b049ccfa6b3b83a036\",\"dweb:/ipfs/QmV9Ae198P1cYNkPWiu2TmHfbN5qtk1cjuNMSqDbkMEgFX\"]},\"gist-e259420aec8d85ea2219e4154536ad35/contracts/Types.sol\":{\"keccak256\":\"0x2280bf7e63e011c5263d33ae3cf64673e27ee08226116a5ae289a05c026e5cc8\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://e5c63f09b85147d1343d16c828110369fea9535c1ad69d7855f1f6f04208eaa7\",\"dweb:/ipfs/QmQFbYkU3ao25UjSYDqUUP1sPEzFJqJnT2xAgfo5g2ghmA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol:RedelegationReward",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol:RedelegationReward",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 231,
								"contract": "gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol:RedelegationReward",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1533,
								"contract": "gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol:RedelegationReward",
								"label": "stakingMethods",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_string_storage)dyn_storage"
							},
							{
								"astId": 1537,
								"contract": "gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol:RedelegationReward",
								"label": "approvedUsers",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1575,
								"contract": "gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol:RedelegationReward",
								"label": "stakingToken",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(IERC20)363"
							},
							{
								"astId": 1578,
								"contract": "gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol:RedelegationReward",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IERC20)363"
							},
							{
								"astId": 1580,
								"contract": "gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol:RedelegationReward",
								"label": "periodFinish",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1582,
								"contract": "gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol:RedelegationReward",
								"label": "rewardRate",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1585,
								"contract": "gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol:RedelegationReward",
								"label": "rewardsDuration",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1587,
								"contract": "gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol:RedelegationReward",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1589,
								"contract": "gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol:RedelegationReward",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1593,
								"contract": "gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol:RedelegationReward",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1597,
								"contract": "gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol:RedelegationReward",
								"label": "rewards",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1599,
								"contract": "gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol:RedelegationReward",
								"label": "totalSupply",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1603,
								"contract": "gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol:RedelegationReward",
								"label": "balances",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_string_storage)dyn_storage": {
								"base": "t_string_storage",
								"encoding": "dynamic_array",
								"label": "string[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)363": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"CancelRedelegate(address,uint256)": {
								"notice": "Emited when user unstakes his/her staked token"
							},
							"Claimed(address,uint256)": {
								"notice": "Emitted when user claim his/her rewards token"
							},
							"Funded(uint256)": {
								"notice": "Emitted when owner funds rewards token and restart rewarding session"
							},
							"Recovered(address,uint256)": {
								"notice": "Emitted when owner recovered tokens from this contract"
							},
							"Redelegate(address,uint256)": {
								"notice": "Emitted when user stakes staking token"
							},
							"RewardsDurationUpdated(uint256)": {
								"notice": "Emitted when rewards duration has been updated"
							}
						},
						"kind": "user",
						"methods": {
							"claim()": {
								"notice": "Claim rewards tokens, callable only when unpaused."
							},
							"fund(uint256)": {
								"notice": "Fund rewards tokens and re-calculate rewards rate. Rewards rate will be calculated again from remaining distributable tokens and awarding rewards tokens."
							},
							"recoverERC20(address,uint256)": {
								"notice": "Transfer ERC20 tokens back from this contract to the owner except staking token."
							},
							"setRewardsDuration(uint256)": {
								"notice": "Set rewards duration, only available to set after finish of previous rewards period."
							}
						},
						"notice": "Stakes tokens for a certain duration and gets rewards according to their staked shares",
						"version": 1
					}
				}
			},
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/Staking.sol": {
				"StakingI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "AllowanceChange",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "creationHeight",
									"type": "uint256"
								}
							],
							"name": "CancelUnbondingDelegation",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newShares",
									"type": "uint256"
								}
							],
							"name": "Delegate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "validatorSrcAddress",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "validatorDstAddress",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "completionTime",
									"type": "uint256"
								}
							],
							"name": "Redelegate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "completionTime",
									"type": "uint256"
								}
							],
							"name": "Unbond",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "method",
									"type": "string"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "remaining",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "creationHeight",
									"type": "uint256"
								}
							],
							"name": "cancelUnbondingDelegation",
							"outputs": [
								{
									"internalType": "int64",
									"name": "completionTime",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "delegate",
							"outputs": [
								{
									"internalType": "int64",
									"name": "completionTime",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								}
							],
							"name": "delegation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"components": [
										{
											"internalType": "string",
											"name": "denom",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										}
									],
									"internalType": "struct Coin",
									"name": "balance",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "string[]",
									"name": "methods",
									"type": "string[]"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "validatorSrcAddress",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "validatorDstAddress",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "redelegate",
							"outputs": [
								{
									"internalType": "int64",
									"name": "completionTime",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "srcValidatorAddress",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "dstValidatorAddress",
									"type": "string"
								}
							],
							"name": "redelegation",
							"outputs": [
								{
									"components": [
										{
											"internalType": "int64",
											"name": "creationHeight",
											"type": "int64"
										},
										{
											"internalType": "int64",
											"name": "completionTime",
											"type": "int64"
										},
										{
											"internalType": "uint256",
											"name": "initialBalance",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "sharesDst",
											"type": "uint256"
										}
									],
									"internalType": "struct RedelegationEntry[]",
									"name": "entries",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "srcValidatorAddress",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "dstValidatorAddress",
									"type": "string"
								},
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "key",
											"type": "bytes"
										},
										{
											"internalType": "uint64",
											"name": "offset",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "limit",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "countTotal",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "reverse",
											"type": "bool"
										}
									],
									"internalType": "struct PageRequest",
									"name": "pageRequest",
									"type": "tuple"
								}
							],
							"name": "redelegations",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"components": [
														{
															"internalType": "int64",
															"name": "creationHeight",
															"type": "int64"
														},
														{
															"internalType": "int64",
															"name": "completionTime",
															"type": "int64"
														},
														{
															"internalType": "uint256",
															"name": "initialBalance",
															"type": "uint256"
														},
														{
															"internalType": "uint256",
															"name": "sharesDst",
															"type": "uint256"
														}
													],
													"internalType": "struct RedelegationEntry[]",
													"name": "entries",
													"type": "tuple[]"
												}
											],
											"internalType": "struct Redelegation",
											"name": "redelegation",
											"type": "tuple"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "int64",
															"name": "creationHeight",
															"type": "int64"
														},
														{
															"internalType": "int64",
															"name": "completionTime",
															"type": "int64"
														},
														{
															"internalType": "uint256",
															"name": "initialBalance",
															"type": "uint256"
														},
														{
															"internalType": "uint256",
															"name": "sharesDst",
															"type": "uint256"
														}
													],
													"internalType": "struct RedelegationEntry",
													"name": "redelegationEntry",
													"type": "tuple"
												},
												{
													"internalType": "uint256",
													"name": "balance",
													"type": "uint256"
												}
											],
											"internalType": "struct RedelegationEntryResponse[]",
											"name": "entries",
											"type": "tuple[]"
										}
									],
									"internalType": "struct RedelegationResponse",
									"name": "response",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								}
							],
							"name": "unbondingDelegation",
							"outputs": [
								{
									"components": [
										{
											"internalType": "int64",
											"name": "creationHeight",
											"type": "int64"
										},
										{
											"internalType": "int64",
											"name": "completionTime",
											"type": "int64"
										},
										{
											"internalType": "uint256",
											"name": "initialBalance",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										}
									],
									"internalType": "struct UnbondingDelegationEntry[]",
									"name": "entries",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "delegatorAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "undelegate",
							"outputs": [
								{
									"internalType": "int64",
									"name": "completionTime",
									"type": "int64"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "validatorAddress",
									"type": "string"
								}
							],
							"name": "validator",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "operatorAddress",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "consensusPubkey",
											"type": "string"
										},
										{
											"internalType": "bool",
											"name": "jailed",
											"type": "bool"
										},
										{
											"internalType": "enum BondStatus",
											"name": "status",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "tokens",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "delegatorShares",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "int64",
											"name": "unbondingHeight",
											"type": "int64"
										},
										{
											"internalType": "int64",
											"name": "unbondingTime",
											"type": "int64"
										},
										{
											"internalType": "uint256",
											"name": "commission",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minSelfDelegation",
											"type": "uint256"
										}
									],
									"internalType": "struct Validator[]",
									"name": "validators",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "status",
									"type": "string"
								},
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "key",
											"type": "bytes"
										},
										{
											"internalType": "uint64",
											"name": "offset",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "limit",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "countTotal",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "reverse",
											"type": "bool"
										}
									],
									"internalType": "struct PageRequest",
									"name": "pageRequest",
									"type": "tuple"
								}
							],
							"name": "validators",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "operatorAddress",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "consensusPubkey",
											"type": "string"
										},
										{
											"internalType": "bool",
											"name": "jailed",
											"type": "bool"
										},
										{
											"internalType": "enum BondStatus",
											"name": "status",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "tokens",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "delegatorShares",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "description",
											"type": "string"
										},
										{
											"internalType": "int64",
											"name": "unbondingHeight",
											"type": "int64"
										},
										{
											"internalType": "int64",
											"name": "unbondingTime",
											"type": "int64"
										},
										{
											"internalType": "uint256",
											"name": "commission",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minSelfDelegation",
											"type": "uint256"
										}
									],
									"internalType": "struct Validator[]",
									"name": "validators",
									"type": "tuple[]"
								},
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "nextKey",
											"type": "bytes"
										},
										{
											"internalType": "uint64",
											"name": "total",
											"type": "uint64"
										}
									],
									"internalType": "struct PageResponse",
									"name": "pageResponse",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Evmos Team",
						"custom:address": "0x0000000000000000000000000000000000000800",
						"details": "The interface through which solidity contracts will interact with staking. We follow this same interface including four-byte function selectors, in the precompile that wraps the pallet.",
						"events": {
							"AllowanceChange(address,address,string[],uint256[])": {
								"details": "This event is emitted when the allowance of a spender is changed by a call to the decrease or increase allowance method. The values field specifies the new allowances and the methods field holds the information for which methods the approval was set.",
								"params": {
									"methods": "The message type URLs of the methods for which the approval is set.",
									"owner": "The owner of the tokens.",
									"spender": "The address which will spend the funds.",
									"values": "The amounts of tokens approved to be spent."
								}
							},
							"Approval(address,address,string[],uint256)": {
								"details": "This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.",
								"params": {
									"methods": "The message type URLs of the methods for which the approval is set.",
									"owner": "The owner of the tokens.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens approved to be spent."
								}
							},
							"CancelUnbondingDelegation(address,string,uint256,uint256)": {
								"details": "CancelUnbondingDelegation defines an Event emitted when a given amount of tokens that are in the process of unbonding from the validator address are bonded again.",
								"params": {
									"amount": "The amount of Coin that was in the unbonding process which is to be cancelled",
									"creationHeight": "The block height at which the unbonding of a delegation was initiated",
									"delegatorAddress": "The address of the delegator",
									"validatorAddress": "The address of the validator"
								}
							},
							"Delegate(address,string,uint256,uint256)": {
								"details": "Delegate defines an Event emitted when a given amount of tokens are delegated from the delegator address to the validator address.",
								"params": {
									"amount": "The amount of Coin being delegated",
									"delegatorAddress": "The address of the delegator",
									"newShares": "The new delegation shares being held",
									"validatorAddress": "The address of the validator"
								}
							},
							"Redelegate(address,string,string,uint256,uint256)": {
								"details": "Redelegate defines an Event emitted when a given amount of tokens are redelegated from the source validator address to the destination validator address.",
								"params": {
									"amount": "The amount of Coin being redelegated",
									"completionTime": "The time at which the redelegation is completed",
									"delegatorAddress": "The address of the delegator",
									"validatorDstAddress": "The address of the validator to which the delegation is directed",
									"validatorSrcAddress": "The address of the validator from which the delegation is retracted"
								}
							},
							"Unbond(address,string,uint256,uint256)": {
								"details": "Unbond defines an Event emitted when a given amount of tokens are unbonded from the validator address to the delegator address.",
								"params": {
									"amount": "The amount of Coin being unbonded",
									"completionTime": "The time at which the unbonding is completed",
									"delegatorAddress": "The address of the delegator",
									"validatorAddress": "The address of the validator"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address,string)": {
								"details": "Returns the remaining number of tokens that spender will be allowed to spend on behalf of the owner through IBC transfer methods or staking. This is zero by default.",
								"params": {
									"method": "The message type URL of the methods for which the approval should be queried.",
									"owner": "The address of the account owning tokens.",
									"spender": "The address of the account able to transfer the tokens."
								},
								"returns": {
									"remaining": "The remaining number of tokens available to be spent."
								}
							},
							"approve(address,uint256,string[])": {
								"details": "Approves a list of Cosmos or IBC transactions with a specific amount of tokens.",
								"params": {
									"amount": "The amount of tokens to be spent.",
									"methods": "The message type URLs of the methods to approve.",
									"spender": "The address which will spend the funds."
								},
								"returns": {
									"approved": "Boolean value to indicate if the approval was successful."
								}
							},
							"cancelUnbondingDelegation(address,string,uint256,uint256)": {
								"details": "Allows delegators to cancel the unbondingDelegation entry and to delegate back to a previous validator.",
								"params": {
									"amount": "The amount of the Coin",
									"creationHeight": "The height at which the unbonding took place",
									"delegatorAddress": "The address of the delegator",
									"validatorAddress": "The address of the validator"
								},
								"returns": {
									"completionTime": "The time when the cancellation of the unbonding delegation is completed"
								}
							},
							"decreaseAllowance(address,uint256,string[])": {
								"details": "Decreases the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.",
								"params": {
									"amount": "The amount of tokens to be spent.",
									"methods": "The message type URLs of the methods to approve.",
									"spender": "The address which will spend the funds."
								},
								"returns": {
									"approved": "Boolean value to indicate if the approval was successful."
								}
							},
							"delegate(address,string,uint256)": {
								"details": "Defines a method for performing a delegation of coins from a delegator to a validator.",
								"params": {
									"amount": "The amount of the Coin to be delegated to the validator",
									"delegatorAddress": "The address of the delegator",
									"validatorAddress": "The address of the validator"
								}
							},
							"delegation(address,string)": {
								"details": "Queries the given amount of the bond denomination to a validator.",
								"params": {
									"delegatorAddress": "The address of the delegator.",
									"validatorAddress": "The address of the validator."
								},
								"returns": {
									"balance": "The amount in Coin, that the delegator has delegated to the given validator.",
									"shares": "The amount of shares, that the delegator has received."
								}
							},
							"increaseAllowance(address,uint256,string[])": {
								"details": "Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.",
								"params": {
									"amount": "The amount of tokens to be spent.",
									"methods": "The message type URLs of the methods to approve.",
									"spender": "The address which will spend the funds."
								},
								"returns": {
									"approved": "Boolean value to indicate if the approval was successful."
								}
							},
							"redelegate(address,string,string,uint256)": {
								"details": "Defines a method for performing a redelegation of coins from a delegator and source validator to a destination validator.",
								"params": {
									"amount": "The amount to be redelegated to the validator",
									"delegatorAddress": "The address of the delegator",
									"validatorDstAddress": "The validator to which the redelegation is destined",
									"validatorSrcAddress": "The validator from which the redelegation is initiated"
								},
								"returns": {
									"completionTime": "The time when the redelegation is completed"
								}
							},
							"redelegation(address,string,string)": {
								"details": "Queries all redelegations from a source to a destination validator for a given delegator.",
								"params": {
									"delegatorAddress": "The address of the delegator.",
									"dstValidatorAddress": "Defines the validator address to redelegate to.",
									"srcValidatorAddress": "Defines the validator address to redelegate from."
								},
								"returns": {
									"entries": "The active redelegations for the given delegator, source and destination validator combination."
								}
							},
							"redelegations(address,string,string,(bytes,uint64,uint64,bool,bool))": {
								"details": "Queries all redelegations from a source to to a destination validator for a given delegator in a specified pagination manner.",
								"params": {
									"delegatorAddress": "The address of the delegator.",
									"dstValidatorAddress": "Defines the validator address to redelegate to.",
									"pageRequest": "Defines an optional pagination for the request.",
									"srcValidatorAddress": "Defines the validator address to redelegate from."
								},
								"returns": {
									"response": "Holds the redelegations for the given delegator, source and destination validator combination."
								}
							},
							"unbondingDelegation(address,string)": {
								"details": "Returns the delegation shares and coins, that are currently unbonding for a given delegator and validator pair.",
								"params": {
									"delegatorAddress": "The address of the delegator.",
									"validatorAddress": "The address of the validator."
								},
								"returns": {
									"entries": "The delegations that are currently unbonding."
								}
							},
							"undelegate(address,string,uint256)": {
								"details": "Defines a method for performing an undelegation from a delegate and a validator.",
								"params": {
									"amount": "The amount to be undelegated from the validator",
									"delegatorAddress": "The address of the delegator",
									"validatorAddress": "The address of the validator"
								},
								"returns": {
									"completionTime": "The time when the undelegation is completed"
								}
							},
							"validator(string)": {
								"details": "Queries validator info for a given validator address.",
								"params": {
									"validatorAddress": "The address of the validator."
								},
								"returns": {
									"validators": "The validator info for the given validator address."
								}
							},
							"validators(string,(bytes,uint64,uint64,bool,bool))": {
								"details": "Queries all validators that match the given status.",
								"params": {
									"pageRequest": "Defines an optional pagination for the request.",
									"status": "Enables to query for validators matching a given status."
								}
							}
						},
						"title": "Staking Precompiled Contract",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address,string)": "fc08930c",
							"approve(address,uint256,string[])": "b6039895",
							"cancelUnbondingDelegation(address,string,uint256,uint256)": "12d58dfe",
							"decreaseAllowance(address,uint256,string[])": "f007d286",
							"delegate(address,string,uint256)": "53266bbb",
							"delegation(address,string)": "241774e6",
							"increaseAllowance(address,uint256,string[])": "a386a63c",
							"redelegate(address,string,string,uint256)": "54b826f5",
							"redelegation(address,string,string)": "7d9f939c",
							"redelegations(address,string,string,(bytes,uint64,uint64,bool,bool))": "10a2851c",
							"unbondingDelegation(address,string)": "a03ffee1",
							"undelegate(address,string,uint256)": "3edab33c",
							"validator(string)": "0bc82a17",
							"validators(string,(bytes,uint64,uint64,bool,bool))": "186b2167"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"AllowanceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creationHeight\",\"type\":\"uint256\"}],\"name\":\"CancelUnbondingDelegation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newShares\",\"type\":\"uint256\"}],\"name\":\"Delegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorSrcAddress\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorDstAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"completionTime\",\"type\":\"uint256\"}],\"name\":\"Redelegate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"completionTime\",\"type\":\"uint256\"}],\"name\":\"Unbond\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creationHeight\",\"type\":\"uint256\"}],\"name\":\"cancelUnbondingDelegation\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"delegate\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Coin\",\"name\":\"balance\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"methods\",\"type\":\"string[]\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorSrcAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"validatorDstAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"redelegate\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"srcValidatorAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dstValidatorAddress\",\"type\":\"string\"}],\"name\":\"redelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"creationHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesDst\",\"type\":\"uint256\"}],\"internalType\":\"struct RedelegationEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"srcValidatorAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"dstValidatorAddress\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"offset\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"limit\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"countTotal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reverse\",\"type\":\"bool\"}],\"internalType\":\"struct PageRequest\",\"name\":\"pageRequest\",\"type\":\"tuple\"}],\"name\":\"redelegations\",\"outputs\":[{\"components\":[{\"components\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"creationHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesDst\",\"type\":\"uint256\"}],\"internalType\":\"struct RedelegationEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Redelegation\",\"name\":\"redelegation\",\"type\":\"tuple\"},{\"components\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"creationHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesDst\",\"type\":\"uint256\"}],\"internalType\":\"struct RedelegationEntry\",\"name\":\"redelegationEntry\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct RedelegationEntryResponse[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"internalType\":\"struct RedelegationResponse\",\"name\":\"response\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"unbondingDelegation\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"creationHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct UnbondingDelegationEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegatorAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"undelegate\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"completionTime\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"validatorAddress\",\"type\":\"string\"}],\"name\":\"validator\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"operatorAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consensusPubkey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"jailed\",\"type\":\"bool\"},{\"internalType\":\"enum BondStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegatorShares\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"int64\",\"name\":\"unbondingHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"unbondingTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSelfDelegation\",\"type\":\"uint256\"}],\"internalType\":\"struct Validator[]\",\"name\":\"validators\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"status\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"key\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"offset\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"limit\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"countTotal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"reverse\",\"type\":\"bool\"}],\"internalType\":\"struct PageRequest\",\"name\":\"pageRequest\",\"type\":\"tuple\"}],\"name\":\"validators\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"operatorAddress\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"consensusPubkey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"jailed\",\"type\":\"bool\"},{\"internalType\":\"enum BondStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"delegatorShares\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"int64\",\"name\":\"unbondingHeight\",\"type\":\"int64\"},{\"internalType\":\"int64\",\"name\":\"unbondingTime\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"commission\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minSelfDelegation\",\"type\":\"uint256\"}],\"internalType\":\"struct Validator[]\",\"name\":\"validators\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"nextKey\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"total\",\"type\":\"uint64\"}],\"internalType\":\"struct PageResponse\",\"name\":\"pageResponse\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Evmos Team\",\"custom:address\":\"0x0000000000000000000000000000000000000800\",\"details\":\"The interface through which solidity contracts will interact with staking. We follow this same interface including four-byte function selectors, in the precompile that wraps the pallet.\",\"events\":{\"AllowanceChange(address,address,string[],uint256[])\":{\"details\":\"This event is emitted when the allowance of a spender is changed by a call to the decrease or increase allowance method. The values field specifies the new allowances and the methods field holds the information for which methods the approval was set.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\",\"values\":\"The amounts of tokens approved to be spent.\"}},\"Approval(address,address,string[],uint256)\":{\"details\":\"This event is emitted when the allowance of a spender is set by a call to the approve method. The value field specifies the new allowance and the methods field holds the information for which methods the approval was set.\",\"params\":{\"methods\":\"The message type URLs of the methods for which the approval is set.\",\"owner\":\"The owner of the tokens.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens approved to be spent.\"}},\"CancelUnbondingDelegation(address,string,uint256,uint256)\":{\"details\":\"CancelUnbondingDelegation defines an Event emitted when a given amount of tokens that are in the process of unbonding from the validator address are bonded again.\",\"params\":{\"amount\":\"The amount of Coin that was in the unbonding process which is to be cancelled\",\"creationHeight\":\"The block height at which the unbonding of a delegation was initiated\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"}},\"Delegate(address,string,uint256,uint256)\":{\"details\":\"Delegate defines an Event emitted when a given amount of tokens are delegated from the delegator address to the validator address.\",\"params\":{\"amount\":\"The amount of Coin being delegated\",\"delegatorAddress\":\"The address of the delegator\",\"newShares\":\"The new delegation shares being held\",\"validatorAddress\":\"The address of the validator\"}},\"Redelegate(address,string,string,uint256,uint256)\":{\"details\":\"Redelegate defines an Event emitted when a given amount of tokens are redelegated from the source validator address to the destination validator address.\",\"params\":{\"amount\":\"The amount of Coin being redelegated\",\"completionTime\":\"The time at which the redelegation is completed\",\"delegatorAddress\":\"The address of the delegator\",\"validatorDstAddress\":\"The address of the validator to which the delegation is directed\",\"validatorSrcAddress\":\"The address of the validator from which the delegation is retracted\"}},\"Unbond(address,string,uint256,uint256)\":{\"details\":\"Unbond defines an Event emitted when a given amount of tokens are unbonded from the validator address to the delegator address.\",\"params\":{\"amount\":\"The amount of Coin being unbonded\",\"completionTime\":\"The time at which the unbonding is completed\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address,string)\":{\"details\":\"Returns the remaining number of tokens that spender will be allowed to spend on behalf of the owner through IBC transfer methods or staking. This is zero by default.\",\"params\":{\"method\":\"The message type URL of the methods for which the approval should be queried.\",\"owner\":\"The address of the account owning tokens.\",\"spender\":\"The address of the account able to transfer the tokens.\"},\"returns\":{\"remaining\":\"The remaining number of tokens available to be spent.\"}},\"approve(address,uint256,string[])\":{\"details\":\"Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"cancelUnbondingDelegation(address,string,uint256,uint256)\":{\"details\":\"Allows delegators to cancel the unbondingDelegation entry and to delegate back to a previous validator.\",\"params\":{\"amount\":\"The amount of the Coin\",\"creationHeight\":\"The height at which the unbonding took place\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"completionTime\":\"The time when the cancellation of the unbonding delegation is completed\"}},\"decreaseAllowance(address,uint256,string[])\":{\"details\":\"Decreases the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"delegate(address,string,uint256)\":{\"details\":\"Defines a method for performing a delegation of coins from a delegator to a validator.\",\"params\":{\"amount\":\"The amount of the Coin to be delegated to the validator\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"}},\"delegation(address,string)\":{\"details\":\"Queries the given amount of the bond denomination to a validator.\",\"params\":{\"delegatorAddress\":\"The address of the delegator.\",\"validatorAddress\":\"The address of the validator.\"},\"returns\":{\"balance\":\"The amount in Coin, that the delegator has delegated to the given validator.\",\"shares\":\"The amount of shares, that the delegator has received.\"}},\"increaseAllowance(address,uint256,string[])\":{\"details\":\"Increase the allowance of a given spender by a specific amount of tokens for IBC transfer methods or staking.\",\"params\":{\"amount\":\"The amount of tokens to be spent.\",\"methods\":\"The message type URLs of the methods to approve.\",\"spender\":\"The address which will spend the funds.\"},\"returns\":{\"approved\":\"Boolean value to indicate if the approval was successful.\"}},\"redelegate(address,string,string,uint256)\":{\"details\":\"Defines a method for performing a redelegation of coins from a delegator and source validator to a destination validator.\",\"params\":{\"amount\":\"The amount to be redelegated to the validator\",\"delegatorAddress\":\"The address of the delegator\",\"validatorDstAddress\":\"The validator to which the redelegation is destined\",\"validatorSrcAddress\":\"The validator from which the redelegation is initiated\"},\"returns\":{\"completionTime\":\"The time when the redelegation is completed\"}},\"redelegation(address,string,string)\":{\"details\":\"Queries all redelegations from a source to a destination validator for a given delegator.\",\"params\":{\"delegatorAddress\":\"The address of the delegator.\",\"dstValidatorAddress\":\"Defines the validator address to redelegate to.\",\"srcValidatorAddress\":\"Defines the validator address to redelegate from.\"},\"returns\":{\"entries\":\"The active redelegations for the given delegator, source and destination validator combination.\"}},\"redelegations(address,string,string,(bytes,uint64,uint64,bool,bool))\":{\"details\":\"Queries all redelegations from a source to to a destination validator for a given delegator in a specified pagination manner.\",\"params\":{\"delegatorAddress\":\"The address of the delegator.\",\"dstValidatorAddress\":\"Defines the validator address to redelegate to.\",\"pageRequest\":\"Defines an optional pagination for the request.\",\"srcValidatorAddress\":\"Defines the validator address to redelegate from.\"},\"returns\":{\"response\":\"Holds the redelegations for the given delegator, source and destination validator combination.\"}},\"unbondingDelegation(address,string)\":{\"details\":\"Returns the delegation shares and coins, that are currently unbonding for a given delegator and validator pair.\",\"params\":{\"delegatorAddress\":\"The address of the delegator.\",\"validatorAddress\":\"The address of the validator.\"},\"returns\":{\"entries\":\"The delegations that are currently unbonding.\"}},\"undelegate(address,string,uint256)\":{\"details\":\"Defines a method for performing an undelegation from a delegate and a validator.\",\"params\":{\"amount\":\"The amount to be undelegated from the validator\",\"delegatorAddress\":\"The address of the delegator\",\"validatorAddress\":\"The address of the validator\"},\"returns\":{\"completionTime\":\"The time when the undelegation is completed\"}},\"validator(string)\":{\"details\":\"Queries validator info for a given validator address.\",\"params\":{\"validatorAddress\":\"The address of the validator.\"},\"returns\":{\"validators\":\"The validator info for the given validator address.\"}},\"validators(string,(bytes,uint64,uint64,bool,bool))\":{\"details\":\"Queries all validators that match the given status.\",\"params\":{\"pageRequest\":\"Defines an optional pagination for the request.\",\"status\":\"Enables to query for validators matching a given status.\"}}},\"title\":\"Staking Precompiled Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"gist-e259420aec8d85ea2219e4154536ad35/contracts/Staking.sol\":\"StakingI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"gist-e259420aec8d85ea2219e4154536ad35/contracts/Authorization.sol\":{\"keccak256\":\"0xf77a5f9eb42b7f546d2beeb49e1c120f0491620fbf1402a687ac34a275c6cb05\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://166523692d8779b98a4963ab4a9f5a9aeb4ade68803051b88816de82496ffda7\",\"dweb:/ipfs/QmYCndS9oDJ3cF7A5admkYN2SyZzBg6129DBjvYKSd8Bnv\"]},\"gist-e259420aec8d85ea2219e4154536ad35/contracts/Staking.sol\":{\"keccak256\":\"0xb374184c61718f7fff601b0167dd98343ad4f093d98eaa3747f66394b479c9d3\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://fe08fb85de5fb7234b2fdddeb9edb0fb5aea8b1f707830b049ccfa6b3b83a036\",\"dweb:/ipfs/QmV9Ae198P1cYNkPWiu2TmHfbN5qtk1cjuNMSqDbkMEgFX\"]},\"gist-e259420aec8d85ea2219e4154536ad35/contracts/Types.sol\":{\"keccak256\":\"0x2280bf7e63e011c5263d33ae3cf64673e27ee08226116a5ae289a05c026e5cc8\",\"license\":\"LGPL-v3\",\"urls\":[\"bzz-raw://e5c63f09b85147d1343d16c828110369fea9535c1ad69d7855f1f6f04208eaa7\",\"dweb:/ipfs/QmQFbYkU3ao25UjSYDqUUP1sPEzFJqJnT2xAgfo5g2ghmA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1127
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 1128,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1127,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								1127
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": []
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1127
						],
						"Pausable": [
							220
						]
					},
					"id": 221,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 221,
							"sourceUnit": 1128,
							"src": "130:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "Context",
										"nameLocations": [
											"632:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1127,
										"src": "632:7:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:1"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 220,
							"linearizedBaseContracts": [
								220,
								1127
							],
							"name": "Pausable",
							"nameLocation": "620:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 123,
									"name": "Paused",
									"nameLocation": "730:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "737:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:1"
									},
									"src": "724:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 128,
									"name": "Unpaused",
									"nameLocation": "841:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "850:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:1"
									},
									"src": "835:32:1"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 220,
									"src": "873:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 129,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "986:32:1",
										"statements": [
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 134,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "996:15:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 139,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:1"
									},
									"scope": 220,
									"src": "972:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "1229:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 142,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1239:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:1"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 147,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:1"
									},
									"src": "1204:72:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1476:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 150,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "1486:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:1"
											},
											{
												"id": 153,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:1"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 155,
									"name": "whenPaused",
									"nameLocation": "1463:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:1"
									},
									"src": "1454:66:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1668:31:1",
										"statements": [
											{
												"expression": {
													"id": 161,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "1685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 160,
												"id": 162,
												"nodeType": "Return",
												"src": "1678:14:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1662:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:1"
									},
									"scope": 220,
									"src": "1615:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "1818:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "1837:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:1",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:1"
									},
									"scope": 220,
									"src": "1767:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "1993:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 181,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2011:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:1"
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:1",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:1"
									},
									"scope": 220,
									"src": "1945:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2235:66:1",
										"statements": [
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 198,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "2281:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 197,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2274:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "EmitStatement",
												"src": "2269:25:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 191,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 190,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2221:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:1"
									},
									"scope": 220,
									"src": "2186:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "2481:69:1",
										"statements": [
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 209,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2491:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 214,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "2530:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 213,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "2521:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "EmitStatement",
												"src": "2516:27:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 207,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 206,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 155,
												"src": "2470:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:1"
									},
									"scope": 220,
									"src": "2433:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 221,
							"src": "602:1950:1",
							"usedErrors": []
						}
					],
					"src": "105:2448:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							285
						]
					},
					"id": 286,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 223,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 285,
							"linearizedBaseContracts": [
								285
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 226,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 285,
									"src": "1676:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 224,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 225,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 229,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 285,
									"src": "1723:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 227,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 228,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 231,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 285,
									"src": "1767:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 230,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1811:39:2",
										"statements": [
											{
												"expression": {
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 234,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "1821:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 235,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1831:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:2"
											}
										]
									},
									"id": 239,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:2"
									},
									"returnParameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:2"
									},
									"scope": 285,
									"src": "1797:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "2251:79:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 242,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 265,
														"src": "2261:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:2"
											},
											{
												"id": 245,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 246,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "2303:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:2"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 250,
									"name": "nonReentrant",
									"nameLocation": "2236:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:2"
									},
									"src": "2227:103:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2375:248:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 254,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 231,
																"src": "2468:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 255,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2479:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 253,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:2"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 260,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "2598:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 261,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "2608:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:2"
											}
										]
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:2"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:2"
									},
									"scope": 285,
									"src": "2336:287:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "2667:171:2",
										"statements": [
											{
												"expression": {
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 268,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "2809:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 269,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "2819:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 271,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:2"
											}
										]
									},
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:2"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:2"
									},
									"scope": 285,
									"src": "2629:209:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "3081:43:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 279,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "3098:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 280,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "3109:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 278,
												"id": 282,
												"nodeType": "Return",
												"src": "3091:26:2"
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:2",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:2"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "3075:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 276,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:2"
									},
									"scope": 285,
									"src": "3017:107:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 286,
							"src": "888:2238:2",
							"usedErrors": []
						}
					],
					"src": "112:3015:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							363
						]
					},
					"id": 364,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 287,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 363,
							"linearizedBaseContracts": [
								363
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 297,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 306,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 312,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 363,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 363,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 330,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 363,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 363,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 347,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 363,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2668:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2682:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:3"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 359,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:3"
									},
									"scope": 363,
									"src": "2646:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 364,
							"src": "202:2534:3",
							"usedErrors": []
						}
					],
					"src": "106:2631:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							399
						]
					},
					"id": 400,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 365,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "123:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 366,
								"nodeType": "StructuredDocumentation",
								"src": "148:480:4",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 399,
							"linearizedBaseContracts": [
								399
							],
							"name": "IERC20Permit",
							"nameLocation": "639:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "658:792:4",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1464:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1488:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1480:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1511:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1503:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1536:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1528:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1559:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1551:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1583:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1577:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 376,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1577:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1602:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1594:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 378,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1621:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1613:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 380,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:158:4"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1637:0:4"
									},
									"scope": 399,
									"src": "1455:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1644:294:4",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1952:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1967:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1959:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:4"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1997:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:9:4"
									},
									"scope": 399,
									"src": "1943:63:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "2012:128:4",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 398,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2207:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2223:2:4"
									},
									"returnParameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "2249:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 395,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2249:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2248:9:4"
									},
									"scope": 399,
									"src": "2198:60:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 400,
							"src": "629:1631:4",
							"usedErrors": []
						}
					],
					"src": "123:2138:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1105
						],
						"IERC20": [
							363
						],
						"IERC20Permit": [
							399
						],
						"SafeERC20": [
							775
						]
					},
					"id": 776,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 401,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 776,
							"sourceUnit": 364,
							"src": "140:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 403,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 776,
							"sourceUnit": 400,
							"src": "164:40:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 404,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 776,
							"sourceUnit": 1106,
							"src": "205:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 405,
								"nodeType": "StructuredDocumentation",
								"src": "243:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 775,
							"linearizedBaseContracts": [
								775
							],
							"name": "SafeERC20",
							"nameLocation": "709:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 408,
									"libraryName": {
										"id": 406,
										"name": "Address",
										"nameLocations": [
											"731:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1105,
										"src": "731:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "725:26:5",
									"typeName": {
										"id": 407,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "743:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "1013:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 420,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "1043:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 423,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 412,
																			"src": "1073:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$363",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1079:8:5",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 330,
																		"src": "1073:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1088:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1073:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 426,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "1098:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 427,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "1102:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 421,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1050:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1054:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1050:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1050:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 419,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "1023:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1023:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "1023:86:5"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "757:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "950:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "970:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "963:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 411,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 410,
														"name": "IERC20",
														"nameLocations": [
															"963:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "963:6:5"
													},
													"referencedDeclaration": 363,
													"src": "963:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "985:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "977:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "997:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "989:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "962:41:5"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:0:5"
									},
									"scope": 775,
									"src": "941:175:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "1445:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "1475:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 449,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 436,
																			"src": "1505:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$363",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1511:12:5",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 362,
																		"src": "1505:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1524:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1505:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 452,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "1534:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 453,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 440,
																	"src": "1540:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 454,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "1544:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 447,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1482:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 448,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1486:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1482:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1482:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 445,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "1455:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1455:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "1455:96:5"
											}
										]
									},
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "1122:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1364:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1388:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1381:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 435,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 434,
														"name": "IERC20",
														"nameLocations": [
															"1381:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "1381:6:5"
													},
													"referencedDeclaration": 363,
													"src": "1381:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1403:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1395:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1395:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1417:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1409:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1429:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1421:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:55:5"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:0:5"
									},
									"scope": 775,
									"src": "1355:203:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "1894:497:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 471,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "2143:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2152:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2143:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 474,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2142:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 479,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2183:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$775",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$775",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 478,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2175:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 477,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2175:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 480,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2175:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 481,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 465,
																					"src": "2190:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 475,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 463,
																					"src": "2159:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$363",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 476,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2165:9:5",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 340,
																				"src": "2159:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 482,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2159:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2202:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2159:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 485,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2158:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2142:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2218:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 470,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2121:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2121:163:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "2121:163:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 491,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "2314:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 494,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 463,
																			"src": "2344:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$363",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2350:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 350,
																		"src": "2344:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2358:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2344:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 497,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "2368:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 498,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "2377:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 492,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2321:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2325:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2321:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2321:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 490,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "2294:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2294:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "2294:90:5"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "1564:249:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1827:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1846:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1839:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 461,
														"name": "IERC20",
														"nameLocations": [
															"1839:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "1839:6:5"
													},
													"referencedDeclaration": 363,
													"src": "1839:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1861:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1853:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1878:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "1870:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:46:5"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:0:5"
									},
									"scope": 775,
									"src": "1818:573:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "2668:194:5",
										"statements": [
											{
												"assignments": [
													515
												],
												"declarations": [
													{
														"constant": false,
														"id": 515,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2686:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 539,
														"src": "2678:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 514,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2678:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 524,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 520,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2725:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$775",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$775",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2717:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 518,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2717:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2717:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "2732:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 516,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "2701:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															}
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2707:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 340,
														"src": "2701:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2701:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2678:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 526,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "2770:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 529,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 507,
																			"src": "2800:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$363",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2806:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 350,
																		"src": "2800:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2814:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2800:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 532,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "2824:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 533,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 515,
																		"src": "2833:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 534,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 511,
																		"src": "2848:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2833:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 527,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2777:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2781:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2777:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2777:77:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 525,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "2750:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2750:105:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "2750:105:5"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "2397:180:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2591:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2620:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2613:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 506,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 505,
														"name": "IERC20",
														"nameLocations": [
															"2613:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "2613:6:5"
													},
													"referencedDeclaration": 363,
													"src": "2613:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2635:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2627:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2627:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "2644:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:46:5"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:0:5"
									},
									"scope": 775,
									"src": "2582:280:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "3139:321:5",
										"statements": [
											{
												"id": 583,
												"nodeType": "UncheckedBlock",
												"src": "3149:305:5",
												"statements": [
													{
														"assignments": [
															552
														],
														"declarations": [
															{
																"constant": false,
																"id": 552,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "3181:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 583,
																"src": "3173:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 551,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3173:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 561,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 557,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3220:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$775",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$775",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3212:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 555,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3212:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3212:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 559,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "3227:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 553,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "3196:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$363",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3202:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 340,
																"src": "3196:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3196:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3173:62:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 563,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 552,
																		"src": "3257:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 564,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 548,
																		"src": "3273:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3257:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3280:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 562,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "3249:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3249:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 568,
														"nodeType": "ExpressionStatement",
														"src": "3249:75:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 570,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "3358:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$363",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 573,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 544,
																					"src": "3388:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$363",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 574,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3394:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 350,
																				"src": "3388:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3402:8:5",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "3388:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 576,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "3412:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 577,
																				"name": "oldAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 552,
																				"src": "3421:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 578,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 548,
																				"src": "3436:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3421:20:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 571,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "3365:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "3369:18:5",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "3365:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3365:77:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$363",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 569,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "3338:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3338:105:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 582,
														"nodeType": "ExpressionStatement",
														"src": "3338:105:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "2868:180:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3062:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3091:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3084:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 543,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 542,
														"name": "IERC20",
														"nameLocations": [
															"3084:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "3084:6:5"
													},
													"referencedDeclaration": 363,
													"src": "3084:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3106:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3098:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3098:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3123:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "3115:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3115:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:46:5"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3139:0:5"
									},
									"scope": 775,
									"src": "3053:407:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "3833:333:5",
										"statements": [
											{
												"assignments": [
													597
												],
												"declarations": [
													{
														"constant": false,
														"id": 597,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3856:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 631,
														"src": "3843:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 596,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3843:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 606,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 600,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "3894:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$363",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3900:7:5",
																"memberName": "approve",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 350,
																"src": "3894:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3908:8:5",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "3894:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"id": 603,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "3918:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 604,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "3927:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 598,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3871:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3875:18:5",
														"memberName": "encodeWithSelector",
														"nodeType": "MemberAccess",
														"src": "3871:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes4) pure returns (bytes memory)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3871:62:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3843:90:5"
											},
											{
												"condition": {
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3948:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 608,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 589,
																"src": "3973:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$363",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 609,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "3980:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$363",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 607,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "3949:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3949:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 630,
												"nodeType": "IfStatement",
												"src": "3944:216:5",
												"trueBody": {
													"id": 629,
													"nodeType": "Block",
													"src": "3995:165:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 613,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 589,
																		"src": "4029:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$363",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"expression": {
																						"id": 616,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 589,
																						"src": "4059:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$363",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 617,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4065:7:5",
																					"memberName": "approve",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 350,
																					"src": "4059:13:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																						"typeString": "function (address,uint256) external returns (bool)"
																					}
																				},
																				"id": 618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4073:8:5",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "4059:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			},
																			{
																				"id": 619,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 591,
																				"src": "4083:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 620,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4092:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 614,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4036:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4040:18:5",
																			"memberName": "encodeWithSelector",
																			"nodeType": "MemberAccess",
																			"src": "4036:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (bytes4) pure returns (bytes memory)"
																			}
																		},
																		"id": 621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4036:58:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$363",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 612,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "4009:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4009:86:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 623,
															"nodeType": "ExpressionStatement",
															"src": "4009:86:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 625,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 589,
																		"src": "4129:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$363",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 626,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 597,
																		"src": "4136:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$363",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 624,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "4109:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4109:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 628,
															"nodeType": "ExpressionStatement",
															"src": "4109:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "3466:285:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\n 0 before setting it to a non-zero value."
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3765:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3785:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3778:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 588,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 587,
														"name": "IERC20",
														"nameLocations": [
															"3778:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "3778:6:5"
													},
													"referencedDeclaration": 363,
													"src": "3778:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3800:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3792:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3792:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3817:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3809:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3809:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3777:46:5"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3833:0:5"
									},
									"scope": 775,
									"src": "3756:410:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "4533:257:5",
										"statements": [
											{
												"assignments": [
													654
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "4551:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 688,
														"src": "4543:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 653,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 659,
												"initialValue": {
													"arguments": [
														{
															"id": 657,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4578:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 655,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4565:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$399",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4571:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 392,
														"src": "4565:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4565:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:41:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4607:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 664,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "4614:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "4623:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 666,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "4630:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 667,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "4640:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 668,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "4643:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 669,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "4646:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 660,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4594:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$399",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4600:6:5",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 384,
														"src": "4594:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4594:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "4594:54:5"
											},
											{
												"assignments": [
													673
												],
												"declarations": [
													{
														"constant": false,
														"id": 673,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "4666:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 688,
														"src": "4658:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 672,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4658:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 678,
												"initialValue": {
													"arguments": [
														{
															"id": 676,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4692:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 674,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4679:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$399",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4685:6:5",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 392,
														"src": "4679:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4679:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4658:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 680,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 673,
																"src": "4716:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 681,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "4730:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4744:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "4730:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4716:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4747:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 679,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4708:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4708:75:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "4708:75:5"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "4172:141:5",
										"text": " @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\n Revert on invalid signature."
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "4327:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4360:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4347:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$399",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 634,
														"name": "IERC20Permit",
														"nameLocations": [
															"4347:12:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 399,
														"src": "4347:12:5"
													},
													"referencedDeclaration": 399,
													"src": "4347:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$399",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4383:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4375:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4375:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4406:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4398:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4431:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4423:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4454:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4446:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "4478:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4472:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 645,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4472:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4497:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4489:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 647,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "4516:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "4508:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 649,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4508:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4337:186:5"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4533:0:5"
									},
									"scope": 775,
									"src": "4318:472:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "5243:572:5",
										"statements": [
											{
												"assignments": [
													699
												],
												"declarations": [
													{
														"constant": false,
														"id": 699,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5605:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 725,
														"src": "5592:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 698,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5592:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 708,
												"initialValue": {
													"arguments": [
														{
															"id": 705,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "5646:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5652:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 702,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "5626:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$363",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$363",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5618:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 700,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5618:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5618:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5633:12:5",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 865,
														"src": "5618:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5618:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5592:95:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 710,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 699,
																		"src": "5705:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5716:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5705:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5726:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5705:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 716,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 699,
																		"src": "5742:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5755:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				},
																				"typeName": {
																					"id": 717,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "5755:4:5",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"id": 719,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5754:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_type$_t_bool_$",
																			"typeString": "type(bool)"
																		}
																	],
																	"expression": {
																		"id": 714,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "5731:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5735:6:5",
																	"memberName": "decode",
																	"nodeType": "MemberAccess",
																	"src": "5731:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5731:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5705:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5763:44:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															},
															"value": "SafeERC20: ERC20 operation did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
															}
														],
														"id": 709,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5697:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5697:111:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "5697:111:5"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "4796:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "5182:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5209:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "5202:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 692,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 691,
														"name": "IERC20",
														"nameLocations": [
															"5202:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "5202:6:5"
													},
													"referencedDeclaration": 363,
													"src": "5202:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5229:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "5216:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 694,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5216:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5201:33:5"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5243:0:5"
									},
									"scope": 775,
									"src": "5173:642:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 773,
										"nodeType": "Block",
										"src": "6405:505:5",
										"statements": [
											{
												"assignments": [
													738,
													740
												],
												"declarations": [
													{
														"constant": false,
														"id": 738,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6706:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 773,
														"src": "6701:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 737,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6701:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 740,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6728:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 773,
														"src": "6715:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 739,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6715:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 748,
												"initialValue": {
													"arguments": [
														{
															"id": 746,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "6762:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 743,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "6750:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$363",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$363",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6742:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 741,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6742:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6742:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6757:4:5",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "6742:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6742:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6700:67:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 749,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "6796:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 750,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 740,
																				"src": "6808:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6819:6:5",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "6808:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6829:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "6808:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 756,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 740,
																				"src": "6845:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 758,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "6858:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 757,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "6858:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 759,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "6857:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 754,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "6834:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6838:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "6834:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6834:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6808:56:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 762,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6807:58:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "6796:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 768,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "6896:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$363",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$363",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6888:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 766,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6888:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6888:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 764,
																"name": "Address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "6869:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_Address_$1105_$",
																	"typeString": "type(library Address)"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6877:10:5",
															"memberName": "isContract",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 793,
															"src": "6869:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6869:34:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6796:107:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 736,
												"id": 772,
												"nodeType": "Return",
												"src": "6777:126:5"
											}
										]
									},
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "5821:490:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "6325:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6356:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "6349:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$363",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 729,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 728,
														"name": "IERC20",
														"nameLocations": [
															"6349:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 363,
														"src": "6349:6:5"
													},
													"referencedDeclaration": 363,
													"src": "6349:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6376:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "6363:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 731,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6363:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6348:33:5"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "6399:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 734,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6399:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:6:5"
									},
									"scope": 775,
									"src": "6316:594:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 776,
							"src": "701:6211:5",
							"usedErrors": []
						}
					],
					"src": "115:6798:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1105
						]
					},
					"id": 1106,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 777,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 778,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1105,
							"linearizedBaseContracts": [
								1105
							],
							"name": "Address",
							"nameLocation": "202:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "1478:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 786,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 781,
																"src": "1702:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 785,
												"id": 791,
												"nodeType": "Return",
												"src": "1695:30:6"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1432:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:6"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1472:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 783,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:6"
									},
									"scope": 1105,
									"src": "1412:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "2718:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 804,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1105",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1105",
																				"typeString": "library Address"
																			}
																		],
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 802,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 807,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "2761:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 801,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 811,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:6"
											},
											{
												"assignments": [
													813,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 813,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 826,
														"src": "2813:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 812,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 820,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 814,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "2831:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 816,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 798,
																"src": "2853:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 822,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "2882:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 821,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:6"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "2666:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "2693:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:6"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:6"
									},
									"scope": 1105,
									"src": "2647:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "3790:96:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 838,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "3829:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 839,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "3837:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 837,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															885,
															929
														],
														"referencedDeclaration": 929,
														"src": "3807:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 836,
												"id": 843,
												"nodeType": "Return",
												"src": "3800:79:6"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "3723:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "3739:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 831,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:6"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "3776:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 834,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:6"
									},
									"scope": 1105,
									"src": "3701:185:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "4255:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 858,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "4294:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 859,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "4302:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 861,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "4311:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 857,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															885,
															929
														],
														"referencedDeclaration": 929,
														"src": "4272:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 856,
												"id": 863,
												"nodeType": "Return",
												"src": "4265:59:6"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "4139:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "4163:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 849,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "4190:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 851,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:6"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "4241:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 854,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:6"
									},
									"scope": 1105,
									"src": "4108:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 884,
										"nodeType": "Block",
										"src": "4806:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 878,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "4845:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 879,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "4853:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 880,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "4859:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 877,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															885,
															929
														],
														"referencedDeclaration": 929,
														"src": "4823:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 876,
												"id": 883,
												"nodeType": "Return",
												"src": "4816:94:6"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "4724:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "4740:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 869,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "4759:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:6"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "4792:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 874,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:6"
									},
									"scope": 1105,
									"src": "4693:224:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "5344:267:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 902,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1105",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1105",
																				"typeString": "library Address"
																			}
																		],
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 900,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 905,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "5387:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 899,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:6"
											},
											{
												"assignments": [
													911,
													913
												],
												"declarations": [
													{
														"constant": false,
														"id": 911,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 928,
														"src": "5446:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 910,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 913,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 928,
														"src": "5460:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 912,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 920,
												"initialValue": {
													"arguments": [
														{
															"id": 918,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "5513:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 914,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "5487:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 916,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "5506:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 922,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "5562:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 923,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "5570:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 924,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "5579:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 925,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "5591:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 921,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "5535:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 898,
												"id": 927,
												"nodeType": "Return",
												"src": "5528:76:6"
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "5205:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "5229:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 889,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "5256:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "5279:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:6"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "5330:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 896,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:6"
									},
									"scope": 1105,
									"src": "5165:446:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "5888:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 940,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "5924:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "5932:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 939,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															946,
															975
														],
														"referencedDeclaration": 975,
														"src": "5905:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 938,
												"id": 944,
												"nodeType": "Return",
												"src": "5898:80:6"
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5816:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5832:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 933,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:6"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5874:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 936,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:6"
									},
									"scope": 1105,
									"src": "5788:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "6327:168:6",
										"statements": [
											{
												"assignments": [
													959,
													961
												],
												"declarations": [
													{
														"constant": false,
														"id": 959,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 974,
														"src": "6338:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 958,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 961,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 974,
														"src": "6352:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 960,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 966,
												"initialValue": {
													"arguments": [
														{
															"id": 964,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "6397:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 962,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "6379:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 968,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "6446:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "6454:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 970,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "6463:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 971,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "6475:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 967,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "6419:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 957,
												"id": 973,
												"nodeType": "Return",
												"src": "6412:76:6"
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "6206:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "6230:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 950,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "6257:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 952,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:6"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "6313:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 955,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:6"
									},
									"scope": 1105,
									"src": "6169:326:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 991,
										"nodeType": "Block",
										"src": "6771:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 986,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "6809:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 987,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "6817:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 985,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															992,
															1021
														],
														"referencedDeclaration": 1021,
														"src": "6788:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 984,
												"id": 990,
												"nodeType": "Return",
												"src": "6781:84:6"
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "6704:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "6720:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 979,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:6"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "6757:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:6"
									},
									"scope": 1105,
									"src": "6674:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "7213:170:6",
										"statements": [
											{
												"assignments": [
													1005,
													1007
												],
												"declarations": [
													{
														"constant": false,
														"id": 1005,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1020,
														"src": "7224:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1004,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1007,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1020,
														"src": "7238:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1006,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1012,
												"initialValue": {
													"arguments": [
														{
															"id": 1010,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "7285:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1008,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "7265:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1014,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 995,
															"src": "7334:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1015,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "7342:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1016,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "7351:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1017,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "7363:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1013,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "7307:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1003,
												"id": 1019,
												"nodeType": "Return",
												"src": "7300:76:6"
											}
										]
									},
									"documentation": {
										"id": 993,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "7097:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "7121:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 996,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "7148:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 998,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:6"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "7199:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1001,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:6"
									},
									"scope": 1105,
									"src": "7058:325:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "7865:434:6",
										"statements": [
											{
												"condition": {
													"id": 1035,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1026,
													"src": "7879:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1057,
													"nodeType": "Block",
													"src": "8235:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1053,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1028,
																		"src": "8257:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1054,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1030,
																		"src": "8269:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1052,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "8249:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1056,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:6"
														}
													]
												},
												"id": 1058,
												"nodeType": "IfStatement",
												"src": "7875:418:6",
												"trueBody": {
													"id": 1051,
													"nodeType": "Block",
													"src": "7888:341:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1036,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1028,
																		"src": "7906:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1048,
															"nodeType": "IfStatement",
															"src": "7902:286:6",
															"trueBody": {
																"id": 1047,
																"nodeType": "Block",
																"src": "7930:258:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1042,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1024,
																							"src": "8132:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1041,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 793,
																						"src": "8121:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1043,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1044,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1040,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1046,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1049,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1028,
																"src": "8208:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1034,
															"id": 1050,
															"nodeType": "Return",
															"src": "8201:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "7716:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "7740:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1025,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "7762:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "7795:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1029,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:6"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "7851:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1032,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:6"
									},
									"scope": 1105,
									"src": "7671:628:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "8680:135:6",
										"statements": [
											{
												"condition": {
													"id": 1072,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1063,
													"src": "8694:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1081,
													"nodeType": "Block",
													"src": "8751:58:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1077,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "8773:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1078,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1067,
																		"src": "8785:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1076,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "8765:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1080,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:6"
														}
													]
												},
												"id": 1082,
												"nodeType": "IfStatement",
												"src": "8690:119:6",
												"trueBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "8703:42:6",
													"statements": [
														{
															"expression": {
																"id": 1073,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "8724:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1071,
															"id": 1074,
															"nodeType": "Return",
															"src": "8717:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:6",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "8555:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1062,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "8577:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1064,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "8610:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1066,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:6"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "8666:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1069,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:6"
									},
									"scope": 1105,
									"src": "8520:295:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "8904:457:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1091,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "8980:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1101,
													"nodeType": "Block",
													"src": "9310:45:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1098,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "9331:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1097,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1100,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:6"
														}
													]
												},
												"id": 1102,
												"nodeType": "IfStatement",
												"src": "8976:379:6",
												"trueBody": {
													"id": 1096,
													"nodeType": "Block",
													"src": "9003:301:6",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:6",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:6"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 1086,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 1086,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:6",
																	"valueSize": 1
																}
															],
															"id": 1095,
															"nodeType": "InlineAssembly",
															"src": "9152:142:6"
														}
													]
												}
											}
										]
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "8838:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1085,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "8863:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1087,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:6"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:6"
									},
									"scope": 1105,
									"src": "8821:540:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1106,
							"src": "194:9169:6",
							"usedErrors": []
						}
					],
					"src": "101:9263:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1127
						]
					},
					"id": 1128,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1107,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1108,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1127,
							"linearizedBaseContracts": [
								1127
							],
							"name": "Context",
							"nameLocation": "626:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "702:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1113,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1112,
												"id": 1115,
												"nodeType": "Return",
												"src": "712:17:7"
											}
										]
									},
									"id": 1117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:7"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "693:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:7"
									},
									"scope": 1127,
									"src": "640:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "809:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1122,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1121,
												"id": 1124,
												"nodeType": "Return",
												"src": "819:15:7"
											}
										]
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:7"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "793:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1119,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:7"
									},
									"scope": 1127,
									"src": "742:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1128,
							"src": "608:235:7",
							"usedErrors": []
						}
					],
					"src": "86:758:7"
				},
				"id": 7
			},
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/Authorization.sol": {
				"ast": {
					"absolutePath": "gist-e259420aec8d85ea2219e4154536ad35/contracts/Authorization.sol",
					"exportedSymbols": {
						"AuthorizationI": [
							1207
						]
					},
					"id": 1208,
					"license": "LGPL-v3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1129,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:25:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AuthorizationI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1130,
								"nodeType": "StructuredDocumentation",
								"src": "63:159:8",
								"text": "@author Evmos Team\n @title Authorization Interface\n @dev The interface through which solidity contracts will interact with smart contract approvals."
							},
							"fullyImplemented": false,
							"id": 1207,
							"linearizedBaseContracts": [
								1207
							],
							"name": "AuthorizationI",
							"nameLocation": "232:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "253:362:8",
										"text": "@dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\n @param spender The address which will spend the funds.\n @param amount The amount of tokens to be spent.\n @param methods The message type URLs of the methods to approve.\n @return approved Boolean value to indicate if the approval was successful."
									},
									"functionSelector": "b6039895",
									"id": 1143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "629:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "654:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "646:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "679:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "671:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "methods",
												"nameLocation": "713:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "695:25:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1136,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "695:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1137,
													"nodeType": "ArrayTypeName",
													"src": "695:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:90:8"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "750:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "745:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1140,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "745:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:15:8"
									},
									"scope": 1207,
									"src": "620:140:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "766:400:8",
										"text": "@dev Increase the allowance of a given spender by a specific amount of tokens for IBC\n transfer methods or staking.\n @param spender The address which will spend the funds.\n @param amount The amount of tokens to be spent.\n @param methods The message type URLs of the methods to approve.\n @return approved Boolean value to indicate if the approval was successful."
									},
									"functionSelector": "a386a63c",
									"id": 1156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "1180:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1215:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1207:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1207:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1240:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1232:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1232:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "methods",
												"nameLocation": "1274:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1256:25:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1149,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "1256:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1150,
													"nodeType": "ArrayTypeName",
													"src": "1256:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1197:90:8"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1311:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1306:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1306:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1305:15:8"
									},
									"scope": 1207,
									"src": "1171:150:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "1327:401:8",
										"text": "@dev Decreases the allowance of a given spender by a specific amount of tokens for IBC\n transfer methods or staking.\n @param spender The address which will spend the funds.\n @param amount The amount of tokens to be spent.\n @param methods The message type URLs of the methods to approve.\n @return approved Boolean value to indicate if the approval was successful."
									},
									"functionSelector": "f007d286",
									"id": 1169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "1742:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1777:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1769:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1802:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1794:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1794:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "methods",
												"nameLocation": "1836:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1818:25:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1162,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "1818:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1163,
													"nodeType": "ArrayTypeName",
													"src": "1818:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:90:8"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1873:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1868:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1868:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:15:8"
									},
									"scope": 1207,
									"src": "1733:150:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "1890:504:8",
										"text": "@dev Returns the remaining number of tokens that spender will be allowed to spend\n on behalf of the owner through IBC transfer methods or staking. This is zero by default.\n @param owner The address of the account owning tokens.\n @param spender The address of the account able to transfer the tokens.\n @param method The message type URL of the methods for which the approval should be queried.\n @return remaining The remaining number of tokens available to be spent."
									},
									"functionSelector": "fc08930c",
									"id": 1181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2408:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2435:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "2427:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2458:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "2450:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2450:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "method",
												"nameLocation": "2491:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "2475:22:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2475:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2417:86:8"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "remaining",
												"nameLocation": "2535:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1181,
												"src": "2527:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2527:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2526:19:8"
									},
									"scope": 1207,
									"src": "2399:147:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "2552:510:8",
										"text": "@dev This event is emitted when the allowance of a spender is set by a call to the approve method.\n The value field specifies the new allowance and the methods field holds the information for which methods\n the approval was set.\n @param owner The owner of the tokens.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods for which the approval is set.\n @param value The amount of tokens approved to be spent."
									},
									"eventSelector": "f2638649a77447a76543b3e27c31ee0febe7de7fb20e2b6a781d08207bc7cb8d",
									"id": 1193,
									"name": "Approval",
									"nameLocation": "3073:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3107:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "3091:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3091:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3138:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "3122:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3122:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"indexed": false,
												"mutability": "mutable",
												"name": "methods",
												"nameLocation": "3164:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "3155:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1187,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "3155:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1188,
													"nodeType": "ArrayTypeName",
													"src": "3155:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3189:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "3181:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3181:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3081:119:8"
									},
									"src": "3067:134:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "3207:541:8",
										"text": "@dev This event is emitted when the allowance of a spender is changed by a call to the decrease or increase\n allowance method. The values field specifies the new allowances and the methods field holds the\n information for which methods the approval was set.\n @param owner The owner of the tokens.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods for which the approval is set.\n @param values The amounts of tokens approved to be spent."
									},
									"eventSelector": "5a22c7e8af595d94a6d652de8e346a8ecdfe49fc2e0e976f33c9fc9358390ea4",
									"id": 1206,
									"name": "AllowanceChange",
									"nameLocation": "3759:15:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3800:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "3784:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3784:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3831:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "3815:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3815:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"indexed": false,
												"mutability": "mutable",
												"name": "methods",
												"nameLocation": "3857:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "3848:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1199,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "3848:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1200,
													"nodeType": "ArrayTypeName",
													"src": "3848:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "3884:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "3874:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1202,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3874:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1203,
													"nodeType": "ArrayTypeName",
													"src": "3874:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3774:122:8"
									},
									"src": "3753:144:8"
								}
							],
							"scope": 1208,
							"src": "222:3677:8",
							"usedErrors": []
						}
					],
					"src": "36:3864:8"
				},
				"id": 8
			},
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/Distribution.sol": {
				"ast": {
					"absolutePath": "gist-e259420aec8d85ea2219e4154536ad35/contracts/Distribution.sol",
					"exportedSymbols": {
						"Coin": [
							2493
						],
						"DISTRIBUTION_CONTRACT": [
							1232
						],
						"DISTRIBUTION_PRECOMPILE_ADDRESS": [
							1215
						],
						"Dec": [
							2488
						],
						"DecCoin": [
							2500
						],
						"DelegationDelegatorReward": [
							1256
						],
						"DistributionI": [
							1405
						],
						"MSG_SET_WITHDRAWER_ADDRESS": [
							1219
						],
						"MSG_WITHDRAW_DELEGATOR_REWARD": [
							1222
						],
						"MSG_WITHDRAW_VALIDATOR_COMMISSION": [
							1225
						],
						"PageResponse": [
							2505
						],
						"ValidatorDistributionInfo": [
							1249
						],
						"ValidatorSlashEvent": [
							1238
						],
						"genericAuth": [
							1210
						]
					},
					"id": 1406,
					"license": "LGPL-v3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1209,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".17",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:28:9"
						},
						{
							"absolutePath": "gist-e259420aec8d85ea2219e4154536ad35/contracts/GenericAuthorization.sol",
							"file": "./GenericAuthorization.sol",
							"id": 1210,
							"nameLocation": "105:11:9",
							"nodeType": "ImportDirective",
							"scope": 1406,
							"sourceUnit": 1431,
							"src": "66:51:9",
							"symbolAliases": [],
							"unitAlias": "genericAuth"
						},
						{
							"absolutePath": "gist-e259420aec8d85ea2219e4154536ad35/contracts/Types.sol",
							"file": "./Types.sol",
							"id": 1211,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1406,
							"sourceUnit": 2506,
							"src": "118:21:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"constant": true,
							"id": 1215,
							"mutability": "constant",
							"name": "DISTRIBUTION_PRECOMPILE_ADDRESS",
							"nameLocation": "205:31:9",
							"nodeType": "VariableDeclaration",
							"scope": 1406,
							"src": "188:93:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1213,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "188:7:9",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030383031",
								"id": 1214,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "239:42:9",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"value": "0x0000000000000000000000000000000000000801"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1219,
							"mutability": "constant",
							"name": "MSG_SET_WITHDRAWER_ADDRESS",
							"nameLocation": "356:26:9",
							"nodeType": "VariableDeclaration",
							"scope": 1406,
							"src": "340:97:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_string_memory_ptr",
								"typeString": "string"
							},
							"typeName": {
								"id": 1217,
								"name": "string",
								"nodeType": "ElementaryTypeName",
								"src": "340:6:9",
								"typeDescriptions": {
									"typeIdentifier": "t_string_storage_ptr",
									"typeString": "string"
								}
							},
							"value": {
								"hexValue": "2f636f736d6f732e646973747269627574696f6e2e763162657461312e4d7367536574576974686472617741646472657373",
								"id": 1218,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "string",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "385:52:9",
								"typeDescriptions": {
									"typeIdentifier": "t_stringliteral_676444a09bae852212733c06aa01b4fb509c69e94cfae86e091c82c9b8092262",
									"typeString": "literal_string \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\""
								},
								"value": "/cosmos.distribution.v1beta1.MsgSetWithdrawAddress"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1222,
							"mutability": "constant",
							"name": "MSG_WITHDRAW_DELEGATOR_REWARD",
							"nameLocation": "455:29:9",
							"nodeType": "VariableDeclaration",
							"scope": 1406,
							"src": "439:105:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_string_memory_ptr",
								"typeString": "string"
							},
							"typeName": {
								"id": 1220,
								"name": "string",
								"nodeType": "ElementaryTypeName",
								"src": "439:6:9",
								"typeDescriptions": {
									"typeIdentifier": "t_string_storage_ptr",
									"typeString": "string"
								}
							},
							"value": {
								"hexValue": "2f636f736d6f732e646973747269627574696f6e2e763162657461312e4d7367576974686472617744656c656761746f72526577617264",
								"id": 1221,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "string",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "487:57:9",
								"typeDescriptions": {
									"typeIdentifier": "t_stringliteral_a80ac1de3135a636726973fe89306b48710e1e16488d89fb49580776524185b3",
									"typeString": "literal_string \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\""
								},
								"value": "/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1225,
							"mutability": "constant",
							"name": "MSG_WITHDRAW_VALIDATOR_COMMISSION",
							"nameLocation": "562:33:9",
							"nodeType": "VariableDeclaration",
							"scope": 1406,
							"src": "546:113:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_string_memory_ptr",
								"typeString": "string"
							},
							"typeName": {
								"id": 1223,
								"name": "string",
								"nodeType": "ElementaryTypeName",
								"src": "546:6:9",
								"typeDescriptions": {
									"typeIdentifier": "t_string_storage_ptr",
									"typeString": "string"
								}
							},
							"value": {
								"hexValue": "2f636f736d6f732e646973747269627574696f6e2e763162657461312e4d7367576974686472617756616c696461746f72436f6d6d697373696f6e",
								"id": 1224,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "string",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "598:61:9",
								"typeDescriptions": {
									"typeIdentifier": "t_stringliteral_ffe1bf93f0fe502fb0f961db98fe854ee1fd6d2519e43ee67a536717ae34be1b",
									"typeString": "literal_string \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\""
								},
								"value": "/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1232,
							"mutability": "constant",
							"name": "DISTRIBUTION_CONTRACT",
							"nameLocation": "733:21:9",
							"nodeType": "VariableDeclaration",
							"scope": 1406,
							"src": "710:93:9",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_DistributionI_$1405",
								"typeString": "contract DistributionI"
							},
							"typeName": {
								"id": 1228,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 1227,
									"name": "DistributionI",
									"nameLocations": [
										"710:13:9"
									],
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 1405,
									"src": "710:13:9"
								},
								"referencedDeclaration": 1405,
								"src": "710:13:9",
								"typeDescriptions": {
									"typeIdentifier": "t_contract$_DistributionI_$1405",
									"typeString": "contract DistributionI"
								}
							},
							"value": {
								"arguments": [
									{
										"id": 1230,
										"name": "DISTRIBUTION_PRECOMPILE_ADDRESS",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1215,
										"src": "771:31:9",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 1229,
									"name": "DistributionI",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 1405,
									"src": "757:13:9",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_contract$_DistributionI_$1405_$",
										"typeString": "type(contract DistributionI)"
									}
								},
								"id": 1231,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "757:46:9",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_contract$_DistributionI_$1405",
									"typeString": "contract DistributionI"
								}
							},
							"visibility": "internal"
						},
						{
							"canonicalName": "ValidatorSlashEvent",
							"id": 1238,
							"members": [
								{
									"constant": false,
									"id": 1234,
									"mutability": "mutable",
									"name": "validatorPeriod",
									"nameLocation": "846:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1238,
									"src": "839:22:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 1233,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "839:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1237,
									"mutability": "mutable",
									"name": "fraction",
									"nameLocation": "871:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1238,
									"src": "867:12:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Dec_$2488_storage_ptr",
										"typeString": "struct Dec"
									},
									"typeName": {
										"id": 1236,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1235,
											"name": "Dec",
											"nameLocations": [
												"867:3:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2488,
											"src": "867:3:9"
										},
										"referencedDeclaration": 2488,
										"src": "867:3:9",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Dec_$2488_storage_ptr",
											"typeString": "struct Dec"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "ValidatorSlashEvent",
							"nameLocation": "813:19:9",
							"nodeType": "StructDefinition",
							"scope": 1406,
							"src": "806:76:9",
							"visibility": "public"
						},
						{
							"canonicalName": "ValidatorDistributionInfo",
							"id": 1249,
							"members": [
								{
									"constant": false,
									"id": 1240,
									"mutability": "mutable",
									"name": "operatorAddress",
									"nameLocation": "930:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1249,
									"src": "923:22:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1239,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "923:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1244,
									"mutability": "mutable",
									"name": "selfBondRewards",
									"nameLocation": "961:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1249,
									"src": "951:25:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_DecCoin_$2500_storage_$dyn_storage_ptr",
										"typeString": "struct DecCoin[]"
									},
									"typeName": {
										"baseType": {
											"id": 1242,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1241,
												"name": "DecCoin",
												"nameLocations": [
													"951:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2500,
												"src": "951:7:9"
											},
											"referencedDeclaration": 2500,
											"src": "951:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_DecCoin_$2500_storage_ptr",
												"typeString": "struct DecCoin"
											}
										},
										"id": 1243,
										"nodeType": "ArrayTypeName",
										"src": "951:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_DecCoin_$2500_storage_$dyn_storage_ptr",
											"typeString": "struct DecCoin[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1248,
									"mutability": "mutable",
									"name": "commission",
									"nameLocation": "992:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1249,
									"src": "982:20:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_DecCoin_$2500_storage_$dyn_storage_ptr",
										"typeString": "struct DecCoin[]"
									},
									"typeName": {
										"baseType": {
											"id": 1246,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1245,
												"name": "DecCoin",
												"nameLocations": [
													"982:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2500,
												"src": "982:7:9"
											},
											"referencedDeclaration": 2500,
											"src": "982:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_DecCoin_$2500_storage_ptr",
												"typeString": "struct DecCoin"
											}
										},
										"id": 1247,
										"nodeType": "ArrayTypeName",
										"src": "982:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_DecCoin_$2500_storage_$dyn_storage_ptr",
											"typeString": "struct DecCoin[]"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "ValidatorDistributionInfo",
							"nameLocation": "891:25:9",
							"nodeType": "StructDefinition",
							"scope": 1406,
							"src": "884:121:9",
							"visibility": "public"
						},
						{
							"canonicalName": "DelegationDelegatorReward",
							"id": 1256,
							"members": [
								{
									"constant": false,
									"id": 1251,
									"mutability": "mutable",
									"name": "validatorAddress",
									"nameLocation": "1053:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 1256,
									"src": "1046:23:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1250,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1046:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1255,
									"mutability": "mutable",
									"name": "reward",
									"nameLocation": "1085:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1256,
									"src": "1075:16:9",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_DecCoin_$2500_storage_$dyn_storage_ptr",
										"typeString": "struct DecCoin[]"
									},
									"typeName": {
										"baseType": {
											"id": 1253,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1252,
												"name": "DecCoin",
												"nameLocations": [
													"1075:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2500,
												"src": "1075:7:9"
											},
											"referencedDeclaration": 2500,
											"src": "1075:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_DecCoin_$2500_storage_ptr",
												"typeString": "struct DecCoin"
											}
										},
										"id": 1254,
										"nodeType": "ArrayTypeName",
										"src": "1075:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_DecCoin_$2500_storage_$dyn_storage_ptr",
											"typeString": "struct DecCoin[]"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "DelegationDelegatorReward",
							"nameLocation": "1014:25:9",
							"nodeType": "StructDefinition",
							"scope": 1406,
							"src": "1007:87:9",
							"visibility": "public"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1258,
										"name": "genericAuth.GenericAuthorizationI",
										"nameLocations": [
											"1341:11:9",
											"1353:21:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1430,
										"src": "1341:33:9"
									},
									"id": 1259,
									"nodeType": "InheritanceSpecifier",
									"src": "1341:33:9"
								}
							],
							"canonicalName": "DistributionI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1257,
								"nodeType": "StructuredDocumentation",
								"src": "1096:218:9",
								"text": "@author Evmos Team\n @title Distribution Precompile Contract\n @dev The interface through which solidity contracts will interact with Distribution\n @custom:address 0x0000000000000000000000000000000000000801"
							},
							"fullyImplemented": false,
							"id": 1405,
							"linearizedBaseContracts": [
								1405,
								1430
							],
							"name": "DistributionI",
							"nameLocation": "1324:13:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "1381:344:9",
										"text": "TRANSACTIONS\n @dev Change the address, that can withdraw the rewards of a delegator.\n Note that this address cannot be a module account.\n @param delegatorAddress The address of the delegator\n @param withdrawerAddress The address that will be capable of withdrawing rewards for\n the given delegator address"
									},
									"functionSelector": "5a9d9a96",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setWithdrawAddress",
									"nameLocation": "1739:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "1775:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "1767:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1767:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "withdrawerAddress",
												"nameLocation": "1815:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "1801:31:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1263,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1801:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1757:81:9"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1862:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "1857:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1857:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1856:14:9"
									},
									"scope": 1405,
									"src": "1730:141:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "1877:235:9",
										"text": "@dev Withdraw the rewards of a delegator from a validator\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @return amount The amount of Coin withdrawn"
									},
									"functionSelector": "b46a8d61",
									"id": 1281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawDelegatorRewards",
									"nameLocation": "2126:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "2168:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "2160:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2160:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "2208:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "2194:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1273,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2194:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2150:80:9"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2282:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "2266:22:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Coin_$2493_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct Coin[]"
												},
												"typeName": {
													"baseType": {
														"id": 1277,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1276,
															"name": "Coin",
															"nameLocations": [
																"2266:4:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2493,
															"src": "2266:4:9"
														},
														"referencedDeclaration": 2493,
														"src": "2266:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Coin_$2493_storage_ptr",
															"typeString": "struct Coin"
														}
													},
													"id": 1278,
													"nodeType": "ArrayTypeName",
													"src": "2266:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Coin_$2493_storage_$dyn_storage_ptr",
														"typeString": "struct Coin[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2256:38:9"
									},
									"scope": 1405,
									"src": "2117:178:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1282,
										"nodeType": "StructuredDocumentation",
										"src": "2301:170:9",
										"text": "@dev Withdraws the rewards commission of a validator.\n @param validatorAddress The address of the validator\n @return amount The amount of Coin withdrawn"
									},
									"functionSelector": "3ce4e3be",
									"id": 1291,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawValidatorCommission",
									"nameLocation": "2485:27:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "2536:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "2522:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1283,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2522:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2512:46:9"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2610:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "2594:22:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Coin_$2493_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct Coin[]"
												},
												"typeName": {
													"baseType": {
														"id": 1287,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1286,
															"name": "Coin",
															"nameLocations": [
																"2594:4:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2493,
															"src": "2594:4:9"
														},
														"referencedDeclaration": 2493,
														"src": "2594:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Coin_$2493_storage_ptr",
															"typeString": "struct Coin"
														}
													},
													"id": 1288,
													"nodeType": "ArrayTypeName",
													"src": "2594:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Coin_$2493_storage_$dyn_storage_ptr",
														"typeString": "struct Coin[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2584:38:9"
									},
									"scope": 1405,
									"src": "2476:147:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "2629:224:9",
										"text": "QUERIES\n @dev Queries validator commission and self-delegation rewards for validator.\n @param validatorAddress The address of the validator\n @return distributionInfo The validator's distribution info"
									},
									"functionSelector": "54212a89",
									"id": 1301,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validatorDistributionInfo",
									"nameLocation": "2867:25:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "2916:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "2902:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2902:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2892:46:9"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "distributionInfo",
												"nameLocation": "3020:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "2983:53:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ValidatorDistributionInfo_$1249_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ValidatorDistributionInfo[]"
												},
												"typeName": {
													"baseType": {
														"id": 1297,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1296,
															"name": "ValidatorDistributionInfo",
															"nameLocations": [
																"2983:25:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1249,
															"src": "2983:25:9"
														},
														"referencedDeclaration": 1249,
														"src": "2983:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ValidatorDistributionInfo_$1249_storage_ptr",
															"typeString": "struct ValidatorDistributionInfo"
														}
													},
													"id": 1298,
													"nodeType": "ArrayTypeName",
													"src": "2983:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ValidatorDistributionInfo_$1249_storage_$dyn_storage_ptr",
														"typeString": "struct ValidatorDistributionInfo[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2973:104:9"
									},
									"scope": 1405,
									"src": "2858:220:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "3084:185:9",
										"text": "@dev Queries the outstanding rewards of a validator address.\n @param validatorAddress The address of the validator\n @return rewards The validator's outstanding rewards"
									},
									"functionSelector": "85b2d2da",
									"id": 1311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validatorOutstandingRewards",
									"nameLocation": "3283:27:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "3334:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "3320:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1303,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3320:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3310:46:9"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "rewards",
												"nameLocation": "3420:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "3401:26:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_DecCoin_$2500_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct DecCoin[]"
												},
												"typeName": {
													"baseType": {
														"id": 1307,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1306,
															"name": "DecCoin",
															"nameLocations": [
																"3401:7:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2500,
															"src": "3401:7:9"
														},
														"referencedDeclaration": 2500,
														"src": "3401:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DecCoin_$2500_storage_ptr",
															"typeString": "struct DecCoin"
														}
													},
													"id": 1308,
													"nodeType": "ArrayTypeName",
													"src": "3401:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DecCoin_$2500_storage_$dyn_storage_ptr",
														"typeString": "struct DecCoin[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3391:42:9"
									},
									"scope": 1405,
									"src": "3274:160:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "3440:175:9",
										"text": "@dev Queries the accumulated commission for a validator.\n @param validatorAddress The address of the validator\n @return commission The validator's commission"
									},
									"functionSelector": "3dd40f78",
									"id": 1321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validatorCommission",
									"nameLocation": "3629:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "3672:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "3658:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1313,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3658:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3648:46:9"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "commission",
												"nameLocation": "3758:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "3739:29:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_DecCoin_$2500_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct DecCoin[]"
												},
												"typeName": {
													"baseType": {
														"id": 1317,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1316,
															"name": "DecCoin",
															"nameLocations": [
																"3739:7:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2500,
															"src": "3739:7:9"
														},
														"referencedDeclaration": 2500,
														"src": "3739:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DecCoin_$2500_storage_ptr",
															"typeString": "struct DecCoin"
														}
													},
													"id": 1318,
													"nodeType": "ArrayTypeName",
													"src": "3739:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DecCoin_$2500_storage_$dyn_storage_ptr",
														"typeString": "struct DecCoin[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3729:45:9"
									},
									"scope": 1405,
									"src": "3620:155:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "3781:407:9",
										"text": "@dev Queries the slashing events for a validator in a given height interval\n defined by the starting and ending height.\n @param validatorAddress The address of the validator\n @param startingHeight The starting height\n @param endingHeight The ending height\n @return slashes The validator's slash events\n @return pageResponse The pagination response for the query"
									},
									"functionSelector": "a75395a5",
									"id": 1338,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validatorSlashes",
									"nameLocation": "4202:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "4242:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "4228:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4228:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "startingHeight",
												"nameLocation": "4275:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "4268:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1325,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4268:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "endingHeight",
												"nameLocation": "4306:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "4299:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1327,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4299:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4218:106:9"
									},
									"returnParameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "slashes",
												"nameLocation": "4400:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "4369:38:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_ValidatorSlashEvent_$1238_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct ValidatorSlashEvent[]"
												},
												"typeName": {
													"baseType": {
														"id": 1331,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1330,
															"name": "ValidatorSlashEvent",
															"nameLocations": [
																"4369:19:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1238,
															"src": "4369:19:9"
														},
														"referencedDeclaration": 1238,
														"src": "4369:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ValidatorSlashEvent_$1238_storage_ptr",
															"typeString": "struct ValidatorSlashEvent"
														}
													},
													"id": 1332,
													"nodeType": "ArrayTypeName",
													"src": "4369:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_ValidatorSlashEvent_$1238_storage_$dyn_storage_ptr",
														"typeString": "struct ValidatorSlashEvent[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "pageResponse",
												"nameLocation": "4439:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "4417:34:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PageResponse_$2505_calldata_ptr",
													"typeString": "struct PageResponse"
												},
												"typeName": {
													"id": 1335,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1334,
														"name": "PageResponse",
														"nameLocations": [
															"4417:12:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2505,
														"src": "4417:12:9"
													},
													"referencedDeclaration": 2505,
													"src": "4417:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PageResponse_$2505_storage_ptr",
														"typeString": "struct PageResponse"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4359:98:9"
									},
									"scope": 1405,
									"src": "4193:265:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "4464:293:9",
										"text": "@dev Queries the total rewards accrued by a delegation from a specific address to a given validator.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @return rewards The total rewards accrued by a delegation."
									},
									"functionSelector": "9ad563b4",
									"id": 1350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegationRewards",
									"nameLocation": "4771:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "4806:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "4798:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "4846:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "4832:30:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1342,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4832:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4788:80:9"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "rewards",
												"nameLocation": "4932:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "4913:26:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_DecCoin_$2500_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct DecCoin[]"
												},
												"typeName": {
													"baseType": {
														"id": 1346,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1345,
															"name": "DecCoin",
															"nameLocations": [
																"4913:7:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2500,
															"src": "4913:7:9"
														},
														"referencedDeclaration": 2500,
														"src": "4913:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DecCoin_$2500_storage_ptr",
															"typeString": "struct DecCoin"
														}
													},
													"id": 1347,
													"nodeType": "ArrayTypeName",
													"src": "4913:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DecCoin_$2500_storage_$dyn_storage_ptr",
														"typeString": "struct DecCoin[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4903:42:9"
									},
									"scope": 1405,
									"src": "4762:184:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "4952:318:9",
										"text": "@dev Queries the total rewards accrued by each validator, that a given\n address has delegated to.\n @param delegatorAddress The address of the delegator\n @return rewards The total rewards accrued by each validator for a delegator.\n @return total The total rewards accrued by a delegator."
									},
									"functionSelector": "54be1a28",
									"id": 1364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegationTotalRewards",
									"nameLocation": "5284:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "5324:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "5316:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5306:40:9"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "rewards",
												"nameLocation": "5428:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "5391:44:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_DelegationDelegatorReward_$1256_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct DelegationDelegatorReward[]"
												},
												"typeName": {
													"baseType": {
														"id": 1356,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1355,
															"name": "DelegationDelegatorReward",
															"nameLocations": [
																"5391:25:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1256,
															"src": "5391:25:9"
														},
														"referencedDeclaration": 1256,
														"src": "5391:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DelegationDelegatorReward_$1256_storage_ptr",
															"typeString": "struct DelegationDelegatorReward"
														}
													},
													"id": 1357,
													"nodeType": "ArrayTypeName",
													"src": "5391:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DelegationDelegatorReward_$1256_storage_$dyn_storage_ptr",
														"typeString": "struct DelegationDelegatorReward[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "total",
												"nameLocation": "5464:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "5445:24:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_DecCoin_$2500_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct DecCoin[]"
												},
												"typeName": {
													"baseType": {
														"id": 1360,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1359,
															"name": "DecCoin",
															"nameLocations": [
																"5445:7:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2500,
															"src": "5445:7:9"
														},
														"referencedDeclaration": 2500,
														"src": "5445:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_DecCoin_$2500_storage_ptr",
															"typeString": "struct DecCoin"
														}
													},
													"id": 1361,
													"nodeType": "ArrayTypeName",
													"src": "5445:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_DecCoin_$2500_storage_$dyn_storage_ptr",
														"typeString": "struct DecCoin[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5381:94:9"
									},
									"scope": 1405,
									"src": "5275:201:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "5482:237:9",
										"text": "@dev Queries all validators, that a given address has delegated to.\n @param delegatorAddress The address of the delegator\n @return validators The addresses of all validators, that were delegated to by the given address."
									},
									"functionSelector": "a66cb605",
									"id": 1373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegatorValidators",
									"nameLocation": "5733:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "5770:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "5762:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5762:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5752:40:9"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "validators",
												"nameLocation": "5834:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "5816:28:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1369,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "5816:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1370,
													"nodeType": "ArrayTypeName",
													"src": "5816:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:30:9"
									},
									"scope": 1405,
									"src": "5724:122:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "5852:237:9",
										"text": "@dev Queries the address capable of withdrawing rewards for a given delegator.\n @param delegatorAddress The address of the delegator\n @return withdrawAddress The address capable of withdrawing rewards for the delegator."
									},
									"functionSelector": "5431f450",
									"id": 1381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegatorWithdrawAddress",
									"nameLocation": "6103:24:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "6145:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "6137:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6137:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6127:40:9"
									},
									"returnParameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "withdrawAddress",
												"nameLocation": "6205:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "6191:29:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1378,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6191:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6190:31:9"
									},
									"scope": 1405,
									"src": "6094:128:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "6228:215:9",
										"text": "@dev SetWithdrawerAddress defines an Event emitted when a new withdrawer address is being set\n @param caller the caller of the transaction\n @param withdrawerAddress the newly set withdrawer address"
									},
									"eventSelector": "b55d29542a844fa64e70cbc06556201957fa0253fe7b54677830b586e2288e1e",
									"id": 1388,
									"name": "SetWithdrawerAddress",
									"nameLocation": "6454:20:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"indexed": true,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "6500:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "6484:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6484:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"indexed": false,
												"mutability": "mutable",
												"name": "withdrawerAddress",
												"nameLocation": "6523:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "6516:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1385,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6516:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6474:72:9"
									},
									"src": "6448:99:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "6553:294:9",
										"text": "@dev WithdrawDelegatorRewards defines an Event emitted when rewards from a delegation are withdrawn\n @param delegatorAddress the address of the delegator\n @param validatorAddress the address of the validator\n @param amount the amount being withdrawn from the delegation"
									},
									"eventSelector": "8d0912e7f8b09f64d001b73731ae9eecce7fe900e91a92ee9499659777450112",
									"id": 1397,
									"name": "WithdrawDelegatorRewards",
									"nameLocation": "6858:24:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "6908:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "6892:32:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1390,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"indexed": true,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "6949:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "6934:31:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1392,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6934:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1395,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6983:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "6975:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6975:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:113:9"
									},
									"src": "6852:144:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "7002:246:9",
										"text": "@dev WithdrawValidatorCommission defines an Event emitted when validator commissions are being withdrawn\n @param validatorAddress is the address of the validator\n @param commission is the total commission earned by the validator"
									},
									"eventSelector": "27596802346c7411d593e471243e3f9570666fade155d35f26150d851fdaf587",
									"id": 1404,
									"name": "WithdrawValidatorCommission",
									"nameLocation": "7259:27:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"indexed": true,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "7311:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "7296:31:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1399,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7296:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"indexed": false,
												"mutability": "mutable",
												"name": "commission",
												"nameLocation": "7345:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "7337:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7337:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7286:75:9"
									},
									"src": "7253:109:9"
								}
							],
							"scope": 1406,
							"src": "1314:6050:9",
							"usedErrors": []
						}
					],
					"src": "36:7329:9"
				},
				"id": 9
			},
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/GenericAuthorization.sol": {
				"ast": {
					"absolutePath": "gist-e259420aec8d85ea2219e4154536ad35/contracts/GenericAuthorization.sol",
					"exportedSymbols": {
						"GenericAuthorizationI": [
							1430
						]
					},
					"id": 1431,
					"license": "LGPL-v3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1407,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:25:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GenericAuthorizationI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1408,
								"nodeType": "StructuredDocumentation",
								"src": "63:159:10",
								"text": "@author Evmos Team\n @title Authorization Interface\n @dev The interface through which solidity contracts will interact with smart contract approvals."
							},
							"fullyImplemented": false,
							"id": 1430,
							"linearizedBaseContracts": [
								1430
							],
							"name": "GenericAuthorizationI",
							"nameLocation": "232:21:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "260:306:10",
										"text": "@dev Approves a list of Cosmos or IBC transactions with a specific amount of tokens.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods to approve.\n @return approved Boolean value to indicate if the approval was successful."
									},
									"functionSelector": "7a9841ed",
									"id": 1419,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "580:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "605:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "597:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "methods",
												"nameLocation": "640:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "622:25:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1412,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "622:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1413,
													"nodeType": "ArrayTypeName",
													"src": "622:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "587:66:10"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "677:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "672:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1416,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "672:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:15:10"
									},
									"scope": 1430,
									"src": "571:116:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "693:446:10",
										"text": "@dev This event is emitted when the allowance of a spender is set by a call to the approve method.\n The value field specifies the new allowance and the methods field holds the information for which methods\n the approval was set.\n @param owner The owner of the tokens.\n @param spender The address which will spend the funds.\n @param methods The message type URLs of the methods for which the approval is set."
									},
									"eventSelector": "e2d9366a7f75ef8fcafbe7902248eb78d4b2dae87d48522003814979d166ae86",
									"id": 1429,
									"name": "Approval",
									"nameLocation": "1150:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1184:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "1168:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1215:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "1199:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"indexed": false,
												"mutability": "mutable",
												"name": "methods",
												"nameLocation": "1241:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "1232:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1425,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "1232:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1426,
													"nodeType": "ArrayTypeName",
													"src": "1232:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1158:96:10"
									},
									"src": "1144:111:10"
								}
							],
							"scope": 1431,
							"src": "222:1035:10",
							"usedErrors": []
						}
					],
					"src": "36:1222:10"
				},
				"id": 10
			},
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/IRedelegationReward.sol": {
				"ast": {
					"absolutePath": "gist-e259420aec8d85ea2219e4154536ad35/contracts/IRedelegationReward.sol",
					"exportedSymbols": {
						"IRedelegationReward": [
							1493
						]
					},
					"id": 1494,
					"license": "LGPL-v3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1432,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "37:25:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IRedelegationReward",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1493,
							"linearizedBaseContracts": [
								1493
							],
							"name": "IRedelegationReward",
							"nameLocation": "76:19:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 1439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "110:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "128:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "120:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "120:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "119:17:11"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1439,
												"src": "160:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "160:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "159:9:11"
									},
									"scope": 1493,
									"src": "101:68:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "58341922",
									"id": 1444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupplyLocked",
									"nameLocation": "184:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "201:2:11"
									},
									"returnParameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "227:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "227:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "226:9:11"
									},
									"scope": 1493,
									"src": "175:61:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "880b0e43",
									"id": 1455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redelegateTokens",
									"nameLocation": "251:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "_srcValidatorAddr",
												"nameLocation": "290:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "276:31:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1445,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "276:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "_dstValidatorAddr",
												"nameLocation": "330:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "316:31:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1447,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "316:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "364:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "356:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "267:109:11"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "395:5:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 1452,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "395:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "394:7:11"
									},
									"scope": 1493,
									"src": "242:160:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6c11fe9b",
									"id": 1467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redelegateTokensMultiple",
									"nameLocation": "417:24:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "_srcValidatorAddrs",
												"nameLocation": "466:18:11",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "450:34:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1456,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "450:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1457,
													"nodeType": "ArrayTypeName",
													"src": "450:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "_dstValidatorAddrs",
												"nameLocation": "509:18:11",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "493:34:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1459,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "493:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1460,
													"nodeType": "ArrayTypeName",
													"src": "493:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "553:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "536:25:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1462,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "536:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1463,
													"nodeType": "ArrayTypeName",
													"src": "536:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:125:11"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "575:0:11"
									},
									"scope": 1493,
									"src": "408:168:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "008cc262",
									"id": 1474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "593:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "608:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "600:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "600:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:17:11"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "640:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:9:11"
									},
									"scope": 1493,
									"src": "584:65:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1c1f78eb",
									"id": 1479,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardForDuration",
									"nameLocation": "664:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "684:2:11"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "710:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "710:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "709:9:11"
									},
									"scope": 1493,
									"src": "655:64:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "80faa57d",
									"id": 1484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nameLocation": "734:24:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "758:2:11"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "784:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:9:11"
									},
									"scope": 1493,
									"src": "725:68:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "cd3daf9d",
									"id": 1489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "808:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "822:2:11"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "848:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "848:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "847:9:11"
									},
									"scope": 1493,
									"src": "799:58:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4e71d92d",
									"id": 1492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "872:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "877:2:11"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "888:0:11"
									},
									"scope": 1493,
									"src": "863:26:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1494,
							"src": "66:828:11",
							"usedErrors": []
						}
					],
					"src": "37:857:11"
				},
				"id": 11
			},
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol": {
				"ast": {
					"absolutePath": "gist-e259420aec8d85ea2219e4154536ad35/contracts/RedelegationReward.sol",
					"exportedSymbols": {
						"BondStatus": [
							2298
						],
						"Coin": [
							2493
						],
						"Commission": [
							2221
						],
						"CommissionRates": [
							2215
						],
						"DISTRIBUTION_CONTRACT": [
							1232
						],
						"DISTRIBUTION_PRECOMPILE_ADDRESS": [
							1215
						],
						"Dec": [
							2488
						],
						"DecCoin": [
							2500
						],
						"DelegationDelegatorReward": [
							1256
						],
						"DistributionI": [
							1405
						],
						"FailedToWithdrawStaking": [
							1519
						],
						"IERC20": [
							363
						],
						"IRedelegationReward": [
							1493
						],
						"MSG_CANCEL_UNDELEGATION": [
							2208
						],
						"MSG_DELEGATE": [
							2199
						],
						"MSG_REDELEGATE": [
							2205
						],
						"MSG_SET_WITHDRAWER_ADDRESS": [
							1219
						],
						"MSG_UNDELEGATE": [
							2202
						],
						"MSG_WITHDRAW_DELEGATOR_REWARD": [
							1222
						],
						"MSG_WITHDRAW_VALIDATOR_COMMISSION": [
							1225
						],
						"NotEnoughBalance": [
							1515
						],
						"Ownable": [
							112
						],
						"PageRequest": [
							2293
						],
						"PageResponse": [
							2505
						],
						"Pausable": [
							220
						],
						"Redelegation": [
							2258
						],
						"RedelegationEntry": [
							2273
						],
						"RedelegationEntryResponse": [
							2264
						],
						"RedelegationResponse": [
							2253
						],
						"RedelegationReward": [
							2180
						],
						"ReentrancyGuard": [
							285
						],
						"STAKING_CONTRACT": [
							2195
						],
						"STAKING_PRECOMPILE_ADDRESS": [
							2188
						],
						"SafeERC20": [
							775
						],
						"StakingI": [
							2481
						],
						"TooHighReward": [
							1517
						],
						"UnbondingDelegationEntry": [
							2282
						],
						"Validator": [
							2245
						],
						"ValidatorDistributionInfo": [
							1249
						],
						"ValidatorSlashEvent": [
							1238
						],
						"WaitToFinish": [
							1513
						],
						"ZeroAmount": [
							1511
						],
						"authorization": [
							2183
						],
						"genericAuth": [
							1210
						]
					},
					"id": 2181,
					"license": "LGPL-v3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1495,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:25:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1497,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2181,
							"sourceUnit": 113,
							"src": "138:67:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1496,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 112,
										"src": "146:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1499,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2181,
							"sourceUnit": 364,
							"src": "206:70:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1498,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 363,
										"src": "214:6:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1501,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2181,
							"sourceUnit": 776,
							"src": "277:82:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1500,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 775,
										"src": "285:9:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1503,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2181,
							"sourceUnit": 221,
							"src": "360:71:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1502,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 220,
										"src": "368:8:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1505,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2181,
							"sourceUnit": 286,
							"src": "432:85:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1504,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 285,
										"src": "440:15:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "gist-e259420aec8d85ea2219e4154536ad35/contracts/IRedelegationReward.sol",
							"file": "./IRedelegationReward.sol",
							"id": 1507,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2181,
							"sourceUnit": 1494,
							"src": "518:62:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1506,
										"name": "IRedelegationReward",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1493,
										"src": "526:19:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "gist-e259420aec8d85ea2219e4154536ad35/contracts/Staking.sol",
							"file": "./Staking.sol",
							"id": 1508,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2181,
							"sourceUnit": 2482,
							"src": "582:23:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "gist-e259420aec8d85ea2219e4154536ad35/contracts/Distribution.sol",
							"file": "./Distribution.sol",
							"id": 1509,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2181,
							"sourceUnit": 1406,
							"src": "606:28:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"errorSelector": "1f2a2005",
							"id": 1511,
							"name": "ZeroAmount",
							"nameLocation": "642:10:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1510,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "652:2:12"
							},
							"src": "636:19:12"
						},
						{
							"errorSelector": "38e32112",
							"id": 1513,
							"name": "WaitToFinish",
							"nameLocation": "662:12:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1512,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "674:2:12"
							},
							"src": "656:21:12"
						},
						{
							"errorSelector": "ad3a8b9e",
							"id": 1515,
							"name": "NotEnoughBalance",
							"nameLocation": "684:16:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1514,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "700:2:12"
							},
							"src": "678:25:12"
						},
						{
							"errorSelector": "7f5e85a6",
							"id": 1517,
							"name": "TooHighReward",
							"nameLocation": "710:13:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1516,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "723:2:12"
							},
							"src": "704:22:12"
						},
						{
							"errorSelector": "43fc58f1",
							"id": 1519,
							"name": "FailedToWithdrawStaking",
							"nameLocation": "733:23:12",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 1518,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "756:2:12"
							},
							"src": "727:32:12"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1521,
										"name": "IRedelegationReward",
										"nameLocations": [
											"893:19:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1493,
										"src": "893:19:12"
									},
									"id": 1522,
									"nodeType": "InheritanceSpecifier",
									"src": "893:19:12"
								},
								{
									"baseName": {
										"id": 1523,
										"name": "Ownable",
										"nameLocations": [
											"914:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "914:7:12"
									},
									"id": 1524,
									"nodeType": "InheritanceSpecifier",
									"src": "914:7:12"
								},
								{
									"baseName": {
										"id": 1525,
										"name": "Pausable",
										"nameLocations": [
											"923:8:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 220,
										"src": "923:8:12"
									},
									"id": 1526,
									"nodeType": "InheritanceSpecifier",
									"src": "923:8:12"
								},
								{
									"baseName": {
										"id": 1527,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"933:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 285,
										"src": "933:15:12"
									},
									"id": 1528,
									"nodeType": "InheritanceSpecifier",
									"src": "933:15:12"
								}
							],
							"canonicalName": "RedelegationReward",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1520,
								"nodeType": "StructuredDocumentation",
								"src": "761:100:12",
								"text": " Stakes tokens for a certain duration and gets rewards according to their\n staked shares"
							},
							"fullyImplemented": true,
							"id": 2180,
							"linearizedBaseContracts": [
								2180,
								285,
								220,
								112,
								1127,
								1493
							],
							"name": "RedelegationReward",
							"nameLocation": "871:18:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1533,
									"mutability": "mutable",
									"name": "stakingMethods",
									"nameLocation": "972:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "955:50:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
										"typeString": "string[]"
									},
									"typeName": {
										"baseType": {
											"id": 1529,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "955:6:12",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"id": 1530,
										"nodeType": "ArrayTypeName",
										"src": "955:8:12",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
											"typeString": "string[]"
										}
									},
									"value": {
										"components": [
											{
												"id": 1531,
												"name": "MSG_REDELEGATE",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2205,
												"src": "990:14:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string memory"
												}
											}
										],
										"id": 1532,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "989:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_string_memory_ptr_$1_memory_ptr",
											"typeString": "string memory[1] memory"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1537,
									"mutability": "mutable",
									"name": "approvedUsers",
									"nameLocation": "1044:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "1011:46:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1536,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1534,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1019:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1011:24:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1535,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1030:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1567,
										"nodeType": "Block",
										"src": "1338:285:12",
										"statements": [
											{
												"assignments": [
													1542
												],
												"declarations": [
													{
														"constant": false,
														"id": 1542,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1353:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1567,
														"src": "1348:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1541,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1348:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1554,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1545,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1401:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1405:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1401:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1430:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1548,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1430:7:12",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1547,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "1425:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1425:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1439:3:12",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "1425:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1552,
															"name": "stakingMethods",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "1456:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																"typeString": "string storage ref[] storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
																"typeString": "string storage ref[] storage ref"
															}
														],
														"expression": {
															"id": 1543,
															"name": "STAKING_CONTRACT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "1363:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StakingI_$2481",
																"typeString": "contract StakingI"
															}
														},
														"id": 1544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1380:7:12",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1143,
														"src": "1363:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,uint256,string memory[] memory) external returns (bool)"
														}
													},
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1363:117:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1348:132:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1556,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1542,
															"src": "1498:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f20617070726f76652064656c6567617465206d6574686f64",
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1507:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4b3d2aaf3158ed749e6ea5cd490dd314d6a9f8bba4f79ecc1e5c44388ee47d72",
																"typeString": "literal_string \"Failed to approve delegate method\""
															},
															"value": "Failed to approve delegate method"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4b3d2aaf3158ed749e6ea5cd490dd314d6a9f8bba4f79ecc1e5c44388ee47d72",
																"typeString": "literal_string \"Failed to approve delegate method\""
															}
														],
														"id": 1555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1490:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1490:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1559,
												"nodeType": "ExpressionStatement",
												"src": "1490:53:12"
											},
											{
												"expression": {
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1560,
															"name": "approvedUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "1553:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1563,
														"indexExpression": {
															"expression": {
																"id": 1561,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1567:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1571:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1567:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1553:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1581:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1553:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1566,
												"nodeType": "ExpressionStatement",
												"src": "1553:32:12"
											}
										]
									},
									"documentation": {
										"id": 1538,
										"nodeType": "StructuredDocumentation",
										"src": "1064:228:12",
										"text": "@dev Approves the required transactions for delegation and withdrawal of staking rewards transactions.\n @dev This creates a Cosmos Authorization Grants for the given methods.\n @dev This emits an Approval event."
									},
									"functionSelector": "c6e79b91",
									"id": 1568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveRequiredMethods",
									"nameLocation": "1306:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1328:2:12"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:0:12"
									},
									"scope": 2180,
									"src": "1297:326:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"global": false,
									"id": 1572,
									"libraryName": {
										"id": 1569,
										"name": "SafeERC20",
										"nameLocations": [
											"1636:9:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 775,
										"src": "1636:9:12"
									},
									"nodeType": "UsingForDirective",
									"src": "1630:27:12",
									"typeName": {
										"id": 1571,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1570,
											"name": "IERC20",
											"nameLocations": [
												"1650:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 363,
											"src": "1650:6:12"
										},
										"referencedDeclaration": 363,
										"src": "1650:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$363",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 1575,
									"mutability": "mutable",
									"name": "stakingToken",
									"nameLocation": "1715:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "1701:26:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$363",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1574,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1573,
											"name": "IERC20",
											"nameLocations": [
												"1701:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 363,
											"src": "1701:6:12"
										},
										"referencedDeclaration": 363,
										"src": "1701:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$363",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 1578,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nameLocation": "1785:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "1771:26:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$363",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1577,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1576,
											"name": "IERC20",
											"nameLocations": [
												"1771:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 363,
											"src": "1771:6:12"
										},
										"referencedDeclaration": 363,
										"src": "1771:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$363",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ebe2b12b",
									"id": 1580,
									"mutability": "mutable",
									"name": "periodFinish",
									"nameLocation": "1870:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "1855:27:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1579,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1855:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b0a47ee",
									"id": 1582,
									"mutability": "mutable",
									"name": "rewardRate",
									"nameLocation": "1922:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "1907:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1581,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "386a9525",
									"id": 1585,
									"mutability": "mutable",
									"name": "rewardsDuration",
									"nameLocation": "1988:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "1973:39:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1583,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1973:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1584,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2006:6:12",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_172800_by_1",
											"typeString": "int_const 172800"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8f33c91",
									"id": 1587,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nameLocation": "2077:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "2062:29:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1586,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2062:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df136d65",
									"id": 1589,
									"mutability": "mutable",
									"name": "rewardPerTokenStored",
									"nameLocation": "2145:20:12",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "2130:35:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1588,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2130:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b876347",
									"id": 1593,
									"mutability": "mutable",
									"name": "userRewardPerTokenPaid",
									"nameLocation": "2271:22:12",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "2236:57:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1592,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1590,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2244:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2236:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1591,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2255:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 1597,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "2400:7:12",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "2365:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1596,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1594,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2373:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2365:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1595,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2384:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1599,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "2463:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "2447:27:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1598,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2447:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1603,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "2557:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "2521:44:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1602,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1600,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2529:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2521:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1601,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2540:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "2828:55:12",
										"text": " Emitted when user stakes staking token"
									},
									"eventSelector": "0da5c3d1021415bb27aa0917eaaafc6ee7c358a2a436d70208004073f6109ec0",
									"id": 1610,
									"name": "Redelegate",
									"nameLocation": "2894:10:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2921:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2905:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2905:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2938:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2930:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2930:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2904:41:12"
									},
									"src": "2888:58:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1611,
										"nodeType": "StructuredDocumentation",
										"src": "2951:63:12",
										"text": " Emited when user unstakes his/her staked token"
									},
									"eventSelector": "e919fdc0f1affe89df47420c46820e538abb91e59ed0dedaee7dec5cce28a2fd",
									"id": 1617,
									"name": "CancelRedelegate",
									"nameLocation": "3025:16:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3058:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "3042:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3042:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3075:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "3067:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3067:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3041:41:12"
									},
									"src": "3019:64:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1618,
										"nodeType": "StructuredDocumentation",
										"src": "3088:62:12",
										"text": " Emitted when user claim his/her rewards token"
									},
									"eventSelector": "d8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a",
									"id": 1624,
									"name": "Claimed",
									"nameLocation": "3161:7:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3185:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "3169:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3169:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1622,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3202:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "3194:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3168:41:12"
									},
									"src": "3155:55:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "3215:85:12",
										"text": " Emitted when owner funds rewards token and restart rewarding session"
									},
									"eventSelector": "c4c14883ae9fd8e26d5d59e3485ed29fd126d781d7e498a4ca5c54c8268e4936",
									"id": 1629,
									"name": "Funded",
									"nameLocation": "3311:6:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3326:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "3318:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:16:12"
									},
									"src": "3305:29:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "3339:63:12",
										"text": " Emitted when rewards duration has been updated"
									},
									"eventSelector": "fb46ca5a5e06d4540d6387b930a7c978bce0db5f449ec6b3f5d07c6e1d44f2d3",
									"id": 1634,
									"name": "RewardsDurationUpdated",
									"nameLocation": "3413:22:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"indexed": false,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "3444:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "3436:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3436:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:18:12"
									},
									"src": "3407:47:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1635,
										"nodeType": "StructuredDocumentation",
										"src": "3459:71:12",
										"text": " Emitted when owner recovered tokens from this contract"
									},
									"eventSelector": "8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28",
									"id": 1641,
									"name": "Recovered",
									"nameLocation": "3541:9:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"indexed": false,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3559:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "3551:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1639,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3574:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "3566:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:31:12"
									},
									"src": "3535:47:12"
								},
								{
									"body": {
										"id": 1678,
										"nodeType": "Block",
										"src": "3883:258:12",
										"statements": [
											{
												"expression": {
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1645,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1589,
														"src": "3889:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1646,
															"name": "_rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2073,
															"src": "3912:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3912:17:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3889:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1649,
												"nodeType": "ExpressionStatement",
												"src": "3889:40:12"
											},
											{
												"expression": {
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1650,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "3935:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1651,
															"name": "_lastTimeRewardApplicable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2045,
															"src": "3952:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3952:27:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3935:44:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1654,
												"nodeType": "ExpressionStatement",
												"src": "3935:44:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1655,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "3989:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4008:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4000:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1656,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4000:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1659,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4000:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3989:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1676,
												"nodeType": "IfStatement",
												"src": "3985:143:12",
												"trueBody": {
													"id": 1675,
													"nodeType": "Block",
													"src": "4012:116:12",
													"statements": [
														{
															"expression": {
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1661,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1597,
																		"src": "4022:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1663,
																	"indexExpression": {
																		"id": 1662,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "4030:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4022:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1665,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1643,
																			"src": "4049:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1664,
																		"name": "_earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2100,
																		"src": "4041:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 1666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4041:16:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4022:35:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1668,
															"nodeType": "ExpressionStatement",
															"src": "4022:35:12"
														},
														{
															"expression": {
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1669,
																		"name": "userRewardPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1593,
																		"src": "4067:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1671,
																	"indexExpression": {
																		"id": 1670,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "4090:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4067:31:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1672,
																	"name": "rewardPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1589,
																	"src": "4101:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4067:54:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1674,
															"nodeType": "ExpressionStatement",
															"src": "4067:54:12"
														}
													]
												}
											},
											{
												"id": 1677,
												"nodeType": "PlaceholderStatement",
												"src": "4133:1:12"
											}
										]
									},
									"id": 1679,
									"name": "updateReward",
									"nameLocation": "3853:12:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3874:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1679,
												"src": "3866:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3866:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3865:17:12"
									},
									"src": "3844:297:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1706,
										"nodeType": "Block",
										"src": "4587:159:12",
										"statements": [
											{
												"expression": {
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1687,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1578,
														"src": "4593:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$363",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1689,
																"name": "rewardsToken_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1682,
																"src": "4615:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1688,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "4608:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4608:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$363",
															"typeString": "contract IERC20"
														}
													},
													"src": "4593:36:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"id": 1692,
												"nodeType": "ExpressionStatement",
												"src": "4593:36:12"
											},
											{
												"expression": {
													"id": 1700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1693,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "4635:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$363",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"hexValue": "307842654665383938343037343833663066326646363035393731464244384366384662443842313630",
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4665:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"value": "0xBeFe898407483f0f2fF605971FBD8Cf8FbD8B160"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4657:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1695,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4657:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4657:51:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1694,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "4650:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1699,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4650:59:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$363",
															"typeString": "contract IERC20"
														}
													},
													"src": "4635:74:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$363",
														"typeString": "contract IERC20"
													}
												},
												"id": 1701,
												"nodeType": "ExpressionStatement",
												"src": "4635:74:12"
											},
											{
												"expression": {
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1702,
														"name": "rewardsDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "4715:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1703,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "4733:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4715:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "4715:26:12"
											}
										]
									},
									"documentation": {
										"id": 1680,
										"nodeType": "StructuredDocumentation",
										"src": "4395:136:12",
										"text": " @dev Constructor\n @param rewardsToken_ Address to rewards ERC20 token\n @param duration Reward duration in seconds"
									},
									"id": 1707,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "rewardsToken_",
												"nameLocation": "4554:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "4546:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4546:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "4577:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "4569:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4569:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4545:41:12"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4587:0:12"
									},
									"scope": 2180,
									"src": "4534:212:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "5000:157:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1715,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5010:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1716,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5016:9:12",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5010:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1717,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "5028:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5010:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1723,
												"nodeType": "IfStatement",
												"src": "5006:72:12",
												"trueBody": {
													"id": 1722,
													"nodeType": "Block",
													"src": "5042:36:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1719,
																	"name": "WaitToFinish",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1513,
																	"src": "5057:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5057:14:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1721,
															"nodeType": "RevertStatement",
															"src": "5050:21:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1724,
														"name": "rewardsDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "5083:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1725,
														"name": "duration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1710,
														"src": "5101:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5083:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1727,
												"nodeType": "ExpressionStatement",
												"src": "5083:26:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1729,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "5143:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1728,
														"name": "RewardsDurationUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1634,
														"src": "5120:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5120:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1731,
												"nodeType": "EmitStatement",
												"src": "5115:37:12"
											}
										]
									},
									"documentation": {
										"id": 1708,
										"nodeType": "StructuredDocumentation",
										"src": "4750:182:12",
										"text": " @notice Set rewards duration, only available to set after finish\n of previous rewards period.\n @dev Callable by owner\n @param duration New rewards duration"
									},
									"functionSelector": "cc1a378f",
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1713,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1712,
												"name": "onlyOwner",
												"nameLocations": [
													"4990:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4990:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4990:9:12"
										}
									],
									"name": "setRewardsDuration",
									"nameLocation": "4944:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "4971:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "4963:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4963:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4962:18:12"
									},
									"returnParameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5000:0:12"
									},
									"scope": 2180,
									"src": "4935:222:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1455
									],
									"body": {
										"id": 1791,
										"nodeType": "Block",
										"src": "5638:360:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1751,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1740,
														"src": "5652:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5663:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5652:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1758,
												"nodeType": "IfStatement",
												"src": "5648:62:12",
												"trueBody": {
													"id": 1757,
													"nodeType": "Block",
													"src": "5666:44:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1754,
																	"name": "ZeroAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1511,
																	"src": "5687:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5687:12:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1756,
															"nodeType": "RevertStatement",
															"src": "5680:19:12"
														}
													]
												}
											},
											{
												"assignments": [
													1760
												],
												"declarations": [
													{
														"constant": false,
														"id": 1760,
														"mutability": "mutable",
														"name": "completionTime",
														"nameLocation": "5725:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 1791,
														"src": "5719:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														},
														"typeName": {
															"id": 1759,
															"name": "int64",
															"nodeType": "ElementaryTypeName",
															"src": "5719:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int64",
																"typeString": "int64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1769,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1763,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5770:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5774:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5770:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1765,
															"name": "_srcValidatorAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1736,
															"src": "5782:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1766,
															"name": "_dstValidatorAddr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1738,
															"src": "5801:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1767,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "5820:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1761,
															"name": "STAKING_CONTRACT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "5742:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StakingI_$2481",
																"typeString": "contract StakingI"
															}
														},
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5759:10:12",
														"memberName": "redelegate",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2339,
														"src": "5742:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_int64_$",
															"typeString": "function (address,string memory,string memory,uint256) external returns (int64)"
														}
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5742:86:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5719:109:12"
											},
											{
												"expression": {
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1770,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "5838:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1771,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "5852:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1772,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "5866:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5852:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5838:35:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "5838:35:12"
											},
											{
												"expression": {
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1776,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "5883:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1779,
														"indexExpression": {
															"expression": {
																"id": 1777,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5892:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5896:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5892:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5883:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1780,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1740,
														"src": "5907:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5883:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1782,
												"nodeType": "ExpressionStatement",
												"src": "5883:31:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1784,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5940:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5944:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5940:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1786,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1740,
															"src": "5952:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1783,
														"name": "Redelegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "5929:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5929:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1788,
												"nodeType": "EmitStatement",
												"src": "5924:36:12"
											},
											{
												"expression": {
													"id": 1789,
													"name": "completionTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1760,
													"src": "5977:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"functionReturnParameters": 1750,
												"id": 1790,
												"nodeType": "Return",
												"src": "5970:21:12"
											}
										]
									},
									"documentation": {
										"id": 1734,
										"nodeType": "StructuredDocumentation",
										"src": "5164:268:12",
										"text": "@dev Redelegate the staked tokens from one validator to another\n @param _srcValidatorAddr The address of the source validator\n @param _dstValidatorAddr The address of the destination validator\n @param _amount The amount of tokens to redelegate"
									},
									"functionSelector": "880b0e43",
									"id": 1792,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1743,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1742,
												"name": "whenNotPaused",
												"nameLocations": [
													"5583:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "5583:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5583:13:12"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1745,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5610:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5614:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5610:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1747,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1744,
												"name": "updateReward",
												"nameLocations": [
													"5597:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1679,
												"src": "5597:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5597:24:12"
										}
									],
									"name": "redelegateTokens",
									"nameLocation": "5446:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "_srcValidatorAddr",
												"nameLocation": "5486:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "5472:31:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1735,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5472:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "_dstValidatorAddr",
												"nameLocation": "5527:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "5513:31:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1737,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5513:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5562:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "5554:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5554:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5462:113:12"
									},
									"returnParameters": {
										"id": 1750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "5631:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 1748,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "5631:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5630:7:12"
									},
									"scope": 2180,
									"src": "5437:561:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1467
									],
									"body": {
										"id": 1847,
										"nodeType": "Block",
										"src": "6474:371:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1808,
																		"name": "_srcValidatorAddrs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1796,
																		"src": "6505:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																			"typeString": "string memory[] memory"
																		}
																	},
																	"id": 1809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6524:6:12",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6505:25:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1810,
																		"name": "_dstValidatorAddrs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1799,
																		"src": "6534:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																			"typeString": "string memory[] memory"
																		}
																	},
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6553:6:12",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6534:25:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6505:54:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1813,
																		"name": "_dstValidatorAddrs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1799,
																		"src": "6575:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																			"typeString": "string memory[] memory"
																		}
																	},
																	"id": 1814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6594:6:12",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6575:25:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1815,
																		"name": "_amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1802,
																		"src": "6604:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6613:6:12",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6604:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6575:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6505:114:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e70757420617272617973206c656e677468206d69736d61746368",
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6633:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786",
																"typeString": "literal_string \"Input arrays length mismatch\""
															},
															"value": "Input arrays length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_435b01265a0cf39a5f3992d984afd4b4e7ac38f8506d53152286f12879fd2786",
																"typeString": "literal_string \"Input arrays length mismatch\""
															}
														],
														"id": 1807,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6484:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6484:189:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1821,
												"nodeType": "ExpressionStatement",
												"src": "6484:189:12"
											},
											{
												"body": {
													"id": 1845,
													"nodeType": "Block",
													"src": "6739:100:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1834,
																			"name": "_srcValidatorAddrs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1796,
																			"src": "6770:18:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"typeString": "string memory[] memory"
																			}
																		},
																		"id": 1836,
																		"indexExpression": {
																			"id": 1835,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1823,
																			"src": "6789:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6770:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1837,
																			"name": "_dstValidatorAddrs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1799,
																			"src": "6793:18:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																				"typeString": "string memory[] memory"
																			}
																		},
																		"id": 1839,
																		"indexExpression": {
																			"id": 1838,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1823,
																			"src": "6812:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6793:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1840,
																			"name": "_amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1802,
																			"src": "6816:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1842,
																		"indexExpression": {
																			"id": 1841,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1823,
																			"src": "6825:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6816:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1833,
																	"name": "redelegateTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1792,
																	"src": "6753:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$_t_int64_$",
																		"typeString": "function (string memory,string memory,uint256) returns (int64)"
																	}
																},
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6753:75:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int64",
																	"typeString": "int64"
																}
															},
															"id": 1844,
															"nodeType": "ExpressionStatement",
															"src": "6753:75:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1826,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1823,
														"src": "6703:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1827,
															"name": "_srcValidatorAddrs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "6707:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6726:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6707:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6703:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1846,
												"initializationExpression": {
													"assignments": [
														1823
													],
													"declarations": [
														{
															"constant": false,
															"id": 1823,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6696:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 1846,
															"src": "6688:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1822,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6688:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1825,
													"initialValue": {
														"hexValue": "30",
														"id": 1824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6700:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6688:13:12"
												},
												"loopExpression": {
													"expression": {
														"id": 1831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6734:3:12",
														"subExpression": {
															"id": 1830,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "6734:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1832,
													"nodeType": "ExpressionStatement",
													"src": "6734:3:12"
												},
												"nodeType": "ForStatement",
												"src": "6683:156:12"
											}
										]
									},
									"documentation": {
										"id": 1793,
										"nodeType": "StructuredDocumentation",
										"src": "6003:283:12",
										"text": "@dev Redelegate the staked tokens from multiple validators to others\n @param _srcValidatorAddrs The addresses of the source validators\n @param _dstValidatorAddrs The addresses of the destination validators\n @param _amounts The amounts of tokens to redelegate"
									},
									"functionSelector": "6c11fe9b",
									"id": 1848,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1805,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1804,
												"name": "whenNotPaused",
												"nameLocations": [
													"6461:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "6461:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "6461:13:12"
										}
									],
									"name": "redelegateTokensMultiple",
									"nameLocation": "6300:24:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "_srcValidatorAddrs",
												"nameLocation": "6350:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "6334:34:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1794,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "6334:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1795,
													"nodeType": "ArrayTypeName",
													"src": "6334:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1799,
												"mutability": "mutable",
												"name": "_dstValidatorAddrs",
												"nameLocation": "6394:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "6378:34:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1797,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "6378:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1798,
													"nodeType": "ArrayTypeName",
													"src": "6378:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "6439:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "6422:25:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1800,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6422:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1801,
													"nodeType": "ArrayTypeName",
													"src": "6422:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6324:129:12"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6474:0:12"
									},
									"scope": 2180,
									"src": "6291:554:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1492
									],
									"body": {
										"id": 1893,
										"nodeType": "Block",
										"src": "7040:199:12",
										"statements": [
											{
												"assignments": [
													1861
												],
												"declarations": [
													{
														"constant": false,
														"id": 1861,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "7054:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1893,
														"src": "7046:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1860,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7046:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1866,
												"initialValue": {
													"baseExpression": {
														"id": 1862,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1597,
														"src": "7063:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1865,
													"indexExpression": {
														"expression": {
															"id": 1863,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7071:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7075:6:12",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7071:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7063:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7046:36:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1867,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1861,
														"src": "7092:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1868,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7101:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7092:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1892,
												"nodeType": "IfStatement",
												"src": "7088:147:12",
												"trueBody": {
													"id": 1891,
													"nodeType": "Block",
													"src": "7104:131:12",
													"statements": [
														{
															"expression": {
																"id": 1875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1870,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1597,
																		"src": "7112:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1873,
																	"indexExpression": {
																		"expression": {
																			"id": 1871,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7120:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7124:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7120:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7112:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7134:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7112:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1876,
															"nodeType": "ExpressionStatement",
															"src": "7112:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1880,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7169:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7173:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7169:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1882,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1861,
																		"src": "7181:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1877,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1578,
																		"src": "7143:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$363",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7156:12:12",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 432,
																	"src": "7143:25:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$363_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7143:45:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1884,
															"nodeType": "ExpressionStatement",
															"src": "7143:45:12"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1886,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7209:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7213:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7209:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1888,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1861,
																		"src": "7221:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1885,
																	"name": "Claimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "7201:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7201:27:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1890,
															"nodeType": "EmitStatement",
															"src": "7196:32:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1849,
										"nodeType": "StructuredDocumentation",
										"src": "6850:111:12",
										"text": " @notice Claim rewards tokens, callable only when unpaused.\n @dev Callable only when unpaused"
									},
									"functionSelector": "4e71d92d",
									"id": 1894,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1852,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1851,
												"name": "nonReentrant",
												"nameLocations": [
													"6988:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 250,
												"src": "6988:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "6988:12:12"
										},
										{
											"id": 1854,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1853,
												"name": "whenNotPaused",
												"nameLocations": [
													"7001:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "7001:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "7001:13:12"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1856,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7028:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7032:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7028:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1858,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1855,
												"name": "updateReward",
												"nameLocations": [
													"7015:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1679,
												"src": "7015:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "7015:24:12"
										}
									],
									"name": "claim",
									"nameLocation": "6973:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6978:2:12"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7040:0:12"
									},
									"scope": 2180,
									"src": "6964:275:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1993,
										"nodeType": "Block",
										"src": "7625:935:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1910,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7635:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7641:9:12",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7635:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1912,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "7654:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7635:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1943,
													"nodeType": "Block",
													"src": "7726:172:12",
													"statements": [
														{
															"assignments": [
																1922
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1922,
																	"mutability": "mutable",
																	"name": "remaining",
																	"nameLocation": "7742:9:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1943,
																	"src": "7734:17:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1921,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7734:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1927,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1923,
																	"name": "periodFinish",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "7754:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 1924,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7769:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7775:9:12",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "7769:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7754:30:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7734:50:12"
														},
														{
															"assignments": [
																1929
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1929,
																	"mutability": "mutable",
																	"name": "leftover",
																	"nameLocation": "7800:8:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1943,
																	"src": "7792:16:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1928,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7792:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1933,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1930,
																	"name": "remaining",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1922,
																	"src": "7811:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1931,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1582,
																	"src": "7823:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7811:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7792:41:12"
														},
														{
															"expression": {
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1934,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1582,
																	"src": "7841:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1937,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1935,
																					"name": "reward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1897,
																					"src": "7855:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1936,
																					"name": "leftover",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1929,
																					"src": "7864:8:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7855:17:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1938,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7854:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1939,
																		"name": "rewardsDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1585,
																		"src": "7876:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7854:37:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7841:50:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1942,
															"nodeType": "ExpressionStatement",
															"src": "7841:50:12"
														}
													]
												},
												"id": 1944,
												"nodeType": "IfStatement",
												"src": "7631:267:12",
												"trueBody": {
													"id": 1920,
													"nodeType": "Block",
													"src": "7668:52:12",
													"statements": [
														{
															"expression": {
																"id": 1918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1914,
																	"name": "rewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1582,
																	"src": "7676:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1915,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1897,
																		"src": "7689:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1916,
																		"name": "rewardsDuration",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1585,
																		"src": "7698:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7689:24:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7676:37:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1919,
															"nodeType": "ExpressionStatement",
															"src": "7676:37:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1948,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8255:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8259:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8255:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1952,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8275:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_RedelegationReward_$2180",
																		"typeString": "contract RedelegationReward"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_RedelegationReward_$2180",
																		"typeString": "contract RedelegationReward"
																	}
																],
																"id": 1951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8267:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1950,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8267:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8267:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1954,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1897,
															"src": "8282:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1945,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "8225:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															}
														},
														"id": 1947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8238:16:12",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 459,
														"src": "8225:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$363_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8225:64:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1956,
												"nodeType": "ExpressionStatement",
												"src": "8225:64:12"
											},
											{
												"assignments": [
													1958
												],
												"declarations": [
													{
														"constant": false,
														"id": 1958,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "8303:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1993,
														"src": "8295:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1957,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8295:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1966,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1963,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8344:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_RedelegationReward_$2180",
																		"typeString": "contract RedelegationReward"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_RedelegationReward_$2180",
																		"typeString": "contract RedelegationReward"
																	}
																],
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8336:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1961,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8336:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8336:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1959,
															"name": "rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1578,
															"src": "8313:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															}
														},
														"id": 1960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8326:9:12",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 320,
														"src": "8313:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8313:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8295:55:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1967,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "8360:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1968,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1958,
															"src": "8373:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1969,
															"name": "rewardsDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "8383:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8373:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8360:38:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1976,
												"nodeType": "IfStatement",
												"src": "8356:81:12",
												"trueBody": {
													"id": 1975,
													"nodeType": "Block",
													"src": "8400:37:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1972,
																	"name": "TooHighReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1517,
																	"src": "8415:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8415:15:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1974,
															"nodeType": "RevertStatement",
															"src": "8408:22:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1977,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "8443:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1978,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "8460:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8466:9:12",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "8460:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8443:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1981,
												"nodeType": "ExpressionStatement",
												"src": "8443:32:12"
											},
											{
												"expression": {
													"id": 1987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1982,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "8481:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1983,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "8496:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8502:9:12",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "8496:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1985,
															"name": "rewardsDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1585,
															"src": "8514:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8496:33:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8481:48:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1988,
												"nodeType": "ExpressionStatement",
												"src": "8481:48:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1990,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1897,
															"src": "8548:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1989,
														"name": "Funded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1629,
														"src": "8541:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8541:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1992,
												"nodeType": "EmitStatement",
												"src": "8536:19:12"
											}
										]
									},
									"documentation": {
										"id": 1895,
										"nodeType": "StructuredDocumentation",
										"src": "7243:285:12",
										"text": " @notice Fund rewards tokens and re-calculate rewards rate.\n Rewards rate will be calculated again from remaining distributable tokens\n and awarding rewards tokens.\n @dev Callable only when unpaused and by owner\n @param reward Funding rewards token amount"
									},
									"functionSelector": "ca1d209d",
									"id": 1994,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1900,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1899,
												"name": "onlyOwner",
												"nameLocations": [
													"7576:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "7576:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "7576:9:12"
										},
										{
											"id": 1902,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1901,
												"name": "whenNotPaused",
												"nameLocations": [
													"7586:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "7586:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "7586:13:12"
										},
										{
											"arguments": [
												{
													"arguments": [
														{
															"hexValue": "30",
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7621:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1905,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7613:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1904,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7613:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7613:10:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1908,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1903,
												"name": "updateReward",
												"nameLocations": [
													"7600:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1679,
												"src": "7600:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "7600:24:12"
										}
									],
									"name": "fund",
									"nameLocation": "7540:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "7558:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "7550:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7550:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7544:24:12"
									},
									"returnParameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7625:0:12"
									},
									"scope": 2180,
									"src": "7531:1029:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2029,
										"nodeType": "Block",
										"src": "8897:208:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2004,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1997,
														"src": "8907:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"id": 2007,
																"name": "stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1575,
																"src": "8931:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$363",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$363",
																	"typeString": "contract IERC20"
																}
															],
															"id": 2006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8923:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2005,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8923:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 2008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8923:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8907:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2014,
												"nodeType": "IfStatement",
												"src": "8903:90:12",
												"trueBody": {
													"id": 2013,
													"nodeType": "Block",
													"src": "8946:47:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2010,
																	"name": "FailedToWithdrawStaking",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1519,
																	"src": "8961:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 2011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8961:25:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2012,
															"nodeType": "RevertStatement",
															"src": "8954:32:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2019,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "9032:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9032:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2021,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "9041:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2016,
																	"name": "tokenAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1997,
																	"src": "9005:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2015,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "8998:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$363_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 2017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8998:20:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$363",
																"typeString": "contract IERC20"
															}
														},
														"id": 2018,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9019:12:12",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 432,
														"src": "8998:33:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$363_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$363_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8998:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2023,
												"nodeType": "ExpressionStatement",
												"src": "8998:55:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2025,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "9074:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2026,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "9088:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2024,
														"name": "Recovered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1641,
														"src": "9064:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9064:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2028,
												"nodeType": "EmitStatement",
												"src": "9059:41:12"
											}
										]
									},
									"documentation": {
										"id": 1995,
										"nodeType": "StructuredDocumentation",
										"src": "8564:234:12",
										"text": " @notice Transfer ERC20 tokens back from this contract to the owner\n except staking token.\n @dev Callable by owner\n @param tokenAddress Recovering token address\n @param tokenAmount Recovering token amount"
									},
									"functionSelector": "8980f11f",
									"id": 2030,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2002,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2001,
												"name": "onlyOwner",
												"nameLocations": [
													"8887:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "8887:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "8887:9:12"
										}
									],
									"name": "recoverERC20",
									"nameLocation": "8810:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "8836:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "8828:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8828:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "8862:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "8854:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8854:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8822:55:12"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8897:0:12"
									},
									"scope": 2180,
									"src": "8801:304:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2044,
										"nodeType": "Block",
										"src": "9428:81:12",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2035,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9441:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9447:9:12",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9441:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2037,
															"name": "periodFinish",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "9459:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9441:30:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2041,
														"name": "periodFinish",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "9492:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "9441:63:12",
													"trueExpression": {
														"expression": {
															"id": 2039,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9474:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2040,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9480:9:12",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9474:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2034,
												"id": 2043,
												"nodeType": "Return",
												"src": "9434:70:12"
											}
										]
									},
									"id": 2045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_lastTimeRewardApplicable",
									"nameLocation": "9368:25:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9393:2:12"
									},
									"returnParameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2045,
												"src": "9419:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9419:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9418:9:12"
									},
									"scope": 2180,
									"src": "9359:150:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2072,
										"nodeType": "Block",
										"src": "9572:210:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2050,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1599,
														"src": "9582:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9597:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9582:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2056,
												"nodeType": "IfStatement",
												"src": "9578:64:12",
												"trueBody": {
													"id": 2055,
													"nodeType": "Block",
													"src": "9600:42:12",
													"statements": [
														{
															"expression": {
																"id": 2053,
																"name": "rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1589,
																"src": "9615:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2049,
															"id": 2054,
															"nodeType": "Return",
															"src": "9608:27:12"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2057,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1589,
														"src": "9660:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2061,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"id": 2058,
																							"name": "_lastTimeRewardApplicable",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2045,
																							"src": "9691:25:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																								"typeString": "function () view returns (uint256)"
																							}
																						},
																						"id": 2059,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "9691:27:12",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"id": 2060,
																						"name": "lastUpdateTime",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1587,
																						"src": "9721:14:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9691:44:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2062,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "9690:46:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2063,
																			"name": "rewardRate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1582,
																			"src": "9739:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "9690:59:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 2065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9752:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "9690:66:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2067,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9689:68:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2068,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "9766:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9689:88:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9660:117:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2049,
												"id": 2071,
												"nodeType": "Return",
												"src": "9647:130:12"
											}
										]
									},
									"id": 2073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_rewardPerToken",
									"nameLocation": "9522:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9537:2:12"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "9563:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9563:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9562:9:12"
									},
									"scope": 2180,
									"src": "9513:269:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2099,
										"nodeType": "Block",
										"src": "9852:145:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2090,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2080,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1603,
																			"src": "9872:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2082,
																		"indexExpression": {
																			"id": 2081,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2075,
																			"src": "9881:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9872:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2088,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 2083,
																						"name": "_rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2073,
																						"src": "9901:15:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																							"typeString": "function () view returns (uint256)"
																						}
																					},
																					"id": 2084,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "9901:17:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"baseExpression": {
																						"id": 2085,
																						"name": "userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1593,
																						"src": "9921:22:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 2087,
																					"indexExpression": {
																						"id": 2086,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2075,
																						"src": "9944:7:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9921:31:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9901:51:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2089,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "9900:53:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9872:81:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2091,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9871:83:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31653138",
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9963:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000"
															},
															"value": "1e18"
														},
														"src": "9871:96:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"baseExpression": {
															"id": 2094,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "9976:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2096,
														"indexExpression": {
															"id": 2095,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2075,
															"src": "9984:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9976:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9871:121:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2079,
												"id": 2098,
												"nodeType": "Return",
												"src": "9858:134:12"
											}
										]
									},
									"id": 2100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_earned",
									"nameLocation": "9795:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9811:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "9803:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9803:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9802:17:12"
									},
									"returnParameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "9843:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9843:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9842:9:12"
									},
									"scope": 2180,
									"src": "9786:211:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1444
									],
									"body": {
										"id": 2108,
										"nodeType": "Block",
										"src": "10363:29:12",
										"statements": [
											{
												"expression": {
													"id": 2106,
													"name": "totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1599,
													"src": "10376:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2105,
												"id": 2107,
												"nodeType": "Return",
												"src": "10369:18:12"
											}
										]
									},
									"documentation": {
										"id": 2101,
										"nodeType": "StructuredDocumentation",
										"src": "10251:48:12",
										"text": " @return Returns totalSupplyLocked"
									},
									"functionSelector": "58341922",
									"id": 2109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupplyLocked",
									"nameLocation": "10311:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10328:2:12"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "10354:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10354:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10353:9:12"
									},
									"scope": 2180,
									"src": "10302:90:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1439
									],
									"body": {
										"id": 2121,
										"nodeType": "Block",
										"src": "10564:35:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2117,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "10577:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2119,
													"indexExpression": {
														"id": 2118,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2112,
														"src": "10586:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10577:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2116,
												"id": 2120,
												"nodeType": "Return",
												"src": "10570:24:12"
											}
										]
									},
									"documentation": {
										"id": 2110,
										"nodeType": "StructuredDocumentation",
										"src": "10395:98:12",
										"text": " @param account User address\n @return Returns balance of staked amount per user."
									},
									"functionSelector": "70a08231",
									"id": 2122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "10505:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10523:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "10515:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10515:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10514:17:12"
									},
									"returnParameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "10555:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10555:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10554:9:12"
									},
									"scope": 2180,
									"src": "10496:103:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1484
									],
									"body": {
										"id": 2131,
										"nodeType": "Block",
										"src": "10789:45:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2128,
														"name": "_lastTimeRewardApplicable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2045,
														"src": "10802:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10802:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2127,
												"id": 2130,
												"nodeType": "Return",
												"src": "10795:34:12"
											}
										]
									},
									"documentation": {
										"id": 2123,
										"nodeType": "StructuredDocumentation",
										"src": "10603:115:12",
										"text": " @return Returns last time to calculate rewards.\n If now is less than the last time, returns now."
									},
									"functionSelector": "80faa57d",
									"id": 2132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nameLocation": "10730:24:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10754:2:12"
									},
									"returnParameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "10780:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10780:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10779:9:12"
									},
									"scope": 2180,
									"src": "10721:113:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1489
									],
									"body": {
										"id": 2141,
										"nodeType": "Block",
										"src": "10965:35:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2138,
														"name": "_rewardPerToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2073,
														"src": "10978:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10978:17:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2137,
												"id": 2140,
												"nodeType": "Return",
												"src": "10971:24:12"
											}
										]
									},
									"documentation": {
										"id": 2133,
										"nodeType": "StructuredDocumentation",
										"src": "10838:66:12",
										"text": " @return Returns total amount of calculated rewards."
									},
									"functionSelector": "cd3daf9d",
									"id": 2142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "10916:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10930:2:12"
									},
									"returnParameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "10956:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10956:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10955:9:12"
									},
									"scope": 2180,
									"src": "10907:93:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1474
									],
									"body": {
										"id": 2154,
										"nodeType": "Block",
										"src": "11160:34:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2151,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2145,
															"src": "11181:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2150,
														"name": "_earned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2100,
														"src": "11173:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11173:16:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2149,
												"id": 2153,
												"nodeType": "Return",
												"src": "11166:23:12"
											}
										]
									},
									"documentation": {
										"id": 2143,
										"nodeType": "StructuredDocumentation",
										"src": "11004:88:12",
										"text": " @param account User address\n @return Returns earned rewards per user."
									},
									"functionSelector": "008cc262",
									"id": 2155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "11104:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11119:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "11111:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11111:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11110:17:12"
									},
									"returnParameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "11151:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11151:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11150:9:12"
									},
									"scope": 2180,
									"src": "11095:99:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1479
									],
									"body": {
										"id": 2165,
										"nodeType": "Block",
										"src": "11338:46:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2161,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1582,
														"src": "11351:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2162,
														"name": "rewardsDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1585,
														"src": "11364:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11351:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2160,
												"id": 2164,
												"nodeType": "Return",
												"src": "11344:35:12"
											}
										]
									},
									"documentation": {
										"id": 2156,
										"nodeType": "StructuredDocumentation",
										"src": "11198:73:12",
										"text": " @return Returns total rewards amount for current duration."
									},
									"functionSelector": "1c1f78eb",
									"id": 2166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardForDuration",
									"nameLocation": "11283:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11303:2:12"
									},
									"returnParameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "11329:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11329:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11328:9:12"
									},
									"scope": 2180,
									"src": "11274:110:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2178,
										"nodeType": "Block",
										"src": "11653:44:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2174,
														"name": "approvedUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1537,
														"src": "11670:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2176,
													"indexExpression": {
														"id": 2175,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2169,
														"src": "11684:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11670:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2173,
												"id": 2177,
												"nodeType": "Return",
												"src": "11663:27:12"
											}
										]
									},
									"documentation": {
										"id": 2167,
										"nodeType": "StructuredDocumentation",
										"src": "11390:192:12",
										"text": "@dev Checks if a user has executed the approveRequiredMethods function.\n @param _user The address of the user to check.\n @return A boolean indicating if the user is approved."
									},
									"functionSelector": "529d6ccf",
									"id": 2179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isUserApproved",
									"nameLocation": "11596:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "11619:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "11611:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11611:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11610:15:12"
									},
									"returnParameters": {
										"id": 2173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "11647:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2171,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11647:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11646:6:12"
									},
									"scope": 2180,
									"src": "11587:110:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2181,
							"src": "862:10838:12",
							"usedErrors": [
								1511,
								1513,
								1517,
								1519
							]
						}
					],
					"src": "36:11664:12"
				},
				"id": 12
			},
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/Staking.sol": {
				"ast": {
					"absolutePath": "gist-e259420aec8d85ea2219e4154536ad35/contracts/Staking.sol",
					"exportedSymbols": {
						"BondStatus": [
							2298
						],
						"Coin": [
							2493
						],
						"Commission": [
							2221
						],
						"CommissionRates": [
							2215
						],
						"Dec": [
							2488
						],
						"DecCoin": [
							2500
						],
						"MSG_CANCEL_UNDELEGATION": [
							2208
						],
						"MSG_DELEGATE": [
							2199
						],
						"MSG_REDELEGATE": [
							2205
						],
						"MSG_UNDELEGATE": [
							2202
						],
						"PageRequest": [
							2293
						],
						"PageResponse": [
							2505
						],
						"Redelegation": [
							2258
						],
						"RedelegationEntry": [
							2273
						],
						"RedelegationEntryResponse": [
							2264
						],
						"RedelegationResponse": [
							2253
						],
						"STAKING_CONTRACT": [
							2195
						],
						"STAKING_PRECOMPILE_ADDRESS": [
							2188
						],
						"StakingI": [
							2481
						],
						"UnbondingDelegationEntry": [
							2282
						],
						"Validator": [
							2245
						],
						"authorization": [
							2183
						]
					},
					"id": 2482,
					"license": "LGPL-v3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2182,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:25:13"
						},
						{
							"absolutePath": "gist-e259420aec8d85ea2219e4154536ad35/contracts/Authorization.sol",
							"file": "./Authorization.sol",
							"id": 2183,
							"nameLocation": "95:13:13",
							"nodeType": "ImportDirective",
							"scope": 2482,
							"sourceUnit": 1208,
							"src": "63:46:13",
							"symbolAliases": [],
							"unitAlias": "authorization"
						},
						{
							"absolutePath": "gist-e259420aec8d85ea2219e4154536ad35/contracts/Types.sol",
							"file": "./Types.sol",
							"id": 2184,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2482,
							"sourceUnit": 2506,
							"src": "110:21:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"constant": true,
							"id": 2188,
							"mutability": "constant",
							"name": "STAKING_PRECOMPILE_ADDRESS",
							"nameLocation": "192:26:13",
							"nodeType": "VariableDeclaration",
							"scope": 2482,
							"src": "175:88:13",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 2186,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "175:7:13",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030383030",
								"id": 2187,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "221:42:13",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"value": "0x0000000000000000000000000000000000000800"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 2195,
							"mutability": "constant",
							"name": "STAKING_CONTRACT",
							"nameLocation": "327:16:13",
							"nodeType": "VariableDeclaration",
							"scope": 2482,
							"src": "309:73:13",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_contract$_StakingI_$2481",
								"typeString": "contract StakingI"
							},
							"typeName": {
								"id": 2191,
								"nodeType": "UserDefinedTypeName",
								"pathNode": {
									"id": 2190,
									"name": "StakingI",
									"nameLocations": [
										"309:8:13"
									],
									"nodeType": "IdentifierPath",
									"referencedDeclaration": 2481,
									"src": "309:8:13"
								},
								"referencedDeclaration": 2481,
								"src": "309:8:13",
								"typeDescriptions": {
									"typeIdentifier": "t_contract$_StakingI_$2481",
									"typeString": "contract StakingI"
								}
							},
							"value": {
								"arguments": [
									{
										"id": 2193,
										"name": "STAKING_PRECOMPILE_ADDRESS",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2188,
										"src": "355:26:13",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								],
								"expression": {
									"argumentTypes": [
										{
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									],
									"id": 2192,
									"name": "StakingI",
									"nodeType": "Identifier",
									"overloadedDeclarations": [],
									"referencedDeclaration": 2481,
									"src": "346:8:13",
									"typeDescriptions": {
										"typeIdentifier": "t_type$_t_contract$_StakingI_$2481_$",
										"typeString": "type(contract StakingI)"
									}
								},
								"id": 2194,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "typeConversion",
								"lValueRequested": false,
								"nameLocations": [],
								"names": [],
								"nodeType": "FunctionCall",
								"src": "346:36:13",
								"tryCall": false,
								"typeDescriptions": {
									"typeIdentifier": "t_contract$_StakingI_$2481",
									"typeString": "contract StakingI"
								}
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 2199,
							"mutability": "constant",
							"name": "MSG_DELEGATE",
							"nameLocation": "452:12:13",
							"nodeType": "VariableDeclaration",
							"scope": 2482,
							"src": "436:68:13",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_string_memory_ptr",
								"typeString": "string"
							},
							"typeName": {
								"id": 2197,
								"name": "string",
								"nodeType": "ElementaryTypeName",
								"src": "436:6:13",
								"typeDescriptions": {
									"typeIdentifier": "t_string_storage_ptr",
									"typeString": "string"
								}
							},
							"value": {
								"hexValue": "2f636f736d6f732e7374616b696e672e763162657461312e4d736744656c6567617465",
								"id": 2198,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "string",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "467:37:13",
								"typeDescriptions": {
									"typeIdentifier": "t_stringliteral_bf6973116593306cc0951019eb89d8793e3ad1184c238374870ee84cdf3b48f2",
									"typeString": "literal_string \"/cosmos.staking.v1beta1.MsgDelegate\""
								},
								"value": "/cosmos.staking.v1beta1.MsgDelegate"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 2202,
							"mutability": "constant",
							"name": "MSG_UNDELEGATE",
							"nameLocation": "522:14:13",
							"nodeType": "VariableDeclaration",
							"scope": 2482,
							"src": "506:72:13",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_string_memory_ptr",
								"typeString": "string"
							},
							"typeName": {
								"id": 2200,
								"name": "string",
								"nodeType": "ElementaryTypeName",
								"src": "506:6:13",
								"typeDescriptions": {
									"typeIdentifier": "t_string_storage_ptr",
									"typeString": "string"
								}
							},
							"value": {
								"hexValue": "2f636f736d6f732e7374616b696e672e763162657461312e4d7367556e64656c6567617465",
								"id": 2201,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "string",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "539:39:13",
								"typeDescriptions": {
									"typeIdentifier": "t_stringliteral_7bec820b0e77f69a2a4cef6889125fb33e19db973c1ca85e0dd86c66e2473513",
									"typeString": "literal_string \"/cosmos.staking.v1beta1.MsgUndelegate\""
								},
								"value": "/cosmos.staking.v1beta1.MsgUndelegate"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 2205,
							"mutability": "constant",
							"name": "MSG_REDELEGATE",
							"nameLocation": "596:14:13",
							"nodeType": "VariableDeclaration",
							"scope": 2482,
							"src": "580:77:13",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_string_memory_ptr",
								"typeString": "string"
							},
							"typeName": {
								"id": 2203,
								"name": "string",
								"nodeType": "ElementaryTypeName",
								"src": "580:6:13",
								"typeDescriptions": {
									"typeIdentifier": "t_string_storage_ptr",
									"typeString": "string"
								}
							},
							"value": {
								"hexValue": "2f636f736d6f732e7374616b696e672e763162657461312e4d7367426567696e526564656c6567617465",
								"id": 2204,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "string",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "613:44:13",
								"typeDescriptions": {
									"typeIdentifier": "t_stringliteral_017e571b15ba8f3567be32b8c9b4c10b5aee7936471accdc36d1737426796a31",
									"typeString": "literal_string \"/cosmos.staking.v1beta1.MsgBeginRedelegate\""
								},
								"value": "/cosmos.staking.v1beta1.MsgBeginRedelegate"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 2208,
							"mutability": "constant",
							"name": "MSG_CANCEL_UNDELEGATION",
							"nameLocation": "675:23:13",
							"nodeType": "VariableDeclaration",
							"scope": 2482,
							"src": "659:96:13",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_string_memory_ptr",
								"typeString": "string"
							},
							"typeName": {
								"id": 2206,
								"name": "string",
								"nodeType": "ElementaryTypeName",
								"src": "659:6:13",
								"typeDescriptions": {
									"typeIdentifier": "t_string_storage_ptr",
									"typeString": "string"
								}
							},
							"value": {
								"hexValue": "2f636f736d6f732e7374616b696e672e763162657461312e4d736743616e63656c556e626f6e64696e6744656c65676174696f6e",
								"id": 2207,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "string",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "701:54:13",
								"typeDescriptions": {
									"typeIdentifier": "t_stringliteral_e1cece22c3c2e8266c4849b858697c9d8fe37da1e4be1a557d17c5ce6597822d",
									"typeString": "literal_string \"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation\""
								},
								"value": "/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation"
							},
							"visibility": "internal"
						},
						{
							"canonicalName": "CommissionRates",
							"id": 2215,
							"members": [
								{
									"constant": false,
									"id": 2210,
									"mutability": "mutable",
									"name": "rate",
									"nameLocation": "882:4:13",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "874:12:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2209,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "874:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2212,
									"mutability": "mutable",
									"name": "maxRate",
									"nameLocation": "900:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "892:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2211,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "892:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2214,
									"mutability": "mutable",
									"name": "maxChangeRate",
									"nameLocation": "921:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 2215,
									"src": "913:21:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2213,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "913:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "CommissionRates",
							"nameLocation": "852:15:13",
							"nodeType": "StructDefinition",
							"scope": 2482,
							"src": "845:92:13",
							"visibility": "public"
						},
						{
							"canonicalName": "Commission",
							"id": 2221,
							"members": [
								{
									"constant": false,
									"id": 2218,
									"mutability": "mutable",
									"name": "commissionRates",
									"nameLocation": "1041:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 2221,
									"src": "1025:31:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_CommissionRates_$2215_storage_ptr",
										"typeString": "struct CommissionRates"
									},
									"typeName": {
										"id": 2217,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2216,
											"name": "CommissionRates",
											"nameLocations": [
												"1025:15:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2215,
											"src": "1025:15:13"
										},
										"referencedDeclaration": 2215,
										"src": "1025:15:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_CommissionRates_$2215_storage_ptr",
											"typeString": "struct CommissionRates"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2220,
									"mutability": "mutable",
									"name": "updateTime",
									"nameLocation": "1070:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 2221,
									"src": "1062:18:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2219,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1062:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Commission",
							"nameLocation": "1008:10:13",
							"nodeType": "StructDefinition",
							"scope": 2482,
							"src": "1001:82:13",
							"visibility": "public"
						},
						{
							"canonicalName": "Validator",
							"id": 2245,
							"members": [
								{
									"constant": false,
									"id": 2223,
									"mutability": "mutable",
									"name": "operatorAddress",
									"nameLocation": "1171:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "1164:22:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2222,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1164:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2225,
									"mutability": "mutable",
									"name": "consensusPubkey",
									"nameLocation": "1199:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "1192:22:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2224,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1192:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2227,
									"mutability": "mutable",
									"name": "jailed",
									"nameLocation": "1225:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "1220:11:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2226,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1220:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2230,
									"mutability": "mutable",
									"name": "status",
									"nameLocation": "1248:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "1237:17:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_BondStatus_$2298",
										"typeString": "enum BondStatus"
									},
									"typeName": {
										"id": 2229,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2228,
											"name": "BondStatus",
											"nameLocations": [
												"1237:10:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2298,
											"src": "1237:10:13"
										},
										"referencedDeclaration": 2298,
										"src": "1237:10:13",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_BondStatus_$2298",
											"typeString": "enum BondStatus"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2232,
									"mutability": "mutable",
									"name": "tokens",
									"nameLocation": "1268:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "1260:14:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2231,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1260:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2234,
									"mutability": "mutable",
									"name": "delegatorShares",
									"nameLocation": "1288:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "1280:23:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2233,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1280:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2236,
									"mutability": "mutable",
									"name": "description",
									"nameLocation": "1316:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "1309:18:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2235,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1309:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2238,
									"mutability": "mutable",
									"name": "unbondingHeight",
									"nameLocation": "1339:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "1333:21:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int64",
										"typeString": "int64"
									},
									"typeName": {
										"id": 2237,
										"name": "int64",
										"nodeType": "ElementaryTypeName",
										"src": "1333:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_int64",
											"typeString": "int64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2240,
									"mutability": "mutable",
									"name": "unbondingTime",
									"nameLocation": "1366:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "1360:19:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int64",
										"typeString": "int64"
									},
									"typeName": {
										"id": 2239,
										"name": "int64",
										"nodeType": "ElementaryTypeName",
										"src": "1360:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_int64",
											"typeString": "int64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2242,
									"mutability": "mutable",
									"name": "commission",
									"nameLocation": "1393:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "1385:18:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1385:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2244,
									"mutability": "mutable",
									"name": "minSelfDelegation",
									"nameLocation": "1417:17:13",
									"nodeType": "VariableDeclaration",
									"scope": 2245,
									"src": "1409:25:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2243,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1409:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Validator",
							"nameLocation": "1148:9:13",
							"nodeType": "StructDefinition",
							"scope": 2482,
							"src": "1141:296:13",
							"visibility": "public"
						},
						{
							"canonicalName": "RedelegationResponse",
							"id": 2253,
							"members": [
								{
									"constant": false,
									"id": 2248,
									"mutability": "mutable",
									"name": "redelegation",
									"nameLocation": "1486:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "1473:25:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Redelegation_$2258_storage_ptr",
										"typeString": "struct Redelegation"
									},
									"typeName": {
										"id": 2247,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2246,
											"name": "Redelegation",
											"nameLocations": [
												"1473:12:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2258,
											"src": "1473:12:13"
										},
										"referencedDeclaration": 2258,
										"src": "1473:12:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Redelegation_$2258_storage_ptr",
											"typeString": "struct Redelegation"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2252,
									"mutability": "mutable",
									"name": "entries",
									"nameLocation": "1532:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2253,
									"src": "1504:35:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_RedelegationEntryResponse_$2264_storage_$dyn_storage_ptr",
										"typeString": "struct RedelegationEntryResponse[]"
									},
									"typeName": {
										"baseType": {
											"id": 2250,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2249,
												"name": "RedelegationEntryResponse",
												"nameLocations": [
													"1504:25:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2264,
												"src": "1504:25:13"
											},
											"referencedDeclaration": 2264,
											"src": "1504:25:13",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RedelegationEntryResponse_$2264_storage_ptr",
												"typeString": "struct RedelegationEntryResponse"
											}
										},
										"id": 2251,
										"nodeType": "ArrayTypeName",
										"src": "1504:27:13",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_RedelegationEntryResponse_$2264_storage_$dyn_storage_ptr",
											"typeString": "struct RedelegationEntryResponse[]"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "RedelegationResponse",
							"nameLocation": "1446:20:13",
							"nodeType": "StructDefinition",
							"scope": 2482,
							"src": "1439:103:13",
							"visibility": "public"
						},
						{
							"canonicalName": "Redelegation",
							"id": 2258,
							"members": [
								{
									"constant": false,
									"id": 2257,
									"mutability": "mutable",
									"name": "entries",
									"nameLocation": "1590:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2258,
									"src": "1570:27:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_RedelegationEntry_$2273_storage_$dyn_storage_ptr",
										"typeString": "struct RedelegationEntry[]"
									},
									"typeName": {
										"baseType": {
											"id": 2255,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2254,
												"name": "RedelegationEntry",
												"nameLocations": [
													"1570:17:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2273,
												"src": "1570:17:13"
											},
											"referencedDeclaration": 2273,
											"src": "1570:17:13",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RedelegationEntry_$2273_storage_ptr",
												"typeString": "struct RedelegationEntry"
											}
										},
										"id": 2256,
										"nodeType": "ArrayTypeName",
										"src": "1570:19:13",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_RedelegationEntry_$2273_storage_$dyn_storage_ptr",
											"typeString": "struct RedelegationEntry[]"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Redelegation",
							"nameLocation": "1551:12:13",
							"nodeType": "StructDefinition",
							"scope": 2482,
							"src": "1544:56:13",
							"visibility": "public"
						},
						{
							"canonicalName": "RedelegationEntryResponse",
							"id": 2264,
							"members": [
								{
									"constant": false,
									"id": 2261,
									"mutability": "mutable",
									"name": "redelegationEntry",
									"nameLocation": "1659:17:13",
									"nodeType": "VariableDeclaration",
									"scope": 2264,
									"src": "1641:35:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_RedelegationEntry_$2273_storage_ptr",
										"typeString": "struct RedelegationEntry"
									},
									"typeName": {
										"id": 2260,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2259,
											"name": "RedelegationEntry",
											"nameLocations": [
												"1641:17:13"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2273,
											"src": "1641:17:13"
										},
										"referencedDeclaration": 2273,
										"src": "1641:17:13",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_RedelegationEntry_$2273_storage_ptr",
											"typeString": "struct RedelegationEntry"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2263,
									"mutability": "mutable",
									"name": "balance",
									"nameLocation": "1690:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2264,
									"src": "1682:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2262,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1682:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "RedelegationEntryResponse",
							"nameLocation": "1609:25:13",
							"nodeType": "StructDefinition",
							"scope": 2482,
							"src": "1602:98:13",
							"visibility": "public"
						},
						{
							"canonicalName": "RedelegationEntry",
							"id": 2273,
							"members": [
								{
									"constant": false,
									"id": 2266,
									"mutability": "mutable",
									"name": "creationHeight",
									"nameLocation": "1739:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2273,
									"src": "1733:20:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int64",
										"typeString": "int64"
									},
									"typeName": {
										"id": 2265,
										"name": "int64",
										"nodeType": "ElementaryTypeName",
										"src": "1733:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_int64",
											"typeString": "int64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2268,
									"mutability": "mutable",
									"name": "completionTime",
									"nameLocation": "1765:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2273,
									"src": "1759:20:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int64",
										"typeString": "int64"
									},
									"typeName": {
										"id": 2267,
										"name": "int64",
										"nodeType": "ElementaryTypeName",
										"src": "1759:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_int64",
											"typeString": "int64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2270,
									"mutability": "mutable",
									"name": "initialBalance",
									"nameLocation": "1793:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2273,
									"src": "1785:22:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2269,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1785:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2272,
									"mutability": "mutable",
									"name": "sharesDst",
									"nameLocation": "1821:9:13",
									"nodeType": "VariableDeclaration",
									"scope": 2273,
									"src": "1813:17:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2271,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1813:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "RedelegationEntry",
							"nameLocation": "1709:17:13",
							"nodeType": "StructDefinition",
							"scope": 2482,
							"src": "1702:131:13",
							"visibility": "public"
						},
						{
							"canonicalName": "UnbondingDelegationEntry",
							"id": 2282,
							"members": [
								{
									"constant": false,
									"id": 2275,
									"mutability": "mutable",
									"name": "creationHeight",
									"nameLocation": "1879:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2282,
									"src": "1873:20:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int64",
										"typeString": "int64"
									},
									"typeName": {
										"id": 2274,
										"name": "int64",
										"nodeType": "ElementaryTypeName",
										"src": "1873:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_int64",
											"typeString": "int64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2277,
									"mutability": "mutable",
									"name": "completionTime",
									"nameLocation": "1905:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2282,
									"src": "1899:20:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int64",
										"typeString": "int64"
									},
									"typeName": {
										"id": 2276,
										"name": "int64",
										"nodeType": "ElementaryTypeName",
										"src": "1899:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_int64",
											"typeString": "int64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2279,
									"mutability": "mutable",
									"name": "initialBalance",
									"nameLocation": "1933:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2282,
									"src": "1925:22:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2278,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1925:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2281,
									"mutability": "mutable",
									"name": "balance",
									"nameLocation": "1961:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2282,
									"src": "1953:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2280,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1953:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "UnbondingDelegationEntry",
							"nameLocation": "1842:24:13",
							"nodeType": "StructDefinition",
							"scope": 2482,
							"src": "1835:136:13",
							"visibility": "public"
						},
						{
							"canonicalName": "PageRequest",
							"id": 2293,
							"members": [
								{
									"constant": false,
									"id": 2284,
									"mutability": "mutable",
									"name": "key",
									"nameLocation": "2004:3:13",
									"nodeType": "VariableDeclaration",
									"scope": 2293,
									"src": "1998:9:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 2283,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "1998:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2286,
									"mutability": "mutable",
									"name": "offset",
									"nameLocation": "2020:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 2293,
									"src": "2013:13:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2285,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "2013:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2288,
									"mutability": "mutable",
									"name": "limit",
									"nameLocation": "2039:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 2293,
									"src": "2032:12:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2287,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "2032:6:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2290,
									"mutability": "mutable",
									"name": "countTotal",
									"nameLocation": "2055:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 2293,
									"src": "2050:15:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2289,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2050:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2292,
									"mutability": "mutable",
									"name": "reverse",
									"nameLocation": "2076:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2293,
									"src": "2071:12:13",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 2291,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2071:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "PageRequest",
							"nameLocation": "1980:11:13",
							"nodeType": "StructDefinition",
							"scope": 2482,
							"src": "1973:113:13",
							"visibility": "public"
						},
						{
							"canonicalName": "BondStatus",
							"id": 2298,
							"members": [
								{
									"id": 2294,
									"name": "Unspecified",
									"nameLocation": "2148:11:13",
									"nodeType": "EnumValue",
									"src": "2148:11:13"
								},
								{
									"id": 2295,
									"name": "Unbonded",
									"nameLocation": "2165:8:13",
									"nodeType": "EnumValue",
									"src": "2165:8:13"
								},
								{
									"id": 2296,
									"name": "Unbonding",
									"nameLocation": "2179:9:13",
									"nodeType": "EnumValue",
									"src": "2179:9:13"
								},
								{
									"id": 2297,
									"name": "Bonded",
									"nameLocation": "2194:6:13",
									"nodeType": "EnumValue",
									"src": "2194:6:13"
								}
							],
							"name": "BondStatus",
							"nameLocation": "2131:10:13",
							"nodeType": "EnumDefinition",
							"src": "2126:76:13"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2300,
										"name": "authorization.AuthorizationI",
										"nameLocations": [
											"2555:13:13",
											"2569:14:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1207,
										"src": "2555:28:13"
									},
									"id": 2301,
									"nodeType": "InheritanceSpecifier",
									"src": "2555:28:13"
								}
							],
							"canonicalName": "StakingI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2299,
								"nodeType": "StructuredDocumentation",
								"src": "2204:329:13",
								"text": "@author Evmos Team\n @title Staking Precompiled Contract\n @dev The interface through which solidity contracts will interact with staking.\n We follow this same interface including four-byte function selectors, in the precompile that\n wraps the pallet.\n @custom:address 0x0000000000000000000000000000000000000800"
							},
							"fullyImplemented": false,
							"id": 2481,
							"linearizedBaseContracts": [
								2481,
								1207
							],
							"name": "StakingI",
							"nameLocation": "2543:8:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2302,
										"nodeType": "StructuredDocumentation",
										"src": "2590:295:13",
										"text": "@dev Defines a method for performing a delegation of coins from a delegator to a validator.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of the Coin to be delegated to the validator"
									},
									"functionSelector": "53266bbb",
									"id": 2313,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegate",
									"nameLocation": "2899:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2304,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "2925:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "2917:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2917:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "2965:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "2951:30:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2305,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2951:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2999:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "2991:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2991:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2907:104:13"
									},
									"returnParameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "completionTime",
												"nameLocation": "3036:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2313,
												"src": "3030:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2310,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "3030:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3029:22:13"
									},
									"scope": 2481,
									"src": "2890:162:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2314,
										"nodeType": "StructuredDocumentation",
										"src": "3058:356:13",
										"text": "@dev Defines a method for performing an undelegation from a delegate and a validator.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount to be undelegated from the validator\n @return completionTime The time when the undelegation is completed"
									},
									"functionSelector": "3edab33c",
									"id": 2325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "undelegate",
									"nameLocation": "3428:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "3456:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "3448:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2315,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3448:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "3496:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "3482:30:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2317,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3482:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3530:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "3522:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3522:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3438:104:13"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "completionTime",
												"nameLocation": "3567:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "3561:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2322,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "3561:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3560:22:13"
									},
									"scope": 2481,
									"src": "3419:164:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2326,
										"nodeType": "StructuredDocumentation",
										"src": "3589:519:13",
										"text": "@dev Defines a method for performing a redelegation\n of coins from a delegator and source validator to a destination validator.\n @param delegatorAddress The address of the delegator\n @param validatorSrcAddress The validator from which the redelegation is initiated\n @param validatorDstAddress The validator to which the redelegation is destined\n @param amount The amount to be redelegated to the validator\n @return completionTime The time when the redelegation is completed"
									},
									"functionSelector": "54b826f5",
									"id": 2339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redelegate",
									"nameLocation": "4122:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2328,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "4150:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "4142:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4142:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2330,
												"mutability": "mutable",
												"name": "validatorSrcAddress",
												"nameLocation": "4190:19:13",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "4176:33:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2329,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4176:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "validatorDstAddress",
												"nameLocation": "4233:19:13",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "4219:33:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2331,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4219:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2334,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4270:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "4262:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4132:150:13"
									},
									"returnParameters": {
										"id": 2338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "completionTime",
												"nameLocation": "4307:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2339,
												"src": "4301:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2336,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "4301:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4300:22:13"
									},
									"scope": 2481,
									"src": "4113:210:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2340,
										"nodeType": "StructuredDocumentation",
										"src": "4329:465:13",
										"text": "@dev Allows delegators to cancel the unbondingDelegation entry\n and to delegate back to a previous validator.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of the Coin\n @param creationHeight The height at which the unbonding took place\n @return completionTime The time when the cancellation of the unbonding delegation is completed"
									},
									"functionSelector": "12d58dfe",
									"id": 2353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "cancelUnbondingDelegation",
									"nameLocation": "4808:25:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "4851:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "4843:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4843:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "4891:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "4877:30:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2343,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4877:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4925:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "4917:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4917:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2348,
												"mutability": "mutable",
												"name": "creationHeight",
												"nameLocation": "4949:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "4941:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4941:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4833:136:13"
									},
									"returnParameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "completionTime",
												"nameLocation": "4994:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2353,
												"src": "4988:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 2350,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "4988:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4987:22:13"
									},
									"scope": 2481,
									"src": "4799:211:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2354,
										"nodeType": "StructuredDocumentation",
										"src": "5016:377:13",
										"text": "@dev Queries the given amount of the bond denomination to a validator.\n @param delegatorAddress The address of the delegator.\n @param validatorAddress The address of the validator.\n @return shares The amount of shares, that the delegator has received.\n @return balance The amount in Coin, that the delegator has delegated to the given validator."
									},
									"functionSelector": "241774e6",
									"id": 2366,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "delegation",
									"nameLocation": "5407:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "5435:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "5427:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5427:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "5475:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "5461:30:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2357,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5461:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5417:80:13"
									},
									"returnParameters": {
										"id": 2365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2361,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "5529:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "5521:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5521:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5551:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2366,
												"src": "5537:21:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Coin_$2493_calldata_ptr",
													"typeString": "struct Coin"
												},
												"typeName": {
													"id": 2363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2362,
														"name": "Coin",
														"nameLocations": [
															"5537:4:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2493,
														"src": "5537:4:13"
													},
													"referencedDeclaration": 2493,
													"src": "5537:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Coin_$2493_storage_ptr",
														"typeString": "struct Coin"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5520:39:13"
									},
									"scope": 2481,
									"src": "5398:162:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2367,
										"nodeType": "StructuredDocumentation",
										"src": "5566:322:13",
										"text": "@dev Returns the delegation shares and coins, that are currently\n unbonding for a given delegator and validator pair.\n @param delegatorAddress The address of the delegator.\n @param validatorAddress The address of the validator.\n @return entries The delegations that are currently unbonding."
									},
									"functionSelector": "a03ffee1",
									"id": 2378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unbondingDelegation",
									"nameLocation": "5902:19:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "5939:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "5931:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5931:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "5979:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "5965:30:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2370,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5965:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5921:80:13"
									},
									"returnParameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "entries",
												"nameLocation": "6061:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2378,
												"src": "6025:43:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UnbondingDelegationEntry_$2282_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct UnbondingDelegationEntry[]"
												},
												"typeName": {
													"baseType": {
														"id": 2374,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2373,
															"name": "UnbondingDelegationEntry",
															"nameLocations": [
																"6025:24:13"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2282,
															"src": "6025:24:13"
														},
														"referencedDeclaration": 2282,
														"src": "6025:24:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UnbondingDelegationEntry_$2282_storage_ptr",
															"typeString": "struct UnbondingDelegationEntry"
														}
													},
													"id": 2375,
													"nodeType": "ArrayTypeName",
													"src": "6025:26:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UnbondingDelegationEntry_$2282_storage_$dyn_storage_ptr",
														"typeString": "struct UnbondingDelegationEntry[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:45:13"
									},
									"scope": 2481,
									"src": "5893:177:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2379,
										"nodeType": "StructuredDocumentation",
										"src": "6076:203:13",
										"text": "@dev Queries validator info for a given validator address.\n @param validatorAddress The address of the validator.\n @return validators The validator info for the given validator address."
									},
									"functionSelector": "0bc82a17",
									"id": 2388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validator",
									"nameLocation": "6293:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "6326:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "6312:30:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2380,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6312:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6302:46:13"
									},
									"returnParameters": {
										"id": 2387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2386,
												"mutability": "mutable",
												"name": "validators",
												"nameLocation": "6406:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2388,
												"src": "6385:31:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Validator_$2245_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct Validator[]"
												},
												"typeName": {
													"baseType": {
														"id": 2384,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2383,
															"name": "Validator",
															"nameLocations": [
																"6385:9:13"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2245,
															"src": "6385:9:13"
														},
														"referencedDeclaration": 2245,
														"src": "6385:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Validator_$2245_storage_ptr",
															"typeString": "struct Validator"
														}
													},
													"id": 2385,
													"nodeType": "ArrayTypeName",
													"src": "6385:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Validator_$2245_storage_$dyn_storage_ptr",
														"typeString": "struct Validator[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6375:47:13"
									},
									"scope": 2481,
									"src": "6284:139:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2389,
										"nodeType": "StructuredDocumentation",
										"src": "6429:214:13",
										"text": "@dev Queries all validators that match the given status.\n @param status Enables to query for validators matching a given status.\n @param pageRequest Defines an optional pagination for the request."
									},
									"functionSelector": "186b2167",
									"id": 2404,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "validators",
									"nameLocation": "6657:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "6691:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "6677:20:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2390,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6677:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "pageRequest",
												"nameLocation": "6728:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "6707:32:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PageRequest_$2293_calldata_ptr",
													"typeString": "struct PageRequest"
												},
												"typeName": {
													"id": 2393,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2392,
														"name": "PageRequest",
														"nameLocations": [
															"6707:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2293,
														"src": "6707:11:13"
													},
													"referencedDeclaration": 2293,
													"src": "6707:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PageRequest_$2293_storage_ptr",
														"typeString": "struct PageRequest"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:78:13"
									},
									"returnParameters": {
										"id": 2403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "validators",
												"nameLocation": "6799:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "6778:31:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Validator_$2245_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct Validator[]"
												},
												"typeName": {
													"baseType": {
														"id": 2397,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2396,
															"name": "Validator",
															"nameLocations": [
																"6778:9:13"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2245,
															"src": "6778:9:13"
														},
														"referencedDeclaration": 2245,
														"src": "6778:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Validator_$2245_storage_ptr",
															"typeString": "struct Validator"
														}
													},
													"id": 2398,
													"nodeType": "ArrayTypeName",
													"src": "6778:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Validator_$2245_storage_$dyn_storage_ptr",
														"typeString": "struct Validator[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2402,
												"mutability": "mutable",
												"name": "pageResponse",
												"nameLocation": "6841:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "6819:34:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PageResponse_$2505_calldata_ptr",
													"typeString": "struct PageResponse"
												},
												"typeName": {
													"id": 2401,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2400,
														"name": "PageResponse",
														"nameLocations": [
															"6819:12:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2505,
														"src": "6819:12:13"
													},
													"referencedDeclaration": 2505,
													"src": "6819:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PageResponse_$2505_storage_ptr",
														"typeString": "struct PageResponse"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6768:91:13"
									},
									"scope": 2481,
									"src": "6648:212:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2405,
										"nodeType": "StructuredDocumentation",
										"src": "6866:448:13",
										"text": "@dev Queries all redelegations from a source to a destination validator for a given delegator.\n @param delegatorAddress The address of the delegator.\n @param srcValidatorAddress Defines the validator address to redelegate from.\n @param dstValidatorAddress Defines the validator address to redelegate to.\n @return entries The active redelegations for the given delegator, source and destination validator combination."
									},
									"functionSelector": "7d9f939c",
									"id": 2418,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redelegation",
									"nameLocation": "7328:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "7358:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "7350:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7350:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "srcValidatorAddress",
												"nameLocation": "7398:19:13",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "7384:33:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2408,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7384:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "dstValidatorAddress",
												"nameLocation": "7441:19:13",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "7427:33:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2410,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7427:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7340:126:13"
									},
									"returnParameters": {
										"id": 2417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "entries",
												"nameLocation": "7519:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "7490:36:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_RedelegationEntry_$2273_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "struct RedelegationEntry[]"
												},
												"typeName": {
													"baseType": {
														"id": 2414,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2413,
															"name": "RedelegationEntry",
															"nameLocations": [
																"7490:17:13"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 2273,
															"src": "7490:17:13"
														},
														"referencedDeclaration": 2273,
														"src": "7490:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RedelegationEntry_$2273_storage_ptr",
															"typeString": "struct RedelegationEntry"
														}
													},
													"id": 2415,
													"nodeType": "ArrayTypeName",
													"src": "7490:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_RedelegationEntry_$2273_storage_$dyn_storage_ptr",
														"typeString": "struct RedelegationEntry[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7489:38:13"
									},
									"scope": 2481,
									"src": "7319:209:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2419,
										"nodeType": "StructuredDocumentation",
										"src": "7534:567:13",
										"text": "@dev Queries all redelegations from a source to to a destination validator\n for a given delegator in a specified pagination manner.\n @param delegatorAddress The address of the delegator.\n @param srcValidatorAddress Defines the validator address to redelegate from.\n @param dstValidatorAddress Defines the validator address to redelegate to.\n @param pageRequest Defines an optional pagination for the request.\n @return response Holds the redelegations for the given delegator, source and destination validator combination."
									},
									"functionSelector": "10a2851c",
									"id": 2434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "redelegations",
									"nameLocation": "8115:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2421,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "8146:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "8138:24:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8138:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2423,
												"mutability": "mutable",
												"name": "srcValidatorAddress",
												"nameLocation": "8186:19:13",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "8172:33:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2422,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8172:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "dstValidatorAddress",
												"nameLocation": "8229:19:13",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "8215:33:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2424,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8215:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2428,
												"mutability": "mutable",
												"name": "pageRequest",
												"nameLocation": "8279:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "8258:32:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PageRequest_$2293_calldata_ptr",
													"typeString": "struct PageRequest"
												},
												"typeName": {
													"id": 2427,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2426,
														"name": "PageRequest",
														"nameLocations": [
															"8258:11:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2293,
														"src": "8258:11:13"
													},
													"referencedDeclaration": 2293,
													"src": "8258:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PageRequest_$2293_storage_ptr",
														"typeString": "struct PageRequest"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8128:168:13"
									},
									"returnParameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "response",
												"nameLocation": "8350:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "8320:38:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_RedelegationResponse_$2253_calldata_ptr",
													"typeString": "struct RedelegationResponse"
												},
												"typeName": {
													"id": 2431,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2430,
														"name": "RedelegationResponse",
														"nameLocations": [
															"8320:20:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2253,
														"src": "8320:20:13"
													},
													"referencedDeclaration": 2253,
													"src": "8320:20:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RedelegationResponse_$2253_storage_ptr",
														"typeString": "struct RedelegationResponse"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8319:40:13"
									},
									"scope": 2481,
									"src": "8106:254:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2435,
										"nodeType": "StructuredDocumentation",
										"src": "8366:388:13",
										"text": "@dev Delegate defines an Event emitted when a given amount of tokens are delegated from the\n delegator address to the validator address.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of Coin being delegated\n @param newShares The new delegation shares being held"
									},
									"eventSelector": "5a5adf903ba232ef17ed8be4ef872e1f60d17c5ba26a1ecbf44e388a672b118a",
									"id": 2445,
									"name": "Delegate",
									"nameLocation": "8765:8:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2437,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "8799:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "8783:32:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8783:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2439,
												"indexed": true,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "8840:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "8825:31:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8825:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2441,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8874:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "8866:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8866:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2443,
												"indexed": false,
												"mutability": "mutable",
												"name": "newShares",
												"nameLocation": "8898:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "8890:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8890:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8773:140:13"
									},
									"src": "8759:155:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2446,
										"nodeType": "StructuredDocumentation",
										"src": "8920:397:13",
										"text": "@dev Unbond defines an Event emitted when a given amount of tokens are unbonded from the\n validator address to the delegator address.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of Coin being unbonded\n @param completionTime The time at which the unbonding is completed"
									},
									"eventSelector": "1f6938077d62f3610504390aa8486c8172406456826a39907ca0cd40c8fe700a",
									"id": 2456,
									"name": "Unbond",
									"nameLocation": "9328:6:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2448,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "9360:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "9344:32:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9344:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2450,
												"indexed": true,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "9401:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "9386:31:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9386:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2452,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9435:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "9427:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9427:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"indexed": false,
												"mutability": "mutable",
												"name": "completionTime",
												"nameLocation": "9459:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2456,
												"src": "9451:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9451:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9334:145:13"
									},
									"src": "9322:158:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2457,
										"nodeType": "StructuredDocumentation",
										"src": "9486:571:13",
										"text": "@dev Redelegate defines an Event emitted when a given amount of tokens are redelegated from\n the source validator address to the destination validator address.\n @param delegatorAddress The address of the delegator\n @param validatorSrcAddress The address of the validator from which the delegation is retracted\n @param validatorDstAddress The address of the validator to which the delegation is directed\n @param amount The amount of Coin being redelegated\n @param completionTime The time at which the redelegation is completed"
									},
									"eventSelector": "43c8e32499593a7da63d4aec64367350a850199e23d2ce6a6e067365938d1bb6",
									"id": 2469,
									"name": "Redelegate",
									"nameLocation": "10068:10:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2459,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "10104:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "10088:32:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10088:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2461,
												"indexed": true,
												"mutability": "mutable",
												"name": "validatorSrcAddress",
												"nameLocation": "10145:19:13",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "10130:34:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2460,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10130:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2463,
												"indexed": true,
												"mutability": "mutable",
												"name": "validatorDstAddress",
												"nameLocation": "10189:19:13",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "10174:34:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2462,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10174:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2465,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10226:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "10218:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10218:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2467,
												"indexed": false,
												"mutability": "mutable",
												"name": "completionTime",
												"nameLocation": "10250:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "10242:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10242:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10078:192:13"
									},
									"src": "10062:209:13"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2470,
										"nodeType": "StructuredDocumentation",
										"src": "10277:501:13",
										"text": "@dev CancelUnbondingDelegation defines an Event emitted when a given amount of tokens\n that are in the process of unbonding from the validator address are bonded again.\n @param delegatorAddress The address of the delegator\n @param validatorAddress The address of the validator\n @param amount The amount of Coin that was in the unbonding process which is to be cancelled\n @param creationHeight The block height at which the unbonding of a delegation was initiated"
									},
									"eventSelector": "4df30dbaa29da95e67f93ec6d865329c7e7e870b3939583df3c8889319c89126",
									"id": 2480,
									"name": "CancelUnbondingDelegation",
									"nameLocation": "10789:25:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2472,
												"indexed": true,
												"mutability": "mutable",
												"name": "delegatorAddress",
												"nameLocation": "10840:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "10824:32:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10824:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2474,
												"indexed": true,
												"mutability": "mutable",
												"name": "validatorAddress",
												"nameLocation": "10881:16:13",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "10866:31:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2473,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10866:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2476,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10915:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "10907:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10907:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2478,
												"indexed": false,
												"mutability": "mutable",
												"name": "creationHeight",
												"nameLocation": "10939:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "10931:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10931:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10814:145:13"
									},
									"src": "10783:177:13"
								}
							],
							"scope": 2482,
							"src": "2533:8429:13",
							"usedErrors": []
						}
					],
					"src": "36:10927:13"
				},
				"id": 13
			},
			"gist-e259420aec8d85ea2219e4154536ad35/contracts/Types.sol": {
				"ast": {
					"absolutePath": "gist-e259420aec8d85ea2219e4154536ad35/contracts/Types.sol",
					"exportedSymbols": {
						"Coin": [
							2493
						],
						"Dec": [
							2488
						],
						"DecCoin": [
							2500
						],
						"PageResponse": [
							2505
						]
					},
					"id": 2506,
					"license": "LGPL-v3",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2483,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "36:25:14"
						},
						{
							"canonicalName": "Dec",
							"id": 2488,
							"members": [
								{
									"constant": false,
									"id": 2485,
									"mutability": "mutable",
									"name": "value",
									"nameLocation": "88:5:14",
									"nodeType": "VariableDeclaration",
									"scope": 2488,
									"src": "80:13:14",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2484,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "80:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2487,
									"mutability": "mutable",
									"name": "precision",
									"nameLocation": "105:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 2488,
									"src": "99:15:14",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2486,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "99:5:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Dec",
							"nameLocation": "70:3:14",
							"nodeType": "StructDefinition",
							"scope": 2506,
							"src": "63:54:14",
							"visibility": "public"
						},
						{
							"canonicalName": "Coin",
							"id": 2493,
							"members": [
								{
									"constant": false,
									"id": 2490,
									"mutability": "mutable",
									"name": "denom",
									"nameLocation": "229:5:14",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "222:12:14",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2489,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "222:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2492,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "248:6:14",
									"nodeType": "VariableDeclaration",
									"scope": 2493,
									"src": "240:14:14",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2491,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "240:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Coin",
							"nameLocation": "211:4:14",
							"nodeType": "StructDefinition",
							"scope": 2506,
							"src": "204:53:14",
							"visibility": "public"
						},
						{
							"canonicalName": "DecCoin",
							"id": 2500,
							"members": [
								{
									"constant": false,
									"id": 2495,
									"mutability": "mutable",
									"name": "denom",
									"nameLocation": "388:5:14",
									"nodeType": "VariableDeclaration",
									"scope": 2500,
									"src": "381:12:14",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 2494,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "381:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2497,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "407:6:14",
									"nodeType": "VariableDeclaration",
									"scope": 2500,
									"src": "399:14:14",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2496,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "399:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2499,
									"mutability": "mutable",
									"name": "precision",
									"nameLocation": "425:9:14",
									"nodeType": "VariableDeclaration",
									"scope": 2500,
									"src": "419:15:14",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 2498,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "419:5:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "DecCoin",
							"nameLocation": "367:7:14",
							"nodeType": "StructDefinition",
							"scope": 2506,
							"src": "360:77:14",
							"visibility": "public"
						},
						{
							"canonicalName": "PageResponse",
							"id": 2505,
							"members": [
								{
									"constant": false,
									"id": 2502,
									"mutability": "mutable",
									"name": "nextKey",
									"nameLocation": "538:7:14",
									"nodeType": "VariableDeclaration",
									"scope": 2505,
									"src": "532:13:14",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes_storage_ptr",
										"typeString": "bytes"
									},
									"typeName": {
										"id": 2501,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "532:5:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 2504,
									"mutability": "mutable",
									"name": "total",
									"nameLocation": "558:5:14",
									"nodeType": "VariableDeclaration",
									"scope": 2505,
									"src": "551:12:14",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint64",
										"typeString": "uint64"
									},
									"typeName": {
										"id": 2503,
										"name": "uint64",
										"nodeType": "ElementaryTypeName",
										"src": "551:6:14",
										"typeDescriptions": {
											"typeIdentifier": "t_uint64",
											"typeString": "uint64"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "PageResponse",
							"nameLocation": "513:12:14",
							"nodeType": "StructDefinition",
							"scope": 2506,
							"src": "506:60:14",
							"visibility": "public"
						}
					],
					"src": "36:531:14"
				},
				"id": 14
			}
		}
	}
}